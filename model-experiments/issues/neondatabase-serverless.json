[{"url":"https://api.github.com/repos/neondatabase/serverless/issues/83","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/83/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/83/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/83/events","html_url":"https://github.com/neondatabase/serverless/pull/83","id":2327313981,"node_id":"PR_kwDOIQekeM5xGVF1","number":83,"title":"Add stack traces to NeonDbError when captureStackTrace is available","user":{"login":"brettimus","id":3201327,"node_id":"MDQ6VXNlcjMyMDEzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/3201327?v=4","gravatar_id":"","url":"https://api.github.com/users/brettimus","html_url":"https://github.com/brettimus","followers_url":"https://api.github.com/users/brettimus/followers","following_url":"https://api.github.com/users/brettimus/following{/other_user}","gists_url":"https://api.github.com/users/brettimus/gists{/gist_id}","starred_url":"https://api.github.com/users/brettimus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brettimus/subscriptions","organizations_url":"https://api.github.com/users/brettimus/orgs","repos_url":"https://api.github.com/users/brettimus/repos","events_url":"https://api.github.com/users/brettimus/events{/privacy}","received_events_url":"https://api.github.com/users/brettimus/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-05-31T09:01:24Z","updated_at":"2024-05-31T09:01:24Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/83","html_url":"https://github.com/neondatabase/serverless/pull/83","diff_url":"https://github.com/neondatabase/serverless/pull/83.diff","patch_url":"https://github.com/neondatabase/serverless/pull/83.patch","merged_at":null},"body":"Fixes https://github.com/neondatabase/serverless/issues/82","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/83/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/83/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/82","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/82/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/82/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/82/events","html_url":"https://github.com/neondatabase/serverless/issues/82","id":2312787490,"node_id":"I_kwDOIQekeM6J2lYi","number":82,"title":"`NeonDbError` does not preserve a stack trace when it is thrown","user":{"login":"brettimus","id":3201327,"node_id":"MDQ6VXNlcjMyMDEzMjc=","avatar_url":"https://avatars.githubusercontent.com/u/3201327?v=4","gravatar_id":"","url":"https://api.github.com/users/brettimus","html_url":"https://github.com/brettimus","followers_url":"https://api.github.com/users/brettimus/followers","following_url":"https://api.github.com/users/brettimus/following{/other_user}","gists_url":"https://api.github.com/users/brettimus/gists{/gist_id}","starred_url":"https://api.github.com/users/brettimus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/brettimus/subscriptions","organizations_url":"https://api.github.com/users/brettimus/orgs","repos_url":"https://api.github.com/users/brettimus/repos","events_url":"https://api.github.com/users/brettimus/events{/privacy}","received_events_url":"https://api.github.com/users/brettimus/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-05-23T12:24:34Z","updated_at":"2024-05-31T09:01:56Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\n- Execute a query with `neon` that will return a `NeonDbError`\r\n- Catch the error into a variable called `error`\r\n- Inspect `error.stack` (and `error.sourceError.stack` if you're so inclined)\r\n\r\n## Expected result\r\n\r\nThe `NeonDbError` should include a stack trace whenever possible\r\n\r\n## Actual result\r\n\r\nInstances of `NeonDbError` do not include a stack trace\r\n\r\n## Environment\r\n\r\nCloudflare workers (but also everywhere)\r\n\r\n## Logs, links\r\n\r\nThe stack trace of an error is helpful for error monitoring tools, to be able to link back to the line of code that triggered the error.\r\n\r\nAs of writing, `NeonDbError` does indeed inherit from `Error`, but it does not include a stack trace, as `Error` usually does.\r\n\r\nThis would be possible to implement with a quick code change, adding a constructor to the custom `NeonDbError` class:\r\n\r\n```ts\r\n  constructor(message: string) {\r\n    super(message);\r\n    if (Error.captureStackTrace) {\r\n      Error.captureStackTrace(this, BugError);\r\n    }\r\n  }\r\n``` \r\n\r\nI'm not sure of serverless environment support for `Error.captureStackTrace`, since this is not a web standard, per se. However, it does exist for Cloudflare Workers. That's why there's a conditional check for `Error.captureStackTrace`.\r\n\r\nI'm willing to pick this up in a PR if you all are open to it!! Would be more than happy to contribute.\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/82/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/82/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/81","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/81/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/81/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/81/events","html_url":"https://github.com/neondatabase/serverless/issues/81","id":2305446393,"node_id":"I_kwDOIQekeM6JalH5","number":81,"title":"Relation does not exist in Deno Deploy sometimes","user":{"login":"w7it","id":67586192,"node_id":"MDQ6VXNlcjY3NTg2MTky","avatar_url":"https://avatars.githubusercontent.com/u/67586192?v=4","gravatar_id":"","url":"https://api.github.com/users/w7it","html_url":"https://github.com/w7it","followers_url":"https://api.github.com/users/w7it/followers","following_url":"https://api.github.com/users/w7it/following{/other_user}","gists_url":"https://api.github.com/users/w7it/gists{/gist_id}","starred_url":"https://api.github.com/users/w7it/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/w7it/subscriptions","organizations_url":"https://api.github.com/users/w7it/orgs","repos_url":"https://api.github.com/users/w7it/repos","events_url":"https://api.github.com/users/w7it/events{/privacy}","received_events_url":"https://api.github.com/users/w7it/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-05-20T08:38:06Z","updated_at":"2024-05-21T18:32:22Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\nSometimes after fresh deployment to Deno Deploy my API is stucked with error `relation \"...\" does not exist`\r\n\r\nI do nothing and after some time without any changes in code and configs it starts working again perfectly...\r\n\r\nHow it possible?.. I think the problem could be in the Deno Deploy and how they are sharing resources between lambdas... But I'm still investigating \r\n\r\nMaybe somebody has same problem?\r\n\r\n## Expected result\r\nIt should works fine\r\n\r\n## Actual result\r\nIt works bad sometimes\r\n\r\n## Environment\r\nDeno Deploy\r\n`@neondatabase/serverless` `v0.9.3` from npm\r\n\r\n## Logs, links\r\n```\r\nerror: error: relation \"users\" does not exist\r\n    at sn.parseErrorMessage (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:1182:6)\r\n    at sn.handlePacket (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:1143:13)\r\n    at sn.parse (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:1127:36)\r\n    at E.<anonymous> (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:1190:16)\r\n    at E.emit (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:397:12)\r\n    at WebSocket.<anonymous> (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:988:80)\r\n    at innerInvokeEventListeners (ext:deno_web/02_event.js:754:7)\r\n    at invokeEventListeners (ext:deno_web/02_event.js:801:5)\r\n    at dispatch (ext:deno_web/02_event.js:658:9)\r\n    at WebSocket.[[[eventLoop]]] (ext:deno_websocket/01_websocket.js:456:11)\r\nCaused by error: relation \"users\" does not exist\r\n    at sn.parseErrorMessage (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:1182:6)\r\n    at sn.handlePacket (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:1143:13)\r\n    at sn.parse (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:1127:36)\r\n    at E.<anonymous> (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:1190:16)\r\n    at E.emit (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:397:12)\r\n    at WebSocket.<anonymous> (file:///node_modules/.deno/@neondatabase+serverless@0.9.3/node_modules/@neondatabase/serverless/index.mjs:988:80)\r\n    at innerInvokeEventListeners (ext:deno_web/0\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/81/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/81/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/80","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/80/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/80/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/80/events","html_url":"https://github.com/neondatabase/serverless/issues/80","id":2287917990,"node_id":"I_kwDOIQekeM6IXtum","number":80,"title":"How to use serverless in the browser?","user":{"login":"ceving","id":795748,"node_id":"MDQ6VXNlcjc5NTc0OA==","avatar_url":"https://avatars.githubusercontent.com/u/795748?v=4","gravatar_id":"","url":"https://api.github.com/users/ceving","html_url":"https://github.com/ceving","followers_url":"https://api.github.com/users/ceving/followers","following_url":"https://api.github.com/users/ceving/following{/other_user}","gists_url":"https://api.github.com/users/ceving/gists{/gist_id}","starred_url":"https://api.github.com/users/ceving/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ceving/subscriptions","organizations_url":"https://api.github.com/users/ceving/orgs","repos_url":"https://api.github.com/users/ceving/repos","events_url":"https://api.github.com/users/ceving/events{/privacy}","received_events_url":"https://api.github.com/users/ceving/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-05-09T15:22:58Z","updated_at":"2024-05-09T16:28:47Z","closed_at":"2024-05-09T16:28:47Z","author_association":"NONE","active_lock_reason":null,"body":"I tried this, but `serverless.mjs` does not export `neon`.\r\n\r\n~~~\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"utf-8\">\r\n    <script type=\"module\">\r\n      // about:config -> security.fileuri.strict_origin_policy -> false\r\n      import * as neon from './serverless/dist/serverless.mjs';\r\n      console.log(neon);\r\n      const url = 'postgresql://***';\r\n      const sql = neon(url);\r\n    </script>\r\n  </head>\r\n  <body>\r\n  </body>\r\n</html>\r\n~~~\r\n\r\nThe output is just:\r\n\r\n    Array(4) [ \"batchQueryTest\", \"cf\", \"latencies\", \"neonConfig\" ]\r\n\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/80/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/80/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/79","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/79/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/79/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/79/events","html_url":"https://github.com/neondatabase/serverless/pull/79","id":2287767920,"node_id":"PR_kwDOIQekeM5u_rwE","number":79,"title":"Updated CHANGELOG","user":{"login":"jawj","id":141620,"node_id":"MDQ6VXNlcjE0MTYyMA==","avatar_url":"https://avatars.githubusercontent.com/u/141620?v=4","gravatar_id":"","url":"https://api.github.com/users/jawj","html_url":"https://github.com/jawj","followers_url":"https://api.github.com/users/jawj/followers","following_url":"https://api.github.com/users/jawj/following{/other_user}","gists_url":"https://api.github.com/users/jawj/gists{/gist_id}","starred_url":"https://api.github.com/users/jawj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jawj/subscriptions","organizations_url":"https://api.github.com/users/jawj/orgs","repos_url":"https://api.github.com/users/jawj/repos","events_url":"https://api.github.com/users/jawj/events{/privacy}","received_events_url":"https://api.github.com/users/jawj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-05-09T14:04:01Z","updated_at":"2024-05-09T14:33:25Z","closed_at":"2024-05-09T14:33:25Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/79","html_url":"https://github.com/neondatabase/serverless/pull/79","diff_url":"https://github.com/neondatabase/serverless/pull/79.diff","patch_url":"https://github.com/neondatabase/serverless/pull/79.patch","merged_at":"2024-05-09T14:33:25Z"},"body":"Sorry, forgot this before.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/79/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/79/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/78","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/78/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/78/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/78/events","html_url":"https://github.com/neondatabase/serverless/pull/78","id":2285567340,"node_id":"PR_kwDOIQekeM5u4RR-","number":78,"title":"Add complete error information to errors from http-fetch queries","user":{"login":"jawj","id":141620,"node_id":"MDQ6VXNlcjE0MTYyMA==","avatar_url":"https://avatars.githubusercontent.com/u/141620?v=4","gravatar_id":"","url":"https://api.github.com/users/jawj","html_url":"https://github.com/jawj","followers_url":"https://api.github.com/users/jawj/followers","following_url":"https://api.github.com/users/jawj/following{/other_user}","gists_url":"https://api.github.com/users/jawj/gists{/gist_id}","starred_url":"https://api.github.com/users/jawj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jawj/subscriptions","organizations_url":"https://api.github.com/users/jawj/orgs","repos_url":"https://api.github.com/users/jawj/repos","events_url":"https://api.github.com/users/jawj/events{/privacy}","received_events_url":"https://api.github.com/users/jawj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-05-08T13:11:34Z","updated_at":"2024-05-09T13:52:39Z","closed_at":"2024-05-09T13:52:39Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/78","html_url":"https://github.com/neondatabase/serverless/pull/78","diff_url":"https://github.com/neondatabase/serverless/pull/78.diff","patch_url":"https://github.com/neondatabase/serverless/pull/78.patch","merged_at":"2024-05-09T13:52:39Z"},"body":"Adds complete error information to errors from http-fetch queries. This fixes #51.\r\n\r\nIn addition, I've updated dependencies and fixed the checks in `src/index.ts`.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/78/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/78/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/77","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/77/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/77/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/77/events","html_url":"https://github.com/neondatabase/serverless/issues/77","id":2284419746,"node_id":"I_kwDOIQekeM6IKXqi","number":77,"title":"WebSockets connections issues arraybuffer?","user":{"login":"webdeb","id":14992140,"node_id":"MDQ6VXNlcjE0OTkyMTQw","avatar_url":"https://avatars.githubusercontent.com/u/14992140?v=4","gravatar_id":"","url":"https://api.github.com/users/webdeb","html_url":"https://github.com/webdeb","followers_url":"https://api.github.com/users/webdeb/followers","following_url":"https://api.github.com/users/webdeb/following{/other_user}","gists_url":"https://api.github.com/users/webdeb/gists{/gist_id}","starred_url":"https://api.github.com/users/webdeb/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/webdeb/subscriptions","organizations_url":"https://api.github.com/users/webdeb/orgs","repos_url":"https://api.github.com/users/webdeb/repos","events_url":"https://api.github.com/users/webdeb/events{/privacy}","received_events_url":"https://api.github.com/users/webdeb/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-05-07T23:59:47Z","updated_at":"2024-05-09T14:07:31Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"Hello, I am stumbeling on an periodical error, something like that:\r\n\r\n```\r\nError ErrorEvent {\r\n  [Symbol(type)]: 'error',\r\n  [Symbol(kTarget)]: WebSocket {\r\n  [Symbol(kEvents)]: SafeMap(4) {\r\n  'error' => <ref *1> {\r\n  size: 1,\r\n  next: Listener {\r\n  next: undefined,\r\n  previous: [Circular *1],\r\n  listener: [Function],\r\n  flags: 0,\r\n  callback: [Function]\r\n}\r\n...\r\n..\r\n\r\n\r\n},\r\n  [Symbol(ready state)]: 0,\r\n  [Symbol(binary type)]: 'arraybuffer'\r\n},\r\n  [Symbol(kIsBeingDispatched)]: false\r\n}\r\n ⨯ node_modules/.pnpm/@neondatabase+serverless@0.9.1/node_modules/@neondatabase/serverless/index.mjs (1343:0) @ eval\r\n```\r\n\r\nHad to add a `console.log` to see it actually..\r\n\r\nAnyway, seems to be ws related, and wanted to ask, if this is something known, because I found this comment in the codebase:\r\nhttps://github.com/neondatabase/serverless/blob/b39a2dddb73f8c86271f9f25b3e33e63278e3cc9/dist/node/index.mjs#L6\r\n\r\nIt looks like undici already merged the fix, and btw some hours ago they published a new version.\r\nIf its not planned to use it immediately, I would like to try it out, should I just link this repo locally and try out?","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/77/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/77/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/76","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/76/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/76/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/76/events","html_url":"https://github.com/neondatabase/serverless/issues/76","id":2259791792,"node_id":"I_kwDOIQekeM6Gsa-w","number":76,"title":"Transactions not working in Node 20","user":{"login":"jakeleventhal","id":15133828,"node_id":"MDQ6VXNlcjE1MTMzODI4","avatar_url":"https://avatars.githubusercontent.com/u/15133828?v=4","gravatar_id":"","url":"https://api.github.com/users/jakeleventhal","html_url":"https://github.com/jakeleventhal","followers_url":"https://api.github.com/users/jakeleventhal/followers","following_url":"https://api.github.com/users/jakeleventhal/following{/other_user}","gists_url":"https://api.github.com/users/jakeleventhal/gists{/gist_id}","starred_url":"https://api.github.com/users/jakeleventhal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jakeleventhal/subscriptions","organizations_url":"https://api.github.com/users/jakeleventhal/orgs","repos_url":"https://api.github.com/users/jakeleventhal/repos","events_url":"https://api.github.com/users/jakeleventhal/events{/privacy}","received_events_url":"https://api.github.com/users/jakeleventhal/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2024-04-23T21:22:38Z","updated_at":"2024-05-16T12:30:50Z","closed_at":"2024-05-16T12:30:50Z","author_association":"NONE","active_lock_reason":null,"body":"I previously had no issues until I tried to upgrade from node `18.19.1` to `20.12.2`. When making a parallel insert in a transaction, it seems to lose sight of the transaction scope when using neon serverless.\r\n\r\nBelow is the drizzle `db` object I am exporting. When I hardcode to always use the `postgres-js` version, it works fine. If I hardcode to use the `neon-serverless` version, it fails.\r\n```ts\r\nimport { neonConfig, Pool } from '@neondatabase/serverless';\r\nimport { drizzle as neonDrizzle, NeonDatabase } from 'drizzle-orm/neon-serverless';\r\nimport { drizzle } from 'drizzle-orm/postgres-js';\r\nimport postgres from 'postgres';\r\nimport ws from 'ws';\r\n\r\nimport * as schema from './schema';\r\n\r\nneonConfig.webSocketConstructor = ws;\r\n\r\nconst drizzleClient = (datasourceUrl: string | undefined) => {\r\n  const connectionString = datasourceUrl || process.env.DATABASE_URL;\r\n\r\n  const client = () => {\r\n    if (process.env.SERVERLESS_DRIVER) {\r\n      const pool = new Pool({ connectionString });\r\n      return neonDrizzle(pool, { schema });\r\n    }\r\n\r\n    return drizzle(postgres(connectionString!), { schema }) as unknown as NeonDatabase<typeof schema>;\r\n  };\r\n\r\n  if (!connectionString) {\r\n    return null as any as ReturnType<typeof client>;\r\n  }\r\n\r\n  return client();\r\n};\r\n\r\ndeclare global {\r\n  // eslint-disable-next-line vars-on-top, no-var\r\n  var localDrizzle: ReturnType<typeof drizzleClient>;\r\n}\r\n\r\nexport const getDrizzleClient = (url?: string): ReturnType<typeof drizzleClient> => {\r\n  if (process.env.SERVER || url) {\r\n    return drizzleClient(url);\r\n  }\r\n\r\n  if (!global.localDrizzle) {\r\n    global.localDrizzle = drizzleClient(url);\r\n  }\r\n  return global.localDrizzle;\r\n};\r\n\r\nconst db = getDrizzleClient();\r\nexport default db;\r\n\r\nexport * from './appData';\r\nexport * from './schema';\r\nexport * from './types';\r\n```\r\nBelow is my application code\r\n```ts\r\nconst user = await db.transaction(async (tx) => {\r\n  const [newUser] = await tx\r\n    .insert(users)\r\n    .values({\r\n      email,\r\n      emailVerificationEmail: email,\r\n      id: userId,\r\n      password: Utils.getHash(password),\r\n      stripeCustomerId: await StripeUtils.createStripeCustomer(userId, email),\r\n      ...(!process.env.SERVER && {\r\n        emailVerificationEmail: null,\r\n        emailVerificationId: null\r\n      })\r\n    })\r\n    .returning();\r\n\r\n  const [{ id: addressId }] = await tx.insert(addresses).values({ userId }).returning();\r\n\r\n  const brandingId = crypto.randomUUID();\r\n  await Promise.all([\r\n    tx.insert(brandings).values({ id: brandingId, userId }).execute(),\r\n    tx.insert(userSettings).values({ addressId, userId }).execute()\r\n  ]);\r\n  await tx.insert(packageInserts).values({ brandingId }).execute();\r\n\r\n  return newUser;\r\n});\r\n```\r\nIf I remove the `Promise.all` and instead do each of the inserts one at a time, I do not get an error. Below is the error I end up getting:\r\n```\r\nApr 23, 4:18:05PM error: error: insert or update on table \"UserSettings\" violates foreign key constraint \"UserSettings_userId_User_id_fk\"\r\n    at eval (webpack-internal:///(api)/../../../node_modules/.pnpm/@neondatabase+serverless@0.9.0/node_modules/@neondatabase/serverless/index.mjs:1355:74)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n    at async Promise.all (index 1)\r\n    at async eval (webpack-internal:///(api)/./src/pages/api/account/sign-up.tsx:63:9)\r\n    at async NeonSession.transaction (file:///Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/drizzle-orm@0.30.8_@neondatabase+serverless@0.9.0_@types+pg@8.6.6_@types+react@18.2.68_@verce_bkgk4kkqtyvt7agio77yci4idy/node_modules/drizzle-orm/neon-serverless/session.js:96:22)\r\n    at async __WEBPACK_DEFAULT_EXPORT__.requireUserAuth (webpack-internal:///(api)/./src/pages/api/account/sign-up.tsx:42:18)\r\n    at async eval (webpack-internal:///(api)/../../../packages/riptech/utils/src/errors/client/clientErrorWrapper.ts:50:13)\r\n    at async K (/Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/next@14.2.2_@babel+core@7.23.3_babel-plugin-macros@3.1.0_react-dom@18.2.0_react@18.2.0__react@18.2.0_sass@1.72.0/node_modules/next/dist/compiled/next-server/pages-api.runtime.dev.js:21:2871)\r\n    at async U.render (/Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/next@14.2.2_@babel+core@7.23.3_babel-plugin-macros@3.1.0_react-dom@18.2.0_react@18.2.0__react@18.2.0_sass@1.72.0/node_modules/next/dist/compiled/next-server/pages-api.runtime.dev.js:21:3955)\r\n    at async DevServer.runApi (/Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/next@14.2.2_@babel+core@7.23.3_babel-plugin-macros@3.1.0_react-dom@18.2.0_react@18.2.0__react@18.2.0_sass@1.72.0/node_modules/next/dist/server/next-server.js:600:9)\r\n    at async NextNodeServer.handleCatchallRenderRequest (/Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/next@14.2.2_@babel+core@7.23.3_babel-plugin-macros@3.1.0_react-dom@18.2.0_react@18.2.0__react@18.2.0_sass@1.72.0/node_modules/next/dist/server/next-server.js:269:37)\r\n    at async DevServer.handleRequestImpl (/Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/next@14.2.2_@babel+core@7.23.3_babel-plugin-macros@3.1.0_react-dom@18.2.0_react@18.2.0__react@18.2.0_sass@1.72.0/node_modules/next/dist/server/base-server.js:816:17)\r\n    at async /Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/next@14.2.2_@babel+core@7.23.3_babel-plugin-macros@3.1.0_react-dom@18.2.0_react@18.2.0__react@18.2.0_sass@1.72.0/node_modules/next/dist/server/dev/next-dev-server.js:339:20\r\n    at async Span.traceAsyncFn (/Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/next@14.2.2_@babel+core@7.23.3_babel-plugin-macros@3.1.0_react-dom@18.2.0_react@18.2.0__react@18.2.0_sass@1.72.0/node_modules/next/dist/trace/trace.js:154:20)\r\n    at async DevServer.handleRequest (/Users/jakeleventhal/Code/rip-technologies/node_modules/.pnpm/next@14.2.2_@babel+core@7.23.3_babel-plugin-macros@3.1.0_react-dom@18.2.0_react@18.2.0__react@18.2.0_sass@1.72.0/node_modules/next/dist/server/dev/next-dev-server.js:336:24) \r\n```\r\nSchema shown below for extra info:\r\n```ts\r\nexport const users = pgTable(\r\n  'User',\r\n  {\r\n    company: text('company').default('').notNull(),\r\n    email: text('email').notNull(),\r\n    emailVerificationEmail: text('emailVerificationEmail'),\r\n    emailVerificationId: text('emailVerificationId').$defaultFn(() => sql`gen_random_uuid()::text`),\r\n    firstName: text('firstName').default('').notNull(),\r\n    id: text('id')\r\n      .primaryKey()\r\n      .$defaultFn(() => sql`gen_random_uuid()::text`)\r\n      .notNull(),\r\n    joinedDate: customTimestampWithTimezone('joinedDate')\r\n      .default(sql`now()`)\r\n      .notNull(),\r\n    lastLoginDate: customTimestampWithTimezone('lastLoginDate')\r\n      .default(sql`now()`)\r\n      .notNull(),\r\n    lastName: text('lastName').default('').notNull(),\r\n    logins: integer('logins').default(1).notNull(),\r\n    password: text('password').notNull(),\r\n    passwordResetId: text('passwordResetId'),\r\n    paymentFailureDate: customTimestampWithTimezone('paymentFailureDate'),\r\n    phone: text('phone').default('').notNull(),\r\n    sampleCreditBalance: doublePrecision('sampleCreditBalance').default(100).notNull(),\r\n    stripeCustomerId: text('stripeCustomerId').notNull()\r\n  },\r\n  (table) => ({\r\n    emailKey: uniqueIndex('User_email_key').on(table.email),\r\n    stripeCustomerIdKey: uniqueIndex('User_stripeCustomerId_key').on(table.stripeCustomerId)\r\n  })\r\n);\r\n\r\nexport const userSettings = pgTable(\r\n  'UserSettings',\r\n  {\r\n    addressId: text('addressId')\r\n      .notNull()\r\n      .references(() => addresses.id, { onDelete: 'restrict', onUpdate: 'cascade' }),\r\n    canadianBusinessNumber: text('canadianBusinessNumber').default('').notNull(),\r\n    displayCurrency: DisplayCurrencyEnum('displayCurrency').default('USD').notNull(),\r\n    id: text('id')\r\n      .primaryKey()\r\n      .$defaultFn(() => sql`gen_random_uuid()::text`)\r\n      .notNull(),\r\n    // The ids of the user's invalid cards that failed to process payments.\r\n    invalidCardIds: text('invalidCardIds')\r\n      .array()\r\n      .default(sql`'{}'`) // Empty array\r\n      .notNull(),\r\n    onboardingStep: OnboardingStepEnum('onboardingStep').default('PersonalDetails'),\r\n    primaryCardId: text('primaryCardId'),\r\n    themeMode: ThemeModeEnum('themeMode').default('light').notNull(),\r\n    userId: text('userId')\r\n      .notNull()\r\n      .references(() => users.id, { onDelete: 'cascade', onUpdate: 'cascade' })\r\n  },\r\n  (table) => ({\r\n    addressIdKey: uniqueIndex('UserSettings_addressId_key').on(table.addressId),\r\n    userIdKey: uniqueIndex('UserSettings_userId_key').on(table.userId)\r\n  })\r\n);\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/76/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/76/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/75","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/75/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/75/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/75/events","html_url":"https://github.com/neondatabase/serverless/pull/75","id":2243779708,"node_id":"PR_kwDOIQekeM5srpmZ","number":75,"title":"Updated README.md to mention JSR package, and added README.md to JSR package","user":{"login":"jawj","id":141620,"node_id":"MDQ6VXNlcjE0MTYyMA==","avatar_url":"https://avatars.githubusercontent.com/u/141620?v=4","gravatar_id":"","url":"https://api.github.com/users/jawj","html_url":"https://github.com/jawj","followers_url":"https://api.github.com/users/jawj/followers","following_url":"https://api.github.com/users/jawj/following{/other_user}","gists_url":"https://api.github.com/users/jawj/gists{/gist_id}","starred_url":"https://api.github.com/users/jawj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jawj/subscriptions","organizations_url":"https://api.github.com/users/jawj/orgs","repos_url":"https://api.github.com/users/jawj/repos","events_url":"https://api.github.com/users/jawj/events{/privacy}","received_events_url":"https://api.github.com/users/jawj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-04-15T14:04:35Z","updated_at":"2024-04-15T14:09:32Z","closed_at":"2024-04-15T14:09:32Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/75","html_url":"https://github.com/neondatabase/serverless/pull/75","diff_url":"https://github.com/neondatabase/serverless/pull/75.diff","patch_url":"https://github.com/neondatabase/serverless/pull/75.patch","merged_at":"2024-04-15T14:09:32Z"},"body":"See title. Also specified a default formatter for VS Code, so it's formatted the same for everyone.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/75/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/75/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/74","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/74/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/74/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/74/events","html_url":"https://github.com/neondatabase/serverless/pull/74","id":2243546003,"node_id":"PR_kwDOIQekeM5sq2Wj","number":74,"title":"Pass username through url decoder.","user":{"login":"kelvich","id":284219,"node_id":"MDQ6VXNlcjI4NDIxOQ==","avatar_url":"https://avatars.githubusercontent.com/u/284219?v=4","gravatar_id":"","url":"https://api.github.com/users/kelvich","html_url":"https://github.com/kelvich","followers_url":"https://api.github.com/users/kelvich/followers","following_url":"https://api.github.com/users/kelvich/following{/other_user}","gists_url":"https://api.github.com/users/kelvich/gists{/gist_id}","starred_url":"https://api.github.com/users/kelvich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kelvich/subscriptions","organizations_url":"https://api.github.com/users/kelvich/orgs","repos_url":"https://api.github.com/users/kelvich/repos","events_url":"https://api.github.com/users/kelvich/events{/privacy}","received_events_url":"https://api.github.com/users/kelvich/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-04-15T12:23:57Z","updated_at":"2024-04-15T12:36:02Z","closed_at":"2024-04-15T12:36:02Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/74","html_url":"https://github.com/neondatabase/serverless/pull/74","diff_url":"https://github.com/neondatabase/serverless/pull/74.diff","patch_url":"https://github.com/neondatabase/serverless/pull/74.patch","merged_at":"2024-04-15T12:36:02Z"},"body":"Postgres protocol expects raw usernames, so users with non-url-safe characters in their username can't properly authorize.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/74/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/74/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/73","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/73/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/73/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/73/events","html_url":"https://github.com/neondatabase/serverless/pull/73","id":2227646518,"node_id":"PR_kwDOIQekeM5r0uwE","number":73,"title":"Add README to JSR package","user":{"login":"jawj","id":141620,"node_id":"MDQ6VXNlcjE0MTYyMA==","avatar_url":"https://avatars.githubusercontent.com/u/141620?v=4","gravatar_id":"","url":"https://api.github.com/users/jawj","html_url":"https://github.com/jawj","followers_url":"https://api.github.com/users/jawj/followers","following_url":"https://api.github.com/users/jawj/following{/other_user}","gists_url":"https://api.github.com/users/jawj/gists{/gist_id}","starred_url":"https://api.github.com/users/jawj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jawj/subscriptions","organizations_url":"https://api.github.com/users/jawj/orgs","repos_url":"https://api.github.com/users/jawj/repos","events_url":"https://api.github.com/users/jawj/events{/privacy}","received_events_url":"https://api.github.com/users/jawj/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-04-05T10:23:10Z","updated_at":"2024-04-07T06:26:01Z","closed_at":null,"author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/73","html_url":"https://github.com/neondatabase/serverless/pull/73","diff_url":"https://github.com/neondatabase/serverless/pull/73.diff","patch_url":"https://github.com/neondatabase/serverless/pull/73.patch","merged_at":null},"body":null,"reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/73/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/73/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/72","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/72/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/72/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/72/events","html_url":"https://github.com/neondatabase/serverless/pull/72","id":2225678832,"node_id":"PR_kwDOIQekeM5rt5Km","number":72,"title":"Bump undici from 6.6.2 to 6.11.1","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":5724899355,"node_id":"LA_kwDOIQekeM8AAAABVTsIGw","url":"https://api.github.com/repos/neondatabase/serverless/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-04-04T14:30:34Z","updated_at":"2024-05-09T13:52:43Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/72","html_url":"https://github.com/neondatabase/serverless/pull/72","diff_url":"https://github.com/neondatabase/serverless/pull/72.diff","patch_url":"https://github.com/neondatabase/serverless/pull/72.patch","merged_at":null},"body":"Bumps [undici](https://github.com/nodejs/undici) from 6.6.2 to 6.11.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/nodejs/undici/releases\">undici's releases</a>.</em></p>\n<blockquote>\n<h2>v6.11.1</h2>\n<h1>:warning: Security Release ⚠️</h1>\n<h2>What's Changed</h2>\n<ul>\n<li>Fixes <a href=\"https://github.com/nodejs/undici/security/advisories/GHSA-m4v8-wqvr-p9f7\">https://github.com/nodejs/undici/security/advisories/GHSA-m4v8-wqvr-p9f7</a> CVE-2024-30260</li>\n<li>Fixes <a href=\"https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672\">https://github.com/nodejs/undici/security/advisories/GHSA-9qxr-qj54-h672</a> CVE-2024-30261</li>\n<li>Revert &quot;fix: don't leak internal class (<a href=\"https://redirect.github.com/nodejs/undici/issues/3024\">#3024</a>)&quot; by <a href=\"https://github.com/mcollina\"><code>@​mcollina</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3044\">nodejs/undici#3044</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/nodejs/undici/compare/v6.11.0...v6.11.1\">https://github.com/nodejs/undici/compare/v6.11.0...v6.11.1</a></p>\n<h2>v6.11.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>refactor(<a href=\"https://redirect.github.com/nodejs/undici/issues/3023\">#3023</a>): Pass headers as array instead by <a href=\"https://github.com/metcoder95\"><code>@​metcoder95</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3025\">nodejs/undici#3025</a></li>\n<li>fix: don't leak internal class by <a href=\"https://github.com/ronag\"><code>@​ronag</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3024\">nodejs/undici#3024</a></li>\n<li>build(deps): bump codecov/codecov-action from 4.1.0 to 4.1.1 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3034\">nodejs/undici#3034</a></li>\n<li>build(deps-dev): bump tsd from 0.30.7 to 0.31.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3038\">nodejs/undici#3038</a></li>\n<li>build(deps-dev): bump borp from 0.9.1 to 0.10.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2947\">nodejs/undici#2947</a></li>\n<li>missing commits by <a href=\"https://github.com/ronag\"><code>@​ronag</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3040\">nodejs/undici#3040</a></li>\n<li>build(deps): bump actions/checkout from 4.1.1 to 4.1.2 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3036\">nodejs/undici#3036</a></li>\n<li>fix: regexp pattern by <a href=\"https://github.com/tsctx\"><code>@​tsctx</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3041\">nodejs/undici#3041</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/nodejs/undici/compare/v6.10.2...v6.11.0\">https://github.com/nodejs/undici/compare/v6.10.2...v6.11.0</a></p>\n<h2>v6.10.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Do not fail test if streams support typed arrays by <a href=\"https://github.com/mcollina\"><code>@​mcollina</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2978\">nodejs/undici#2978</a></li>\n<li>fix(fetch): properly redirect non-ascii location header url by <a href=\"https://github.com/Xvezda\"><code>@​Xvezda</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2971\">nodejs/undici#2971</a></li>\n<li>perf: Remove double-stringify in setCookie by <a href=\"https://github.com/peterver\"><code>@​peterver</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2980\">nodejs/undici#2980</a></li>\n<li>[fix <a href=\"https://redirect.github.com/nodejs/undici/issues/2982\">#2982</a>] use DispatcherInterceptor type for Dispatcher#Compose by <a href=\"https://github.com/clovis-guillemot\"><code>@​clovis-guillemot</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2983\">nodejs/undici#2983</a></li>\n<li>fix: make EventSource properties enumerable by <a href=\"https://github.com/MattBidewell\"><code>@​MattBidewell</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2987\">nodejs/undici#2987</a></li>\n<li>docs: ✏️ fixed benchmark links by <a href=\"https://github.com/benhalverson\"><code>@​benhalverson</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2991\">nodejs/undici#2991</a></li>\n<li>fix(<a href=\"https://redirect.github.com/nodejs/undici/issues/2986\">#2986</a>): bad start check by <a href=\"https://github.com/metcoder95\"><code>@​metcoder95</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2992\">nodejs/undici#2992</a></li>\n<li>fix(H2 Client): bind stream 'data' listener only after received 'response' event by <a href=\"https://github.com/St3ffGv4\"><code>@​St3ffGv4</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2985\">nodejs/undici#2985</a></li>\n<li>feat:  added search input by <a href=\"https://github.com/benhalverson\"><code>@​benhalverson</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2993\">nodejs/undici#2993</a></li>\n<li>chore: validate responses can be consumed without a Content-Length or… by <a href=\"https://github.com/jacob-ebey\"><code>@​jacob-ebey</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2995\">nodejs/undici#2995</a></li>\n<li>fix error message by <a href=\"https://github.com/KhafraDev\"><code>@​KhafraDev</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2998\">nodejs/undici#2998</a></li>\n<li>Revert &quot;perf: reuse TextDecoder instance (<a href=\"https://redirect.github.com/nodejs/undici/issues/2863\">#2863</a>)&quot; by <a href=\"https://github.com/panva\"><code>@​panva</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2999\">nodejs/undici#2999</a></li>\n<li>test: remove only by <a href=\"https://github.com/metcoder95\"><code>@​metcoder95</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/3001\">nodejs/undici#3001</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/Xvezda\"><code>@​Xvezda</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2971\">nodejs/undici#2971</a></li>\n<li><a href=\"https://github.com/peterver\"><code>@​peterver</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2980\">nodejs/undici#2980</a></li>\n<li><a href=\"https://github.com/clovis-guillemot\"><code>@​clovis-guillemot</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2983\">nodejs/undici#2983</a></li>\n<li><a href=\"https://github.com/MattBidewell\"><code>@​MattBidewell</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2987\">nodejs/undici#2987</a></li>\n<li><a href=\"https://github.com/benhalverson\"><code>@​benhalverson</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2991\">nodejs/undici#2991</a></li>\n<li><a href=\"https://github.com/St3ffGv4\"><code>@​St3ffGv4</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2985\">nodejs/undici#2985</a></li>\n<li><a href=\"https://github.com/jacob-ebey\"><code>@​jacob-ebey</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2995\">nodejs/undici#2995</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/nodejs/undici/commit/6df3c738d03dc4014a26640316bf699950d62024\"><code>6df3c73</code></a> Bumped v6.11.1</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/c346b66287c873f3c81a71b3cedd2bb222c4bb8b\"><code>c346b66</code></a> Revert &quot;fix: don't leak internal class (<a href=\"https://redirect.github.com/nodejs/undici/issues/3024\">#3024</a>)&quot;</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/d542b8cd39ec1ba303f038ea26098c3f355974f3\"><code>d542b8c</code></a> Merge pull request from GHSA-9qxr-qj54-h672</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/6805746680d27a5369d7fb67bc05f95a28247d75\"><code>6805746</code></a> Merge pull request from GHSA-m4v8-wqvr-p9f7</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/ee5f892f3955eaca37730ed30349153ba203e9cd\"><code>ee5f892</code></a> Bumped v6.11.0</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/71a6d749b200e25359fdb0142dd398bfa52dc46d\"><code>71a6d74</code></a> Merge branch 'main' of github.com:nodejs/undici</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/0f0f239d939ec617ac4f4278c6f64fccc8928283\"><code>0f0f239</code></a> fix: regexp pattern (<a href=\"https://redirect.github.com/nodejs/undici/issues/3041\">#3041</a>)</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/31f9e67368bf98464c7d99eac08a63894ddc05f9\"><code>31f9e67</code></a> build(deps): bump actions/checkout from 4.1.1 to 4.1.2 (<a href=\"https://redirect.github.com/nodejs/undici/issues/3036\">#3036</a>)</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/c8a43aed8e08e278471eb7dee27b5d782098a7bc\"><code>c8a43ae</code></a> fixup</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/8b5e2c8f3667c2fdfbcf956b20bcaa159ab8082f\"><code>8b5e2c8</code></a> fixup</li>\n<li>Additional commits viewable in <a href=\"https://github.com/nodejs/undici/compare/v6.6.2...v6.11.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=undici&package-manager=npm_and_yarn&previous-version=6.6.2&new-version=6.11.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/neondatabase/serverless/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/72/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/72/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/71","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/71/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/71/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/71/events","html_url":"https://github.com/neondatabase/serverless/issues/71","id":2216841380,"node_id":"I_kwDOIQekeM6EIlCk","number":71,"title":"\"xxx\"(column name) is of type integer but expression is of type text","user":{"login":"ntubrian","id":43328591,"node_id":"MDQ6VXNlcjQzMzI4NTkx","avatar_url":"https://avatars.githubusercontent.com/u/43328591?v=4","gravatar_id":"","url":"https://api.github.com/users/ntubrian","html_url":"https://github.com/ntubrian","followers_url":"https://api.github.com/users/ntubrian/followers","following_url":"https://api.github.com/users/ntubrian/following{/other_user}","gists_url":"https://api.github.com/users/ntubrian/gists{/gist_id}","starred_url":"https://api.github.com/users/ntubrian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ntubrian/subscriptions","organizations_url":"https://api.github.com/users/ntubrian/orgs","repos_url":"https://api.github.com/users/ntubrian/repos","events_url":"https://api.github.com/users/ntubrian/events{/privacy}","received_events_url":"https://api.github.com/users/ntubrian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-03-31T08:13:56Z","updated_at":"2024-05-01T12:12:47Z","closed_at":"2024-05-01T12:12:46Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\nOriginally, I adopted drizzle-orm, pg, and \"@neondatabase/serverless\" ,\r\nand try to execute \"update multiple rows\", in which I'm not sure how to write in the syntax of drizzle-orm\r\nthen I followed this post [this post](https://www.answeroverflow.com/m/1113470358964678809)\r\n\r\nand do the same thing, (I also create a table on neondb with id and position column (with type int)\r\n\r\nthen when the query was executed, I got error \r\n\"NeonDbError: column \"position\" is of type integer but expression is of type text\"\r\n\r\nand the following script is generated by drizzle-orm\r\n```javascript\r\nupdate \"xxx_schema\".\"test\" set \"position\" = (case when id = $1 then $2 when id = $3 then $4 when id = $5 then $6 when id = $7 then $8 end) where \"test\".\"id\" in ($9, $10, $11, $12) -- params: [2443331299394454528, 0, 2443331317899723776, 1, 2359459378861442048, 2, 2359459369583641600, 3, 2443331299394454528, 2443331317899723776, 2359459378861442048, 2359459369583641600]\r\n```\r\n\r\nI have no idea for the type mismatch because the input position value looks like as of integer\r\n\r\n\r\n-","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/71/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/71/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/70","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/70/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/70/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/70/events","html_url":"https://github.com/neondatabase/serverless/issues/70","id":2199380857,"node_id":"I_kwDOIQekeM6DF-N5","number":70,"title":"Connected to PostgreSQL database error","user":{"login":"zhongzhuhua","id":14343009,"node_id":"MDQ6VXNlcjE0MzQzMDA5","avatar_url":"https://avatars.githubusercontent.com/u/14343009?v=4","gravatar_id":"","url":"https://api.github.com/users/zhongzhuhua","html_url":"https://github.com/zhongzhuhua","followers_url":"https://api.github.com/users/zhongzhuhua/followers","following_url":"https://api.github.com/users/zhongzhuhua/following{/other_user}","gists_url":"https://api.github.com/users/zhongzhuhua/gists{/gist_id}","starred_url":"https://api.github.com/users/zhongzhuhua/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhongzhuhua/subscriptions","organizations_url":"https://api.github.com/users/zhongzhuhua/orgs","repos_url":"https://api.github.com/users/zhongzhuhua/repos","events_url":"https://api.github.com/users/zhongzhuhua/events{/privacy}","received_events_url":"https://api.github.com/users/zhongzhuhua/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-03-21T07:23:49Z","updated_at":"2024-03-22T01:56:41Z","closed_at":"2024-03-22T01:56:40Z","author_association":"NONE","active_lock_reason":null,"body":"I used the following code, but it prompted that it could not be linked.\r\n```\r\nconst { neon } = require('@neondatabase/serverless');\r\nconst connectionString = 'postgresql://zhong:123456@localhost:5432/mytest';\r\nconst db = neon(connectionString);\r\ndb.transaction([db('SELECT * FROM example_table')]);\r\n```\r\n\r\nBut I am sure that there is no problem with my database. If I use pg, I can connect normally.\r\n```\r\nconst { Client } = require('pg');\r\nconst client = new Client({\r\n  user: 'zhong',  \r\n  host: 'localhost',  \r\n  database: 'mytest', \r\n  password: '123456',  \r\n  port: 5432,  \r\n});\r\nclient.query('SELECT * FROM example_table', (err, res) => {\r\n  if (err) {\r\n    console.error('Error executing query:', err);\r\n  } else {\r\n    console.log('Query result:', res.rows);\r\n  }\r\n  client.end();\r\n});\r\n```\r\n\r\nIs there something wrong with my link string?\r\nPostgres version 16","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/70/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/70/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/69","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/69/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/69/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/69/events","html_url":"https://github.com/neondatabase/serverless/issues/69","id":2190675582,"node_id":"I_kwDOIQekeM6Ckw5-","number":69,"title":"Dependency Installation Failure on Vercel/Cloudflare Edge Runtime","user":{"login":"shreyvarshney1","id":112169483,"node_id":"U_kgDOBq-SCw","avatar_url":"https://avatars.githubusercontent.com/u/112169483?v=4","gravatar_id":"","url":"https://api.github.com/users/shreyvarshney1","html_url":"https://github.com/shreyvarshney1","followers_url":"https://api.github.com/users/shreyvarshney1/followers","following_url":"https://api.github.com/users/shreyvarshney1/following{/other_user}","gists_url":"https://api.github.com/users/shreyvarshney1/gists{/gist_id}","starred_url":"https://api.github.com/users/shreyvarshney1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shreyvarshney1/subscriptions","organizations_url":"https://api.github.com/users/shreyvarshney1/orgs","repos_url":"https://api.github.com/users/shreyvarshney1/repos","events_url":"https://api.github.com/users/shreyvarshney1/events{/privacy}","received_events_url":"https://api.github.com/users/shreyvarshney1/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-03-17T13:36:03Z","updated_at":"2024-05-06T16:32:04Z","closed_at":"2024-05-06T16:32:04Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n1. Deploy @neondatabase/serverless on Vercel or Cloudflare.\r\n2. Observe the installation process of dependencies.\r\n3. Encounter the error related to WebSocket dependency installation.\r\n\r\n## Expected result\r\nThe @neondatabase/serverless should deploy smoothly on Vercel or Cloudflare without any dependency installation issues, including WebSocket.\r\n\r\n## Actual result\r\nWebSocket dependency fails to install during deployment on Vercel or Cloudflare, leading to deployment errors.\r\n\r\n\r\n## Environment\r\n\"@neondatabase/serverless\": \"^0.9.0\",\r\n\"next\": \"14.1.3\",\r\n\"drizzle-orm\": \"^0.30.2\",\r\n\r\n## Logs, links\r\n#### Cloudflare Pages Logs\r\nhttps://pastebin.com/yuReHLAh\r\n#### Vercel Logs\r\nhttps://pastebin.com/wefqysC7","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/69/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/69/timeline","performed_via_github_app":null,"state_reason":"not_planned"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/68","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/68/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/68/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/68/events","html_url":"https://github.com/neondatabase/serverless/pull/68","id":2186663580,"node_id":"PR_kwDOIQekeM5ppa8k","number":68,"title":"Update DEVELOP.md with fixed paths","user":{"login":"amitdahan","id":9748762,"node_id":"MDQ6VXNlcjk3NDg3NjI=","avatar_url":"https://avatars.githubusercontent.com/u/9748762?v=4","gravatar_id":"","url":"https://api.github.com/users/amitdahan","html_url":"https://github.com/amitdahan","followers_url":"https://api.github.com/users/amitdahan/followers","following_url":"https://api.github.com/users/amitdahan/following{/other_user}","gists_url":"https://api.github.com/users/amitdahan/gists{/gist_id}","starred_url":"https://api.github.com/users/amitdahan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amitdahan/subscriptions","organizations_url":"https://api.github.com/users/amitdahan/orgs","repos_url":"https://api.github.com/users/amitdahan/repos","events_url":"https://api.github.com/users/amitdahan/events{/privacy}","received_events_url":"https://api.github.com/users/amitdahan/received_events","type":"User","site_admin":false},"labels":[],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-03-14T15:28:13Z","updated_at":"2024-03-14T15:28:13Z","closed_at":null,"author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/68","html_url":"https://github.com/neondatabase/serverless/pull/68","diff_url":"https://github.com/neondatabase/serverless/pull/68.diff","patch_url":"https://github.com/neondatabase/serverless/pull/68.patch","merged_at":null},"body":"I think my instructions were a bit wrong with regards to CWD.\r\n\r\nThis is all manual work anyway, but lmk if this is confusing?","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/68/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/68/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/67","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/67/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/67/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/67/events","html_url":"https://github.com/neondatabase/serverless/pull/67","id":2177688043,"node_id":"PR_kwDOIQekeM5pKudn","number":67,"title":"Publish `@neon/serverless` to JSR","user":{"login":"amitdahan","id":9748762,"node_id":"MDQ6VXNlcjk3NDg3NjI=","avatar_url":"https://avatars.githubusercontent.com/u/9748762?v=4","gravatar_id":"","url":"https://api.github.com/users/amitdahan","html_url":"https://github.com/amitdahan","followers_url":"https://api.github.com/users/amitdahan/followers","following_url":"https://api.github.com/users/amitdahan/following{/other_user}","gists_url":"https://api.github.com/users/amitdahan/gists{/gist_id}","starred_url":"https://api.github.com/users/amitdahan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amitdahan/subscriptions","organizations_url":"https://api.github.com/users/amitdahan/orgs","repos_url":"https://api.github.com/users/amitdahan/repos","events_url":"https://api.github.com/users/amitdahan/events{/privacy}","received_events_url":"https://api.github.com/users/amitdahan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-03-10T12:15:49Z","updated_at":"2024-03-14T15:24:13Z","closed_at":"2024-03-14T15:24:07Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/67","html_url":"https://github.com/neondatabase/serverless/pull/67","diff_url":"https://github.com/neondatabase/serverless/pull/67.diff","patch_url":"https://github.com/neondatabase/serverless/pull/67.patch","merged_at":"2024-03-14T15:24:07Z"},"body":"- Uses our already-built ESM bundle as `dist/jsr/index.js`\n- Uses our already-defined `index.d.ts` as `dist/jsr/index.d.ts`\n- Adds a reference from `index.js` to `index.d.ts`\n- Minimal publish instructions","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/67/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/67/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/66","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/66/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/66/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/66/events","html_url":"https://github.com/neondatabase/serverless/issues/66","id":2161938329,"node_id":"I_kwDOIQekeM6A3I-Z","number":66,"title":"Setting strict true in `tsconfig.json` results in TS error","user":{"login":"nooblyf","id":54323745,"node_id":"MDQ6VXNlcjU0MzIzNzQ1","avatar_url":"https://avatars.githubusercontent.com/u/54323745?v=4","gravatar_id":"","url":"https://api.github.com/users/nooblyf","html_url":"https://github.com/nooblyf","followers_url":"https://api.github.com/users/nooblyf/followers","following_url":"https://api.github.com/users/nooblyf/following{/other_user}","gists_url":"https://api.github.com/users/nooblyf/gists{/gist_id}","starred_url":"https://api.github.com/users/nooblyf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nooblyf/subscriptions","organizations_url":"https://api.github.com/users/nooblyf/orgs","repos_url":"https://api.github.com/users/nooblyf/repos","events_url":"https://api.github.com/users/nooblyf/events{/privacy}","received_events_url":"https://api.github.com/users/nooblyf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2024-02-29T19:17:07Z","updated_at":"2024-03-19T10:59:29Z","closed_at":"2024-03-19T10:59:29Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\nSet `strict` in tsconfig to `true`\r\n\r\nConnect\r\n```ts\r\nimport { neon } from \"@neondatabase/serverless\";\r\nimport { drizzle } from \"drizzle-orm/neon-http\";\r\n\r\nimport { DATABASE_URL } from \"$env/static/private\";\r\n\r\nconst sql = neon(DATABASE_URL);\r\nexport const DB = drizzle(sql);\r\n```\r\n\r\n## Expected result\r\nNo TS error\r\n\r\n## Actual result\r\nTS error:\r\n<img width=\"865\" alt=\"Screenshot 2024-03-01 at 00 39 39\" src=\"https://github.com/neondatabase/serverless/assets/54323745/ef63b75c-0c42-48fb-b9a2-daaaf1812b0b\">\r\n\r\n\r\n## Environment\r\ntypescript v5.3.3\r\n@sveltejs/kit v2.5.2\r\nnode v20.10.0\r\npnpm 8.11.0\r\n\r\n## Logs, links\r\n```txt\r\nArgument of type 'NeonQueryFunction<false, false>' is not assignable to parameter of type 'NeonQueryFunction<boolean, boolean>'.\r\n  Types of property 'transaction' are incompatible.\r\n    Type '<ArrayModeOverride extends boolean = false, FullResultsOverride extends boolean = false>(queriesOrFn: NeonQueryPromise<false, false, any>[] | ((sql: NeonQueryFunctionInTransaction<ArrayModeOverride, FullResultsOverride>) => NeonQueryInTransaction[]), opts?: HTTPTransactionOptions<...> | undefined) => Promise<...>' is not assignable to type '<ArrayModeOverride extends boolean = boolean, FullResultsOverride extends boolean = boolean>(queriesOrFn: NeonQueryPromise<boolean, boolean, any>[] | ((sql: NeonQueryFunctionInTransaction<ArrayModeOverride, FullResultsOverride>) => NeonQueryInTransaction[]), opts?: HTTPTransactionOptions<...> | undefined) => Promise...'.\r\n      Types of parameters 'queriesOrFn' and 'queriesOrFn' are incompatible.\r\n        Type '((sql: NeonQueryFunctionInTransaction<any, any>) => NeonQueryInTransaction[]) | NeonQueryPromise<boolean, boolean, any>[]' is not assignable to type '((sql: NeonQueryFunctionInTransaction<any, any>) => NeonQueryInTransaction[]) | NeonQueryPromise<false, false, any>[]'.\r\n          Type 'NeonQueryPromise<boolean, boolean, any>[]' is not assignable to type '((sql: NeonQueryFunctionInTransaction<any, any>) => NeonQueryInTransaction[]) | NeonQueryPromise<false, false, any>[]'.\r\n            Type 'NeonQueryPromise<boolean, boolean, any>[]' is not assignable to type 'NeonQueryPromise<false, false, any>[]'.\r\n              Type 'NeonQueryPromise<boolean, boolean, any>' is not assignable to type 'NeonQueryPromise<false, false, any>'.\r\n                Type 'boolean' is not assignable to type 'false'.ts(2345)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/66/reactions","total_count":9,"+1":9,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/66/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/65","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/65/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/65/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/65/events","html_url":"https://github.com/neondatabase/serverless/issues/65","id":2137197170,"node_id":"I_kwDOIQekeM5_Ywpy","number":65,"title":"Readme update: fetchConnectionCache no longer necessary with Neon","user":{"login":"danieltprice","id":10074684,"node_id":"MDQ6VXNlcjEwMDc0Njg0","avatar_url":"https://avatars.githubusercontent.com/u/10074684?v=4","gravatar_id":"","url":"https://api.github.com/users/danieltprice","html_url":"https://github.com/danieltprice","followers_url":"https://api.github.com/users/danieltprice/followers","following_url":"https://api.github.com/users/danieltprice/following{/other_user}","gists_url":"https://api.github.com/users/danieltprice/gists{/gist_id}","starred_url":"https://api.github.com/users/danieltprice/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danieltprice/subscriptions","organizations_url":"https://api.github.com/users/danieltprice/orgs","repos_url":"https://api.github.com/users/danieltprice/repos","events_url":"https://api.github.com/users/danieltprice/events{/privacy}","received_events_url":"https://api.github.com/users/danieltprice/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-02-15T18:44:31Z","updated_at":"2024-02-27T15:14:04Z","closed_at":"2024-02-27T15:14:04Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"Connection caching is now enabled by default at the Neon proxy for HTTP fetch queries. Not sure if this should just be noted in the Readme or if this experimental option should be removed from the driver.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/65/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/65/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/64","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/64/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/64/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/64/events","html_url":"https://github.com/neondatabase/serverless/pull/64","id":2122697390,"node_id":"PR_kwDOIQekeM5mPpJA","number":64,"title":"Replace before the first dot","user":{"login":"khanova","id":32508607,"node_id":"MDQ6VXNlcjMyNTA4NjA3","avatar_url":"https://avatars.githubusercontent.com/u/32508607?v=4","gravatar_id":"","url":"https://api.github.com/users/khanova","html_url":"https://github.com/khanova","followers_url":"https://api.github.com/users/khanova/followers","following_url":"https://api.github.com/users/khanova/following{/other_user}","gists_url":"https://api.github.com/users/khanova/gists{/gist_id}","starred_url":"https://api.github.com/users/khanova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khanova/subscriptions","organizations_url":"https://api.github.com/users/khanova/orgs","repos_url":"https://api.github.com/users/khanova/repos","events_url":"https://api.github.com/users/khanova/events{/privacy}","received_events_url":"https://api.github.com/users/khanova/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-02-07T10:28:29Z","updated_at":"2024-02-07T10:31:19Z","closed_at":"2024-02-07T10:31:18Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/64","html_url":"https://github.com/neondatabase/serverless/pull/64","diff_url":"https://github.com/neondatabase/serverless/pull/64.diff","patch_url":"https://github.com/neondatabase/serverless/pull/64.patch","merged_at":"2024-02-07T10:31:18Z"},"body":null,"reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/64/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/64/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/63","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/63/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/63/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/63/events","html_url":"https://github.com/neondatabase/serverless/pull/63","id":2122675161,"node_id":"PR_kwDOIQekeM5mPkKL","number":63,"title":"Fix pooled connection","user":{"login":"khanova","id":32508607,"node_id":"MDQ6VXNlcjMyNTA4NjA3","avatar_url":"https://avatars.githubusercontent.com/u/32508607?v=4","gravatar_id":"","url":"https://api.github.com/users/khanova","html_url":"https://github.com/khanova","followers_url":"https://api.github.com/users/khanova/followers","following_url":"https://api.github.com/users/khanova/following{/other_user}","gists_url":"https://api.github.com/users/khanova/gists{/gist_id}","starred_url":"https://api.github.com/users/khanova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khanova/subscriptions","organizations_url":"https://api.github.com/users/khanova/orgs","repos_url":"https://api.github.com/users/khanova/repos","events_url":"https://api.github.com/users/khanova/events{/privacy}","received_events_url":"https://api.github.com/users/khanova/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-02-07T10:19:16Z","updated_at":"2024-02-07T10:22:22Z","closed_at":"2024-02-07T10:22:22Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/63","html_url":"https://github.com/neondatabase/serverless/pull/63","diff_url":"https://github.com/neondatabase/serverless/pull/63.diff","patch_url":"https://github.com/neondatabase/serverless/pull/63.patch","merged_at":"2024-02-07T10:22:22Z"},"body":null,"reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/63/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/63/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/62","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/62/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/62/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/62/events","html_url":"https://github.com/neondatabase/serverless/pull/62","id":2122636944,"node_id":"PR_kwDOIQekeM5mPb1f","number":62,"title":"Revert single domain for ws","user":{"login":"khanova","id":32508607,"node_id":"MDQ6VXNlcjMyNTA4NjA3","avatar_url":"https://avatars.githubusercontent.com/u/32508607?v=4","gravatar_id":"","url":"https://api.github.com/users/khanova","html_url":"https://github.com/khanova","followers_url":"https://api.github.com/users/khanova/followers","following_url":"https://api.github.com/users/khanova/following{/other_user}","gists_url":"https://api.github.com/users/khanova/gists{/gist_id}","starred_url":"https://api.github.com/users/khanova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khanova/subscriptions","organizations_url":"https://api.github.com/users/khanova/orgs","repos_url":"https://api.github.com/users/khanova/repos","events_url":"https://api.github.com/users/khanova/events{/privacy}","received_events_url":"https://api.github.com/users/khanova/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-02-07T09:59:27Z","updated_at":"2024-02-07T10:14:12Z","closed_at":"2024-02-07T10:14:12Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/62","html_url":"https://github.com/neondatabase/serverless/pull/62","diff_url":"https://github.com/neondatabase/serverless/pull/62.diff","patch_url":"https://github.com/neondatabase/serverless/pull/62.patch","merged_at":"2024-02-07T10:14:12Z"},"body":null,"reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/62/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/62/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/61","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/61/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/61/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/61/events","html_url":"https://github.com/neondatabase/serverless/issues/61","id":2122093608,"node_id":"I_kwDOIQekeM5-fJQo","number":61,"title":"Password authentication failed for user 'X' while using connection string in 0.8.0","user":{"login":"zolboo-gtn","id":72186937,"node_id":"MDQ6VXNlcjcyMTg2OTM3","avatar_url":"https://avatars.githubusercontent.com/u/72186937?v=4","gravatar_id":"","url":"https://api.github.com/users/zolboo-gtn","html_url":"https://github.com/zolboo-gtn","followers_url":"https://api.github.com/users/zolboo-gtn/followers","following_url":"https://api.github.com/users/zolboo-gtn/following{/other_user}","gists_url":"https://api.github.com/users/zolboo-gtn/gists{/gist_id}","starred_url":"https://api.github.com/users/zolboo-gtn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zolboo-gtn/subscriptions","organizations_url":"https://api.github.com/users/zolboo-gtn/orgs","repos_url":"https://api.github.com/users/zolboo-gtn/repos","events_url":"https://api.github.com/users/zolboo-gtn/events{/privacy}","received_events_url":"https://api.github.com/users/zolboo-gtn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-02-07T03:07:43Z","updated_at":"2024-02-07T11:22:34Z","closed_at":"2024-02-07T11:22:34Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\nUpgrade version to 0.8.0 and use as below.\r\n\r\n`new Pool({ connectionString: database.url })`\r\n\r\nIt works in 0.7.2.\r\n\r\n## Expected result\r\nNo errors\r\n\r\n## Actual result\r\nerror: password authentication failed for user 'X'\r\n\r\n## Environment\r\n\r\n\r\n## Logs, links\r\n- \r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/61/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/61/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/60","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/60/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/60/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/60/events","html_url":"https://github.com/neondatabase/serverless/pull/60","id":2104336606,"node_id":"PR_kwDOIQekeM5lQ7GE","number":60,"title":"Use the same domain name for the connections","user":{"login":"khanova","id":32508607,"node_id":"MDQ6VXNlcjMyNTA4NjA3","avatar_url":"https://avatars.githubusercontent.com/u/32508607?v=4","gravatar_id":"","url":"https://api.github.com/users/khanova","html_url":"https://github.com/khanova","followers_url":"https://api.github.com/users/khanova/followers","following_url":"https://api.github.com/users/khanova/following{/other_user}","gists_url":"https://api.github.com/users/khanova/gists{/gist_id}","starred_url":"https://api.github.com/users/khanova/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/khanova/subscriptions","organizations_url":"https://api.github.com/users/khanova/orgs","repos_url":"https://api.github.com/users/khanova/repos","events_url":"https://api.github.com/users/khanova/events{/privacy}","received_events_url":"https://api.github.com/users/khanova/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2024-01-28T20:31:46Z","updated_at":"2024-02-06T17:35:32Z","closed_at":"2024-02-06T17:35:32Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/60","html_url":"https://github.com/neondatabase/serverless/pull/60","diff_url":"https://github.com/neondatabase/serverless/pull/60.diff","patch_url":"https://github.com/neondatabase/serverless/pull/60.patch","merged_at":"2024-02-06T17:35:32Z"},"body":"Use the same domain name for the connections. It helps with connections caching on v8 side. \r\n\r\nPass endpont id inside the options for ws connections.\r\n\r\nhttps://github.com/neondatabase/neon/issues/6290","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/60/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/60/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/59","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/59/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/59/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/59/events","html_url":"https://github.com/neondatabase/serverless/issues/59","id":2103259687,"node_id":"I_kwDOIQekeM59XTIn","number":59,"title":"How to type (if posible) a `sql` query response ?","user":{"login":"daguitosama","id":34744883,"node_id":"MDQ6VXNlcjM0NzQ0ODgz","avatar_url":"https://avatars.githubusercontent.com/u/34744883?v=4","gravatar_id":"","url":"https://api.github.com/users/daguitosama","html_url":"https://github.com/daguitosama","followers_url":"https://api.github.com/users/daguitosama/followers","following_url":"https://api.github.com/users/daguitosama/following{/other_user}","gists_url":"https://api.github.com/users/daguitosama/gists{/gist_id}","starred_url":"https://api.github.com/users/daguitosama/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/daguitosama/subscriptions","organizations_url":"https://api.github.com/users/daguitosama/orgs","repos_url":"https://api.github.com/users/daguitosama/repos","events_url":"https://api.github.com/users/daguitosama/events{/privacy}","received_events_url":"https://api.github.com/users/daguitosama/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2024-01-27T06:14:08Z","updated_at":"2024-05-01T12:18:43Z","closed_at":"2024-05-01T12:18:43Z","author_association":"NONE","active_lock_reason":null,"body":"Im reading the examples and documentation on how to use the `client` you get out of `neon(DB_URL)`; but have not found any clear way to type the result of runing a query, like for instance, the way `postgres.js` folks do it:\r\n\r\n```ts\r\n\r\ntype User = {username: string, id: number};\r\n\r\nconst rows = await sql<User[]>`select * from users;`;\r\n// now TS knows what's comming back of the query on those rows\r\n```\r\n**Is posible doing that typing ?**\r\n\r\nIf not, i think would be a wonderful adition 😂","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/59/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/59/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/58","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/58/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/58/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/58/events","html_url":"https://github.com/neondatabase/serverless/issues/58","id":2098539997,"node_id":"I_kwDOIQekeM59FS3d","number":58,"title":"Cloudflare Pages with Functions yields \"NeonDbError: Error connecting to database: Reflect.get called on non-object\"","user":{"login":"Gregoor","id":4051932,"node_id":"MDQ6VXNlcjQwNTE5MzI=","avatar_url":"https://avatars.githubusercontent.com/u/4051932?v=4","gravatar_id":"","url":"https://api.github.com/users/Gregoor","html_url":"https://github.com/Gregoor","followers_url":"https://api.github.com/users/Gregoor/followers","following_url":"https://api.github.com/users/Gregoor/following{/other_user}","gists_url":"https://api.github.com/users/Gregoor/gists{/gist_id}","starred_url":"https://api.github.com/users/Gregoor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gregoor/subscriptions","organizations_url":"https://api.github.com/users/Gregoor/orgs","repos_url":"https://api.github.com/users/Gregoor/repos","events_url":"https://api.github.com/users/Gregoor/events{/privacy}","received_events_url":"https://api.github.com/users/Gregoor/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2024-01-24T15:37:29Z","updated_at":"2024-05-01T12:19:09Z","closed_at":"2024-05-01T12:19:09Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n1. use `@neondatabase/serverless` on cloudflare with pages & functions\r\n2. get the error above and have all functions 500\r\n\r\n## Environment\r\nCloudflare with Nextjs\r\n\r\n## Logs, links\r\n<details><summary>full log</summary>\r\n\r\n```json\r\n{\r\n  \"outcome\": \"ok\",\r\n  \"scriptName\": \"pages-worker--1720533-production\",\r\n  \"diagnosticsChannelEvents\": [],\r\n  \"exceptions\": [],\r\n  \"logs\": [\r\n    {\r\n      \"message\": [\r\n        \"NeonDbError: Error connecting to database: Reflect.get called on non-object\"\r\n      ],\r\n      \"level\": \"error\",\r\n      \"timestamp\": 1706110007697\r\n    }\r\n  ],\r\n  \"eventTimestamp\": 1706110007696,\r\n  \"event\": {\r\n    \"request\": {\r\n      \"url\": \"https://bremse.pages.dev/api/plz?strasse=hochstr&nummer=undefined\",\r\n      \"method\": \"GET\",\r\n      \"headers\": {\r\n        \"accept\": \"*/*\",\r\n        \"accept-encoding\": \"gzip\",\r\n        \"accept-language\": \"en-US,en;q=0.9\",\r\n        \"cache-control\": \"no-cache\",\r\n        \"cf-connecting-ip\": \"2003:d4:6f37:c300:2897:8334:a929:43a2\",\r\n        \"cf-ipcountry\": \"DE\",\r\n        \"cf-ray\": \"84a94bfc18a762e6\",\r\n        \"cf-visitor\": \"{\\\"scheme\\\":\\\"https\\\"}\",\r\n        \"connection\": \"Keep-Alive\",\r\n        \"dnt\": \"1\",\r\n        \"host\": \"bremse.pages.dev\",\r\n        \"pragma\": \"no-cache\",\r\n        \"priority\": \"u=1, i\",\r\n        \"referer\": \"https://bremse.pages.dev/\",\r\n        \"sec-ch-ua\": \"\\\"Not_A Brand\\\";v=\\\"8\\\", \\\"Chromium\\\";v=\\\"120\\\"\",\r\n        \"sec-ch-ua-mobile\": \"?0\",\r\n        \"sec-ch-ua-platform\": \"\\\"macOS\\\"\",\r\n        \"sec-fetch-dest\": \"empty\",\r\n        \"sec-fetch-mode\": \"cors\",\r\n        \"sec-fetch-site\": \"same-origin\",\r\n        \"user-agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\",\r\n        \"x-forwarded-proto\": \"https\",\r\n        \"x-real-ip\": \"2003:d4:6f37:c300:2897:8334:a929:43a2\"\r\n      },\r\n      \"cf\": {\r\n        \"longitude\": \"13.41640\",\r\n        \"latitude\": \"52.47460\",\r\n        \"tlsCipher\": \"AEAD-AES128-GCM-SHA256\",\r\n        \"continent\": \"EU\",\r\n        \"asn\": 3320,\r\n        \"clientAcceptEncoding\": \"gzip, deflate, br\",\r\n        \"country\": \"DE\",\r\n        \"isEUCountry\": \"1\",\r\n        \"tlsClientAuth\": {\r\n          \"certIssuerDNLegacy\": \"\",\r\n          \"certIssuerSKI\": \"\",\r\n          \"certSubjectDNRFC2253\": \"\",\r\n          \"certSubjectDNLegacy\": \"\",\r\n          \"certFingerprintSHA256\": \"\",\r\n          \"certNotBefore\": \"\",\r\n          \"certSKI\": \"\",\r\n          \"certSerial\": \"\",\r\n          \"certIssuerDN\": \"\",\r\n          \"certVerified\": \"NONE\",\r\n          \"certNotAfter\": \"\",\r\n          \"certSubjectDN\": \"\",\r\n          \"certPresented\": \"0\",\r\n          \"certRevoked\": \"0\",\r\n          \"certIssuerSerial\": \"\",\r\n          \"certIssuerDNRFC2253\": \"\",\r\n          \"certFingerprintSHA1\": \"\"\r\n        },\r\n        \"postalCode\": \"12049\",\r\n        \"tlsExportedAuthenticator\": {\r\n          \"clientFinished\": \"81fb69d8a822eca7080263409101d74ecc3f6870e376607cc586fe86d5bfcd2e\",\r\n          \"clientHandshake\": \"acedab6c6ad19fbd773b6a335f1a669f5ef9391b83f5b54a88b87d46d31796b9\",\r\n          \"serverHandshake\": \"fb54d419fd965b985e49ab4097356dcfed48570c2d3711ddd1fe6887d4ce565e\",\r\n          \"serverFinished\": \"b7eaf628a540a27ba7f10e4d0cacd1fadb0dd44d1c05eb7cb42599f5796b76d9\"\r\n        },\r\n        \"tlsVersion\": \"TLSv1.3\",\r\n        \"city\": \"Berlin\",\r\n        \"timezone\": \"Europe/Berlin\",\r\n        \"verifiedBotCategory\": \"\",\r\n        \"edgeRequestKeepAliveStatus\": 1,\r\n        \"requestPriority\": \"\",\r\n        \"colo\": \"HAM\",\r\n        \"httpProtocol\": \"HTTP/3\",\r\n        \"region\": \"Land Berlin\",\r\n        \"regionCode\": \"BE\",\r\n        \"asOrganization\": \"Deutsche Telekom AG\",\r\n        \"pagesHostName\": \"bremse.pages.dev\",\r\n        \"botManagement\": {\r\n          \"corporateProxy\": false,\r\n          \"verifiedBot\": false,\r\n          \"jsDetection\": {\r\n            \"passed\": false\r\n          },\r\n          \"staticResource\": false,\r\n          \"detectionIds\": {},\r\n          \"score\": 99\r\n        }\r\n      }\r\n    },\r\n    \"response\": {\r\n      \"status\": 500\r\n    }\r\n  },\r\n  \"id\": 7\r\n}\r\n```\r\n\r\n</details>\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/58/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/58/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/57","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/57/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/57/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/57/events","html_url":"https://github.com/neondatabase/serverless/issues/57","id":2072974921,"node_id":"I_kwDOIQekeM57jxZJ","number":57,"title":"Named export `Client` broken in `^0.7.0`","user":{"login":"iolyd","id":52970928,"node_id":"MDQ6VXNlcjUyOTcwOTI4","avatar_url":"https://avatars.githubusercontent.com/u/52970928?v=4","gravatar_id":"","url":"https://api.github.com/users/iolyd","html_url":"https://github.com/iolyd","followers_url":"https://api.github.com/users/iolyd/followers","following_url":"https://api.github.com/users/iolyd/following{/other_user}","gists_url":"https://api.github.com/users/iolyd/gists{/gist_id}","starred_url":"https://api.github.com/users/iolyd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iolyd/subscriptions","organizations_url":"https://api.github.com/users/iolyd/orgs","repos_url":"https://api.github.com/users/iolyd/repos","events_url":"https://api.github.com/users/iolyd/events{/privacy}","received_events_url":"https://api.github.com/users/iolyd/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2024-01-09T18:57:44Z","updated_at":"2024-01-10T14:18:28Z","closed_at":"2024-01-10T14:18:27Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\nMinor version `0.7` (tested with `0.7.0` and `0.7.1`) introduce breaking import error.\r\n\r\n1. Scaffold an ESM-first app with a neon client (Vite, or more specifically SvelteKit in my case)\r\n2. `pnpm install @neondatabase/serverless@0.6.1`\r\n3. Observe things working as expected\r\n4. `pnpm up --latest` (or `pnpm install @neondatabase/serverless@latest`)\r\n5. Observe below error (persisting even when using default export syntax)\r\n\r\n## Expected result\r\n\r\nNamed exports should be made available like in previous version (unless this is an expected breaking change), else document new import path(s).\r\n\r\n## Actual result\r\n\r\nGet errors unless revert to previous minor version (`0.6`)\r\n\r\n## Environment\r\n\r\n`node v21.1.0`\r\n\r\n## Logs, links\r\n```\r\n[vite] Error when evaluating SSR module /src/lib/db/db.server.ts: failed to import \"@neondatabase/serverless\"\r\n|- [...]/node_modules/.pnpm/@neondatabase+serverless@0.7.1/node_modules/@neondatabase/serverless/index.mjs:2\r\n  Client,\r\n  ^^^^^^\r\nSyntaxError: Named export 'Client' not found. The requested module './index.js' is a CommonJS module, which may not support all module.exports as named exports.\r\nCommonJS modules can always be imported via the default export, for example using:\r\n\r\nimport pkg from './index.js';\r\n\r\n    at ModuleJob._instantiate (node:internal/modules/esm/module_job:132:21)\r\n    at async ModuleJob.run (node:internal/modules/esm/module_job:214:5)\r\n    at async ModuleLoader.import (node:internal/modules/esm/loader:329:24)\r\n    at async nodeImport ([...]/node_modules/.pnpm/vite@5.0.11/node_modules/vite/dist/node/chunks/dep-V3BH7oO1.js:50899:17)\r\n    at async ssrImport ([...]/node_modules/.pnpm/vite@5.0.11/node_modules/vite/dist/node/chunks/dep-V3BH7oO1.js:50799:24)\r\n    at async eval ([...]/src/lib/db/db.server.ts:4:31)\r\n    at async instantiateModule ([...]/node_modules/vite/dist/node/chunks/dep-V3BH7oO1.js:50861:9)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/57/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/57/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/56","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/56/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/56/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/56/events","html_url":"https://github.com/neondatabase/serverless/issues/56","id":2071788641,"node_id":"I_kwDOIQekeM57fPxh","number":56,"title":"'neon' cannot be used as a value because it was exported using 'export type'","user":{"login":"russelldias98","id":3706645,"node_id":"MDQ6VXNlcjM3MDY2NDU=","avatar_url":"https://avatars.githubusercontent.com/u/3706645?v=4","gravatar_id":"","url":"https://api.github.com/users/russelldias98","html_url":"https://github.com/russelldias98","followers_url":"https://api.github.com/users/russelldias98/followers","following_url":"https://api.github.com/users/russelldias98/following{/other_user}","gists_url":"https://api.github.com/users/russelldias98/gists{/gist_id}","starred_url":"https://api.github.com/users/russelldias98/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/russelldias98/subscriptions","organizations_url":"https://api.github.com/users/russelldias98/orgs","repos_url":"https://api.github.com/users/russelldias98/repos","events_url":"https://api.github.com/users/russelldias98/events{/privacy}","received_events_url":"https://api.github.com/users/russelldias98/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2024-01-09T07:31:12Z","updated_at":"2024-01-09T11:17:10Z","closed_at":"2024-01-09T09:23:40Z","author_association":"MEMBER","active_lock_reason":null,"body":"## Steps to reproduce\r\n```\r\nimport { neon } from '@neondatabase/serverless';\r\nimport { drizzle } from 'drizzle-orm/neon-http';\r\n\r\nconst sql = neon(process.env.DATABASE_URL!);\r\nconst db = drizzle(sql);\r\n```\r\n\r\n## Expected result\r\nNo errors and neon function to work\r\n\r\n## Actual result\r\n```\r\n'neon' cannot be used as a value because it was exported using 'export type'.ts(1362)\r\nindex.d.mts(1, 1): 'neon' was exported here.\r\n```\r\n\r\n## Environment\r\n- Node v18.18.2\r\n- NextJS v14.0.4\r\n\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/56/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/56/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/55","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/55/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/55/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/55/events","html_url":"https://github.com/neondatabase/serverless/pull/55","id":2069043345,"node_id":"PR_kwDOIQekeM5jZrmX","number":55,"title":"Bundle ESM from scratch instead of wrapping CJS","user":{"login":"amitdahan","id":9748762,"node_id":"MDQ6VXNlcjk3NDg3NjI=","avatar_url":"https://avatars.githubusercontent.com/u/9748762?v=4","gravatar_id":"","url":"https://api.github.com/users/amitdahan","html_url":"https://github.com/amitdahan","followers_url":"https://api.github.com/users/amitdahan/followers","following_url":"https://api.github.com/users/amitdahan/following{/other_user}","gists_url":"https://api.github.com/users/amitdahan/gists{/gist_id}","starred_url":"https://api.github.com/users/amitdahan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amitdahan/subscriptions","organizations_url":"https://api.github.com/users/amitdahan/orgs","repos_url":"https://api.github.com/users/amitdahan/repos","events_url":"https://api.github.com/users/amitdahan/events{/privacy}","received_events_url":"https://api.github.com/users/amitdahan/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2024-01-07T08:41:21Z","updated_at":"2024-01-09T08:43:43Z","closed_at":"2024-01-09T08:43:36Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/55","html_url":"https://github.com/neondatabase/serverless/pull/55","diff_url":"https://github.com/neondatabase/serverless/pull/55.diff","patch_url":"https://github.com/neondatabase/serverless/pull/55.patch","merged_at":null},"body":"Closes #54 \r\n\r\nI noticed `gen-esm-wrapper` was generating a correct `import mod from './index.js` import, which SHOULD work, but according to #54 (which reproduces) it doesn't seem to do the trick for some reason.\r\n\r\nI thought a separate ESM bundle would be generally better and it seemed to do the trick for the above issue's repro.\r\n\r\nIf there's anything else I can & should test - lmk!","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/55/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/55/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/54","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/54/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/54/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/54/events","html_url":"https://github.com/neondatabase/serverless/issues/54","id":2035649775,"node_id":"I_kwDOIQekeM55VYzv","number":54,"title":"Cannot read properties of undefined (reading 'Client') error in Next.js when `.mjs` files are configured to be handled by Webpack","user":{"login":"joulev","id":44609036,"node_id":"MDQ6VXNlcjQ0NjA5MDM2","avatar_url":"https://avatars.githubusercontent.com/u/44609036?v=4","gravatar_id":"","url":"https://api.github.com/users/joulev","html_url":"https://github.com/joulev","followers_url":"https://api.github.com/users/joulev/followers","following_url":"https://api.github.com/users/joulev/following{/other_user}","gists_url":"https://api.github.com/users/joulev/gists{/gist_id}","starred_url":"https://api.github.com/users/joulev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joulev/subscriptions","organizations_url":"https://api.github.com/users/joulev/orgs","repos_url":"https://api.github.com/users/joulev/repos","events_url":"https://api.github.com/users/joulev/events{/privacy}","received_events_url":"https://api.github.com/users/joulev/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-12-11T13:11:03Z","updated_at":"2024-01-09T03:43:48Z","closed_at":"2024-01-09T03:43:47Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\n1. Clone https://github.com/joulev/debug/tree/drizzle-orm-fail-webpack-config\r\n\r\n1. Add an `.env` file at the same level with `package.json` with `DATABASE_URL` being the connection string of any Neon databases. Empty databases work too, no migrations or schema pushes necessary.\r\n\r\n1. `pnpm install`, then `pnpm build`\r\n\r\n1. You will see the error\r\n\r\n    ```\r\n    TypeError: Cannot read properties of undefined (reading 'Client')\r\n    ```\r\n\r\n1. If you remove the following lines from `next.config.js`\r\n\r\n    ```js\r\n    config.module.rules.push({\r\n      test: /\\.m?js$/,\r\n      type: \"javascript/auto\",\r\n      resolve: {\r\n        fullySpecified: false,\r\n      },\r\n    });\r\n    ```\r\n\r\n    and rebuild again, it will function normally and get an error like `relation \"a_table_that_does_not_exist\" does not exist` (expected error).\r\n\r\n## Expected result\r\n\r\nEven with the Webpack config lines added, it should still work (which means it will throw that the table doesn't exist, and if the table actually exists it will query and return the data normally).\r\n\r\n## Actual result\r\n\r\nIt gets the `TypeError` above.\r\n\r\n## Environment\r\n\r\n`@neondatabase/serverless` v0.6.0\r\n\r\nmacOS 14.1.2 (Sonoma), `node` v20.3.1, `pnpm` v8.11.0\r\n\r\n## Logs, links\r\n\r\n<details><summary>Correct error message</summary>\r\n\r\n```\r\nNeonDbError: db error: ERROR: relation \"a_table_that_does_not_exist\" does not exist\r\n\r\nCaused by:\r\n    ERROR: relation \"a_table_that_does_not_exist\" does not exist\r\n    at execute (/Users/joulev/dev/www/debug/.next/server/chunks/566.js:9:441)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n    at async Page (/Users/joulev/dev/www/debug/.next/server/app/page.js:1:1693) {\r\n  code: '42P01',\r\n  sourceError: undefined\r\n}\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>Buggy error message</summary>\r\n\r\n```\r\nTypeError: Cannot read properties of undefined (reading 'Client')\r\n    at 4804 (/Users/joulev/dev/www/debug/.next/server/chunks/804.js:25:64)\r\n    at __webpack_require__ (/Users/joulev/dev/www/debug/.next/server/webpack-runtime.js:1:145)\r\n    at 2475 (/Users/joulev/dev/www/debug/.next/server/app/page.js:1:1616)\r\n    at Function.__webpack_require__ (/Users/joulev/dev/www/debug/.next/server/webpack-runtime.js:1:145)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n    at async collectGenerateParams (/Users/joulev/dev/www/debug/node_modules/.pnpm/next@14.0.1_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/build/utils.js:883:17)\r\n```\r\n\r\n</details>\r\n\r\n## Additional contexts\r\n\r\n* It's very likely the issue reported by @/feliche93 here https://github.com/neondatabase/serverless/issues/26#issuecomment-1594359228.\r\n\r\n* Until Next.js v14.0.4-canary.33, this Webpack config was necessary for Next.js to handle ESM files well, ref: https://github.com/vercel/next.js/issues/17806#issuecomment-913437792. Now, although Next.js has patched this, the patch is still very new (a few days old) and in the ecosystem many packages/plugins have baked this workaround config to their source code and haven't updated them. Hence for a while more, this config is likely to be added (directly by the developer, or indirectly by third-party plugins) to many codebases.\r\n\r\n    Still, even when Next.js has patched this, I think it's still a bug on `@neondatabase/serverless`'s side because things, well, shouldn't break simply because the user opts to handle `.mjs` files as well.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/54/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/54/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/53","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/53/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/53/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/53/events","html_url":"https://github.com/neondatabase/serverless/issues/53","id":2030954526,"node_id":"I_kwDOIQekeM55Dege","number":53,"title":"Cryptic prepared statement errors","user":{"login":"ffxsam","id":12532733,"node_id":"MDQ6VXNlcjEyNTMyNzMz","avatar_url":"https://avatars.githubusercontent.com/u/12532733?v=4","gravatar_id":"","url":"https://api.github.com/users/ffxsam","html_url":"https://github.com/ffxsam","followers_url":"https://api.github.com/users/ffxsam/followers","following_url":"https://api.github.com/users/ffxsam/following{/other_user}","gists_url":"https://api.github.com/users/ffxsam/gists{/gist_id}","starred_url":"https://api.github.com/users/ffxsam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ffxsam/subscriptions","organizations_url":"https://api.github.com/users/ffxsam/orgs","repos_url":"https://api.github.com/users/ffxsam/repos","events_url":"https://api.github.com/users/ffxsam/events{/privacy}","received_events_url":"https://api.github.com/users/ffxsam/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-12-07T15:05:52Z","updated_at":"2024-05-08T10:33:50Z","closed_at":"2024-05-08T10:33:49Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\nUnknown (error is sporadic)\r\n\r\n## Expected result\r\n???\r\n\r\n## Actual result\r\nRandomly, I'm seeing cryptic errors like this:\r\n```\r\n|  Error: DB error: ERROR: prepared statement \"s996\" does not exist\r\n\r\nCaused by:\r\n    ERROR: prepared statement \"s996\" does not exist\r\n   NeonDbError: db error: ERROR: prepared statement \"s996\" does not exist\r\n```\r\nThen if I reload our app, it runs just fine (with no code changes).\r\n\r\n## Environment\r\nNode.js 18.x, Lambda, [SST](https://sst.dev/), working locally (SST dev mode)\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/53/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/53/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/52","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/52/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/52/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/52/events","html_url":"https://github.com/neondatabase/serverless/issues/52","id":2029251526,"node_id":"I_kwDOIQekeM548-vG","number":52,"title":"What is the correct way to avoid sql injections for client and pool queries?","user":{"login":"DrevaSergii","id":27158929,"node_id":"MDQ6VXNlcjI3MTU4OTI5","avatar_url":"https://avatars.githubusercontent.com/u/27158929?v=4","gravatar_id":"","url":"https://api.github.com/users/DrevaSergii","html_url":"https://github.com/DrevaSergii","followers_url":"https://api.github.com/users/DrevaSergii/followers","following_url":"https://api.github.com/users/DrevaSergii/following{/other_user}","gists_url":"https://api.github.com/users/DrevaSergii/gists{/gist_id}","starred_url":"https://api.github.com/users/DrevaSergii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DrevaSergii/subscriptions","organizations_url":"https://api.github.com/users/DrevaSergii/orgs","repos_url":"https://api.github.com/users/DrevaSergii/repos","events_url":"https://api.github.com/users/DrevaSergii/events{/privacy}","received_events_url":"https://api.github.com/users/DrevaSergii/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-12-06T19:34:17Z","updated_at":"2023-12-06T21:19:23Z","closed_at":"2023-12-06T21:19:23Z","author_association":"NONE","active_lock_reason":null,"body":"Documentation says that I can avoid sql injections by calling **[sql](https://www.npmjs.com/package/@neondatabase/serverless#use-it)** as the **[tag function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#tagged_templates)**.\r\nI couldn't find any information on how to avoid sql injections for **Client** and **Pool** [queries](https://www.npmjs.com/package/@neondatabase/serverless#pool-and-client).\r\nCould you recommend some solution?\r\nFor example, **[squid/pg](https://github.com/andywer/squid)** exports sql method directly from the library and pg provides **[utilities](https://node-postgres.com/apis/utilities)** to avoid sql injections.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/52/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/52/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/51","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/51/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/51/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/51/events","html_url":"https://github.com/neondatabase/serverless/issues/51","id":1977278409,"node_id":"I_kwDOIQekeM512t_J","number":51,"title":"The \"neon\" and \"Pool\" methods of querying do not return the same error information","user":{"login":"sabercoy","id":22666749,"node_id":"MDQ6VXNlcjIyNjY2NzQ5","avatar_url":"https://avatars.githubusercontent.com/u/22666749?v=4","gravatar_id":"","url":"https://api.github.com/users/sabercoy","html_url":"https://github.com/sabercoy","followers_url":"https://api.github.com/users/sabercoy/followers","following_url":"https://api.github.com/users/sabercoy/following{/other_user}","gists_url":"https://api.github.com/users/sabercoy/gists{/gist_id}","starred_url":"https://api.github.com/users/sabercoy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sabercoy/subscriptions","organizations_url":"https://api.github.com/users/sabercoy/orgs","repos_url":"https://api.github.com/users/sabercoy/repos","events_url":"https://api.github.com/users/sabercoy/events{/privacy}","received_events_url":"https://api.github.com/users/sabercoy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-11-04T10:49:17Z","updated_at":"2024-05-09T13:52:40Z","closed_at":"2024-05-09T13:52:40Z","author_association":"NONE","active_lock_reason":null,"body":"Currently, on database error, using the neon \"one-shot\" method will throw a NeonDbError which contains three keys: name, code, and sourceError. I am finding that querying with a Pool allows me to view all error information, namely \"contraint.\" I am wondering if it is possible for them to return the same things so that I can use the neon method for lower latency.\r\n\r\nThanks and I love the package!","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/51/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/51/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/50","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/50/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/50/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/50/events","html_url":"https://github.com/neondatabase/serverless/pull/50","id":1945564097,"node_id":"PR_kwDOIQekeM5c6zRn","number":50,"title":"Bump undici from 5.22.1 to 5.26.2","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":5724899355,"node_id":"LA_kwDOIQekeM8AAAABVTsIGw","url":"https://api.github.com/repos/neondatabase/serverless/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-10-16T15:47:51Z","updated_at":"2024-01-10T10:41:50Z","closed_at":"2024-01-10T10:41:41Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/50","html_url":"https://github.com/neondatabase/serverless/pull/50","diff_url":"https://github.com/neondatabase/serverless/pull/50.diff","patch_url":"https://github.com/neondatabase/serverless/pull/50.patch","merged_at":null},"body":"Bumps [undici](https://github.com/nodejs/undici) from 5.22.1 to 5.26.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/nodejs/undici/releases\">undici's releases</a>.</em></p>\n<blockquote>\n<h2>v5.26.2</h2>\n<p>Security Release, CVE-2023-45143.</p>\n<h2>v5.26.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix publish undici-types once and for all! by <a href=\"https://github.com/Ethan-Arrowood\"><code>@​Ethan-Arrowood</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2338\">nodejs/undici#2338</a></li>\n<li>Fix node detection omfg by <a href=\"https://github.com/KhafraDev\"><code>@​KhafraDev</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2341\">nodejs/undici#2341</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/nodejs/undici/compare/v5.26.0...v5.26.1\">https://github.com/nodejs/undici/compare/v5.26.0...v5.26.1</a></p>\n<h2>v5.26.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>use npm install instead of npm ci by <a href=\"https://github.com/Ethan-Arrowood\"><code>@​Ethan-Arrowood</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2309\">nodejs/undici#2309</a></li>\n<li>change default header to <code>node</code> by <a href=\"https://github.com/Ethan-Arrowood\"><code>@​Ethan-Arrowood</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2310\">nodejs/undici#2310</a></li>\n<li>chore: change order of the pseudo-headers by <a href=\"https://github.com/kyrylodolynskyi\"><code>@​kyrylodolynskyi</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2308\">nodejs/undici#2308</a></li>\n<li>fix: Agent.Options.factory should accept URL object or string as parameter by <a href=\"https://github.com/nicole0707\"><code>@​nicole0707</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2295\">nodejs/undici#2295</a></li>\n<li>build(deps-dev): bump sinon from 15.2.0 to 16.1.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2312\">nodejs/undici#2312</a></li>\n<li>test: handle npm ignore-scripts settings by <a href=\"https://github.com/panva\"><code>@​panva</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2313\">nodejs/undici#2313</a></li>\n<li>feat: respect <code>--max-http-header-size</code> Node.js flag by <a href=\"https://github.com/balazsorban44\"><code>@​balazsorban44</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2234\">nodejs/undici#2234</a></li>\n<li>fix(<a href=\"https://redirect.github.com/nodejs/undici/issues/2311\">#2311</a>): End stream after body sent by <a href=\"https://github.com/metcoder95\"><code>@​metcoder95</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2314\">nodejs/undici#2314</a></li>\n<li>disallow setting host header in fetch by <a href=\"https://github.com/KhafraDev\"><code>@​KhafraDev</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2322\">nodejs/undici#2322</a></li>\n<li>[StepSecurity] ci: Harden GitHub Actions by <a href=\"https://github.com/step-security-bot\"><code>@​step-security-bot</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2325\">nodejs/undici#2325</a></li>\n<li>fix fetch with coverage enabled by <a href=\"https://github.com/KhafraDev\"><code>@​KhafraDev</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2330\">nodejs/undici#2330</a></li>\n<li>Fix stuck when using http2 POST Buffer by <a href=\"https://github.com/binsee\"><code>@​binsee</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2336\">nodejs/undici#2336</a></li>\n<li>fix: 🏷️ add allowH2 to BuildOptions by <a href=\"https://github.com/binsee\"><code>@​binsee</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2334\">nodejs/undici#2334</a></li>\n<li>fix: 🐛 fix process http2 header by <a href=\"https://github.com/binsee\"><code>@​binsee</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2332\">nodejs/undici#2332</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/kyrylodolynskyi\"><code>@​kyrylodolynskyi</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2308\">nodejs/undici#2308</a></li>\n<li><a href=\"https://github.com/nicole0707\"><code>@​nicole0707</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2295\">nodejs/undici#2295</a></li>\n<li><a href=\"https://github.com/balazsorban44\"><code>@​balazsorban44</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2234\">nodejs/undici#2234</a></li>\n<li><a href=\"https://github.com/binsee\"><code>@​binsee</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2336\">nodejs/undici#2336</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/nodejs/undici/compare/v5.23.4...v5.26.0\">https://github.com/nodejs/undici/compare/v5.23.4...v5.26.0</a></p>\n<h2>v5.25.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>perf: improve parse-url implementation by <a href=\"https://github.com/anonrig\"><code>@​anonrig</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2286\">nodejs/undici#2286</a></li>\n<li>test: enable websockets inclusion in WPTReport by <a href=\"https://github.com/panva\"><code>@​panva</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2284\">nodejs/undici#2284</a></li>\n<li>remove npm run test from pre-commit hook by <a href=\"https://github.com/dancastillo\"><code>@​dancastillo</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2296\">nodejs/undici#2296</a></li>\n<li>perf: use <code>@​fastify/busboy</code> by <a href=\"https://github.com/gurgunday\"><code>@​gurgunday</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2211\">nodejs/undici#2211</a></li>\n<li>Disable finalizationregistry if node code cov by <a href=\"https://github.com/mcollina\"><code>@​mcollina</code></a> in <a href=\"https://redirect.github.com/nodejs/undici/pull/2298\">nodejs/undici#2298</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/gurgunday\"><code>@​gurgunday</code></a> made their first contribution in <a href=\"https://redirect.github.com/nodejs/undici/pull/2211\">nodejs/undici#2211</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/nodejs/undici/compare/v5.25.2...v5.25.3\">https://github.com/nodejs/undici/compare/v5.25.2...v5.25.3</a></p>\n<h2>v5.25.2</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/nodejs/undici/commit/12a62187d45f332cf39dd405f7c52b759cf40cdd\"><code>12a6218</code></a> Bumped v5.26.2</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/e041de359221ebeae04c469e8aff4145764e6d76\"><code>e041de3</code></a> Merge pull request from GHSA-wqq4-5wpv-mx2g</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/c8c80b1115d668664d8cf3acec7535b0258c3079\"><code>c8c80b1</code></a> 5.26.1</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/7bcb80c0a22509ceba1b786847faba5aded1bea0\"><code>7bcb80c</code></a> Fix node detection omfg (<a href=\"https://redirect.github.com/nodejs/undici/issues/2341\">#2341</a>)</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/69ea7b94434e2a3746e6ad1477d122a8d4075c76\"><code>69ea7b9</code></a> hopefully this fixes it for good (<a href=\"https://redirect.github.com/nodejs/undici/issues/2338\">#2338</a>)</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/4006aaf43ac8b30e16d6d3b89fa2e0df4b7eef33\"><code>4006aaf</code></a> Bumped v5.26.0</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/df9795883fb75eb97d27f86ce97a491bf023717c\"><code>df97958</code></a> fix: 🐛 fix process http2 header (<a href=\"https://redirect.github.com/nodejs/undici/issues/2332\">#2332</a>)</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/b9d83681443405bcc4e77a4c196e559944f1dfa1\"><code>b9d8368</code></a> fix: 🏷️ add allowH2 to BuildOptions (<a href=\"https://redirect.github.com/nodejs/undici/issues/2334\">#2334</a>)</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/06380f6a10d25df963c06023c3190e3f9160ed8a\"><code>06380f6</code></a> Fix stuck when using http2 POST Buffer (<a href=\"https://redirect.github.com/nodejs/undici/issues/2336\">#2336</a>)</li>\n<li><a href=\"https://github.com/nodejs/undici/commit/3a9f48171d7486a558ac6f62a7c521d46fdd208b\"><code>3a9f481</code></a> fix fetch with coverage enabled (<a href=\"https://redirect.github.com/nodejs/undici/issues/2330\">#2330</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/nodejs/undici/compare/v5.22.1...v5.26.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=undici&package-manager=npm_and_yarn&previous-version=5.22.1&new-version=5.26.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/neondatabase/serverless/network/alerts).\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/50/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/50/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/49","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/49/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/49/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/49/events","html_url":"https://github.com/neondatabase/serverless/issues/49","id":1890701463,"node_id":"I_kwDOIQekeM5wsdCX","number":49,"title":"Broken links pointing to non-existing parts of the README","user":{"login":"Jolg42","id":1328733,"node_id":"MDQ6VXNlcjEzMjg3MzM=","avatar_url":"https://avatars.githubusercontent.com/u/1328733?v=4","gravatar_id":"","url":"https://api.github.com/users/Jolg42","html_url":"https://github.com/Jolg42","followers_url":"https://api.github.com/users/Jolg42/followers","following_url":"https://api.github.com/users/Jolg42/following{/other_user}","gists_url":"https://api.github.com/users/Jolg42/gists{/gist_id}","starred_url":"https://api.github.com/users/Jolg42/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jolg42/subscriptions","organizations_url":"https://api.github.com/users/Jolg42/orgs","repos_url":"https://api.github.com/users/Jolg42/repos","events_url":"https://api.github.com/users/Jolg42/events{/privacy}","received_events_url":"https://api.github.com/users/Jolg42/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-09-11T14:55:33Z","updated_at":"2023-09-29T08:43:30Z","closed_at":"2023-09-12T15:44:38Z","author_association":"NONE","active_lock_reason":null,"body":"In the source code, you will find these 2 links in error messages:\r\n\r\n- https://github.com/neondatabase/serverless/blob/b319c6649b9e42a1d40dba713f9154c6ee1ba069/shims/net/index.ts#L157\r\n- https://github.com/neondatabase/serverless/blob/b319c6649b9e42a1d40dba713f9154c6ee1ba069/shims/net/index.ts#L250\r\n\r\nThey point to the README, but the headline they are pointing to doesn't seem to exist anymore?\r\n\r\n(at Prisma we use a URL shortener where we can update the link it points to for that use-case)","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/49/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/49/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/48","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/48/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/48/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/48/events","html_url":"https://github.com/neondatabase/serverless/issues/48","id":1882696009,"node_id":"I_kwDOIQekeM5wN6lJ","number":48,"title":"Improve bundle size","user":{"login":"DavidRouyer","id":1556750,"node_id":"MDQ6VXNlcjE1NTY3NTA=","avatar_url":"https://avatars.githubusercontent.com/u/1556750?v=4","gravatar_id":"","url":"https://api.github.com/users/DavidRouyer","html_url":"https://github.com/DavidRouyer","followers_url":"https://api.github.com/users/DavidRouyer/followers","following_url":"https://api.github.com/users/DavidRouyer/following{/other_user}","gists_url":"https://api.github.com/users/DavidRouyer/gists{/gist_id}","starred_url":"https://api.github.com/users/DavidRouyer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DavidRouyer/subscriptions","organizations_url":"https://api.github.com/users/DavidRouyer/orgs","repos_url":"https://api.github.com/users/DavidRouyer/repos","events_url":"https://api.github.com/users/DavidRouyer/events{/privacy}","received_events_url":"https://api.github.com/users/DavidRouyer/received_events","type":"User","site_admin":false},"labels":[{"id":4692001063,"node_id":"LA_kwDOIQekeM8AAAABF6pBJw","url":"https://api.github.com/repos/neondatabase/serverless/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-09-05T20:48:32Z","updated_at":"2024-05-01T12:22:07Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\nI'm building a project with Next.js, tRPC, Drizzle and Neon as a Postgres database (you can find the source code here: https://github.com/DavidRouyer/customer-service)\r\n\r\nThe library is used in the following way:\r\n\r\n```ts\r\nimport { neon } from '@neondatabase/serverless';\r\nimport { drizzle } from 'drizzle-orm/neon-http';\r\n\r\nimport * as auth from './schema/auth';\r\nimport * as contact from './schema/contact';\r\nimport * as message from './schema/message';\r\nimport * as ticket from './schema/ticket';\r\n\r\nexport const schema = { ...auth, ...contact, ...message, ...ticket };\r\n\r\nexport { pgTable as tableCreator } from './schema/_table';\r\n\r\nexport * from 'drizzle-orm';\r\n\r\nexport const db = drizzle(neon(process.env.DATABASE_URL!), { schema });\r\n```\r\n\r\nI'm having an issue when deploying my application on Vercel, I'm getting the following message: `The Edge Function \"index\" size is 1.04 MB and your plan size limit is 1 MB.`\r\n\r\nI've installed `@next/bundle-analyzer` to investigate the problem with the bundle size on the edge part:\r\n\r\n![image](https://github.com/neondatabase/serverless/assets/1556750/74451059-df2a-4781-b3ac-3c6af94693b9)\r\n\r\nAs you can see, `@neondatabase/serverless` is bundled multiple times and represents a large part of my bundle:\r\n\r\n![image](https://github.com/neondatabase/serverless/assets/1556750/96faff17-d17c-474d-9ef3-1896dcc3de83)\r\n\r\n\r\n## Expected result\r\nHave a smaller bundle size (or maybe a specific entry for edge only?)\r\n\r\n## Actual result\r\nThe bundle size is too big\r\n\r\n## Environment\r\nVercel, Edge Runtime\r\n\r\n## Logs, links\r\n- \r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/48/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/48/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/47","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/47/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/47/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/47/events","html_url":"https://github.com/neondatabase/serverless/issues/47","id":1878491233,"node_id":"I_kwDOIQekeM5v94Bh","number":47,"title":"Consider proxy monitoring on status page","user":{"login":"jansuchomel","id":4512237,"node_id":"MDQ6VXNlcjQ1MTIyMzc=","avatar_url":"https://avatars.githubusercontent.com/u/4512237?v=4","gravatar_id":"","url":"https://api.github.com/users/jansuchomel","html_url":"https://github.com/jansuchomel","followers_url":"https://api.github.com/users/jansuchomel/followers","following_url":"https://api.github.com/users/jansuchomel/following{/other_user}","gists_url":"https://api.github.com/users/jansuchomel/gists{/gist_id}","starred_url":"https://api.github.com/users/jansuchomel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jansuchomel/subscriptions","organizations_url":"https://api.github.com/users/jansuchomel/orgs","repos_url":"https://api.github.com/users/jansuchomel/repos","events_url":"https://api.github.com/users/jansuchomel/events{/privacy}","received_events_url":"https://api.github.com/users/jansuchomel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-09-02T08:43:29Z","updated_at":"2024-05-01T12:23:38Z","closed_at":"2024-05-01T12:23:38Z","author_association":"NONE","active_lock_reason":null,"body":"The http proxy is having issues today. At first the connection would timeout, now it returns \"NeonDbError: connection closed\".\r\n\r\nThe status page (https://neonstatus.com) does not mention any issues. Can you add some monitoring for the proxy?","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/47/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/47/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/46","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/46/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/46/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/46/events","html_url":"https://github.com/neondatabase/serverless/issues/46","id":1870540831,"node_id":"I_kwDOIQekeM5vfjAf","number":46,"title":"No such module","user":{"login":"jnthnclrk","id":498192,"node_id":"MDQ6VXNlcjQ5ODE5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/498192?v=4","gravatar_id":"","url":"https://api.github.com/users/jnthnclrk","html_url":"https://github.com/jnthnclrk","followers_url":"https://api.github.com/users/jnthnclrk/followers","following_url":"https://api.github.com/users/jnthnclrk/following{/other_user}","gists_url":"https://api.github.com/users/jnthnclrk/gists{/gist_id}","starred_url":"https://api.github.com/users/jnthnclrk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnthnclrk/subscriptions","organizations_url":"https://api.github.com/users/jnthnclrk/orgs","repos_url":"https://api.github.com/users/jnthnclrk/repos","events_url":"https://api.github.com/users/jnthnclrk/events{/privacy}","received_events_url":"https://api.github.com/users/jnthnclrk/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-08-28T21:33:50Z","updated_at":"2023-09-06T11:46:58Z","closed_at":"2023-09-06T11:46:57Z","author_association":"NONE","active_lock_reason":null,"body":"## Noob question…\r\n\r\nI'm prob doing this wrong, but why won't my Cloudflare worker recognise this Neon module? I connected Neon no probs using the integration option…\r\n\r\n`import { Client } from '@neondatabase/serverless';`\r\n\r\n<img width=\"500\" alt=\"Screenshot 2023-08-28 at 5 31 21 PM\" src=\"https://github.com/neondatabase/serverless/assets/498192/282c0c09-dee3-4754-aadb-5301009716cf\">\r\n\r\nThis import line is reference in a lot of CF worker Neon docs: https://developers.cloudflare.com/workers/databases/native-integrations/neon/\r\n\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/46/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/46/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/45","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/45/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/45/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/45/events","html_url":"https://github.com/neondatabase/serverless/issues/45","id":1868620528,"node_id":"I_kwDOIQekeM5vYOLw","number":45,"title":"Issues when connecting @neondatabase/serverless WebSocket Proxy with Cloudlfare Durable Objects","user":{"login":"TimoWilhelm","id":22396907,"node_id":"MDQ6VXNlcjIyMzk2OTA3","avatar_url":"https://avatars.githubusercontent.com/u/22396907?v=4","gravatar_id":"","url":"https://api.github.com/users/TimoWilhelm","html_url":"https://github.com/TimoWilhelm","followers_url":"https://api.github.com/users/TimoWilhelm/followers","following_url":"https://api.github.com/users/TimoWilhelm/following{/other_user}","gists_url":"https://api.github.com/users/TimoWilhelm/gists{/gist_id}","starred_url":"https://api.github.com/users/TimoWilhelm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TimoWilhelm/subscriptions","organizations_url":"https://api.github.com/users/TimoWilhelm/orgs","repos_url":"https://api.github.com/users/TimoWilhelm/repos","events_url":"https://api.github.com/users/TimoWilhelm/events{/privacy}","received_events_url":"https://api.github.com/users/TimoWilhelm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-08-27T20:18:26Z","updated_at":"2023-08-29T20:26:59Z","closed_at":"2023-08-29T20:26:51Z","author_association":"NONE","active_lock_reason":null,"body":"I have an issue getting the WebSocket based Neon Client with the local WebSocket Proxy to connect in my Cloudflare Durable Object scripts.\r\n\r\n## Steps to reproduce\r\nI've created a MRE Repository here: https://github.com/TimoWilhelm/mre-do-serverless-pg\r\nMake sure the local PG proxy is running (I've included a docker-compose file.\r\nYou should be able to run it locally with wrangler by running `npm install && npm run start`.\r\n\r\nThe worker will expose two routes:\r\n\r\nThe /db route will instantiate a DB client and make a query to the database in a normal Cloudflare Worker fetch event handler. This works as expected.\r\n\r\nFor the /do route the DB client is instantiated using a `state.blockConcurrencyWhile` guard in the Durable Object constructor. This will lead to the following error when the request is made: \r\n`Error: A call to blockConcurrencyWhile() in a Durable Object waited for too long. The call was canceled and the Durable Object was reset.`\r\n\r\n## Environment\r\nI'm using the WebSocket based Client since it's easier to run locally and better suited for the workload I'm planning to use. I've tested the HTTP fetch based  `neon()` function and that is working as expected in the DO guard.\r\n\r\n## Logs\r\nIt seems like the inital connection is established but for some reason the client.connect() call never returns in the DO.\r\n```\r\n2023-08-27 22:20:40 2023/08/27 20:20:40 Got 58 bytes client->pg: AAAAOgADAAB1c2VyAHBvc3RncmVzAGRhdGFiYXNlAG1haW4AY2xpZW50X2VuY29kaW5nAFVURjgAAA==\r\n2023-08-27 22:20:40 2023/08/27 20:20:40 Got 24 bytes pg->client: UgAAABcAAAAKU0NSQU0tU0hBLTI1NgAA\r\n2023-08-27 22:21:10 2023/08/27 20:21:10 failed to read from socket: use of closed network connection\r\n2023-08-27 22:21:10 2023/08/27 20:21:10 failed to handle websocket: websocket: close 1006 (abnormal closure): unexpected EOF\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/45/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/45/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/44","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/44/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/44/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/44/events","html_url":"https://github.com/neondatabase/serverless/issues/44","id":1863413977,"node_id":"I_kwDOIQekeM5vEXDZ","number":44,"title":"NeonDbError: Error connecting to database: fetch is not defined - In Google Cloud Functions framework local development.","user":{"login":"williamlmao","id":55903529,"node_id":"MDQ6VXNlcjU1OTAzNTI5","avatar_url":"https://avatars.githubusercontent.com/u/55903529?v=4","gravatar_id":"","url":"https://api.github.com/users/williamlmao","html_url":"https://github.com/williamlmao","followers_url":"https://api.github.com/users/williamlmao/followers","following_url":"https://api.github.com/users/williamlmao/following{/other_user}","gists_url":"https://api.github.com/users/williamlmao/gists{/gist_id}","starred_url":"https://api.github.com/users/williamlmao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/williamlmao/subscriptions","organizations_url":"https://api.github.com/users/williamlmao/orgs","repos_url":"https://api.github.com/users/williamlmao/repos","events_url":"https://api.github.com/users/williamlmao/events{/privacy}","received_events_url":"https://api.github.com/users/williamlmao/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-08-23T14:06:59Z","updated_at":"2023-08-23T14:36:27Z","closed_at":"2023-08-23T14:36:20Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n```\r\nimport type {HttpFunction} from '@google-cloud/functions-framework/build/src/functions';\r\nimport {neon} from '@neondatabase/serverless';\r\nimport * as dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nconst sql = neon(process.env.DATABASE_URL as string);\r\n\r\nexport const neonTest: HttpFunction = async (req, res) => {\r\n  const [users] = await sql`SELECT * FROM users`;\r\n  res.send('Done');\r\n};\r\n```\r\n\r\n## Expected result\r\nReturn the data\r\n\r\n## Actual result\r\n```\r\n[1] NeonDbError: Error connecting to database: fetch is not defined\r\n[1]     at execute (/Users/willliu/projects/soc2-cloud-functions/get-all-partners/node_modules/@neondatabase/serverless/index.js:1533:49)\r\n[1]     at NeonQueryPromise.then (/Users/willliu/projects/soc2-cloud-functions/get-all-partners/node_modules/@neondatabase/serverless/index.js:1542:56)\r\n[1]     at processTicksAndRejections (node:internal/process/task_queues:96:5)\r\n```\r\n\r\n## Environment\r\nLocal\r\n\r\n## Logs, links\r\n- Dependencies\r\n\r\n```\r\n  \"devDependencies\": {\r\n    \"@google-cloud/functions-framework\": \"^3.3.0\",\r\n    \"@types/express\": \"^4.17.17\",\r\n    \"@types/node\": \"20.4.6\",\r\n    \"concurrently\": \"^8.2.1\",\r\n    \"gts\": \"^5.0.1\",\r\n    \"nodemon\": \"^3.0.1\",\r\n    \"typescript\": \"~5.1.6\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@neondatabase/serverless\": \"^0.6.0\",\r\n    \"dotenv\": \"^16.3.1\",\r\n    \"google-auth-library\": \"^9.0.0\"\r\n  }\r\n  ````\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/44/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/44/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/43","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/43/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/43/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/43/events","html_url":"https://github.com/neondatabase/serverless/pull/43","id":1851404318,"node_id":"PR_kwDOIQekeM5X99Nr","number":43,"title":"Batch queries","user":{"login":"jawj","id":141620,"node_id":"MDQ6VXNlcjE0MTYyMA==","avatar_url":"https://avatars.githubusercontent.com/u/141620?v=4","gravatar_id":"","url":"https://api.github.com/users/jawj","html_url":"https://github.com/jawj","followers_url":"https://api.github.com/users/jawj/followers","following_url":"https://api.github.com/users/jawj/following{/other_user}","gists_url":"https://api.github.com/users/jawj/gists{/gist_id}","starred_url":"https://api.github.com/users/jawj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jawj/subscriptions","organizations_url":"https://api.github.com/users/jawj/orgs","repos_url":"https://api.github.com/users/jawj/repos","events_url":"https://api.github.com/users/jawj/events{/privacy}","received_events_url":"https://api.github.com/users/jawj/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-08-15T13:00:01Z","updated_at":"2023-08-24T10:47:01Z","closed_at":"2023-08-16T13:13:37Z","author_association":"COLLABORATOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/43","html_url":"https://github.com/neondatabase/serverless/pull/43","diff_url":"https://github.com/neondatabase/serverless/pull/43.diff","patch_url":"https://github.com/neondatabase/serverless/pull/43.patch","merged_at":"2023-08-16T13:13:37Z"},"body":"This PR adds support for batched queries/non-interactive transactions over http.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/43/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/43/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/42","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/42/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/42/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/42/events","html_url":"https://github.com/neondatabase/serverless/issues/42","id":1843470385,"node_id":"I_kwDOIQekeM5t4SAx","number":42,"title":"Export NeonDbError","user":{"login":"tmrclark","id":31194039,"node_id":"MDQ6VXNlcjMxMTk0MDM5","avatar_url":"https://avatars.githubusercontent.com/u/31194039?v=4","gravatar_id":"","url":"https://api.github.com/users/tmrclark","html_url":"https://github.com/tmrclark","followers_url":"https://api.github.com/users/tmrclark/followers","following_url":"https://api.github.com/users/tmrclark/following{/other_user}","gists_url":"https://api.github.com/users/tmrclark/gists{/gist_id}","starred_url":"https://api.github.com/users/tmrclark/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmrclark/subscriptions","organizations_url":"https://api.github.com/users/tmrclark/orgs","repos_url":"https://api.github.com/users/tmrclark/repos","events_url":"https://api.github.com/users/tmrclark/events{/privacy}","received_events_url":"https://api.github.com/users/tmrclark/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-08-09T15:03:07Z","updated_at":"2023-08-09T18:44:21Z","closed_at":"2023-08-09T15:53:13Z","author_association":"NONE","active_lock_reason":null,"body":"Can [NeonDbError](https://github.com/neondatabase/serverless/blob/main/export/httpQuery.ts#L8) be included in the package exports to allow for [instanceof narrowing](https://www.typescriptlang.org/docs/handbook/2/narrowing.html#instanceof-narrowing) in `catch` blocks like this.\r\n\r\n```ts\r\nimport { NeonDbError } from '@neondatabase/serverless';\r\n...\r\ncatch (e: unknown) {\t\r\n  if (e instanceof NeonDbError) {\r\n     // Do something\r\n  }\r\n}\r\n...\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/42/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/42/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/41","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/41/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/41/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/41/events","html_url":"https://github.com/neondatabase/serverless/issues/41","id":1842170166,"node_id":"I_kwDOIQekeM5tzUk2","number":41,"title":"NeonDbError: response too large","user":{"login":"maccman","id":2142,"node_id":"MDQ6VXNlcjIxNDI=","avatar_url":"https://avatars.githubusercontent.com/u/2142?v=4","gravatar_id":"","url":"https://api.github.com/users/maccman","html_url":"https://github.com/maccman","followers_url":"https://api.github.com/users/maccman/followers","following_url":"https://api.github.com/users/maccman/following{/other_user}","gists_url":"https://api.github.com/users/maccman/gists{/gist_id}","starred_url":"https://api.github.com/users/maccman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maccman/subscriptions","organizations_url":"https://api.github.com/users/maccman/orgs","repos_url":"https://api.github.com/users/maccman/repos","events_url":"https://api.github.com/users/maccman/events{/privacy}","received_events_url":"https://api.github.com/users/maccman/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-08-08T22:12:07Z","updated_at":"2023-08-10T16:27:59Z","closed_at":"2023-08-10T16:27:58Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\nI'm just doing a select query for 200 rows.\r\n\r\n## Expected result\r\n\r\nIt works.\r\n\r\n## Actual result\r\n\r\nI'm getting a `NeonDbError: response too large` error.\r\n\r\n## Environment\r\n\r\nThis is my config\r\n\r\n```typescript\r\nimport { neonConfig } from '@neondatabase/serverless'\r\nimport { CamelCasePlugin, Kysely } from 'kysely'\r\nimport { NeonHTTPDialect } from 'kysely-neon'\r\n\r\nimport { assertString } from '@/lib/assert'\r\n\r\nimport { DB } from './schema'\r\n\r\n// Are we in a Node.js environment?\r\nif (typeof WebSocket === 'undefined') {\r\n  neonConfig.webSocketConstructor = require('ws')\r\n}\r\n\r\nassertString(process.env.DATABASE_URL, 'DATABASE_URL is not set')\r\n\r\nexport const db = new Kysely<DB>({\r\n  dialect: new NeonHTTPDialect({\r\n    connectionString: process.env.DATABASE_URL,\r\n  }),\r\n  plugins: [new CamelCasePlugin()],\r\n})\r\n```\r\n\r\n\r\n## Logs, links\r\n- \r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/41/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/41/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/40","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/40/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/40/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/40/events","html_url":"https://github.com/neondatabase/serverless/issues/40","id":1840041152,"node_id":"I_kwDOIQekeM5trMzA","number":40,"title":"use enum for type parameters on `NeonQueryFunction`?","user":{"login":"skyzh","id":4198311,"node_id":"MDQ6VXNlcjQxOTgzMTE=","avatar_url":"https://avatars.githubusercontent.com/u/4198311?v=4","gravatar_id":"","url":"https://api.github.com/users/skyzh","html_url":"https://github.com/skyzh","followers_url":"https://api.github.com/users/skyzh/followers","following_url":"https://api.github.com/users/skyzh/following{/other_user}","gists_url":"https://api.github.com/users/skyzh/gists{/gist_id}","starred_url":"https://api.github.com/users/skyzh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skyzh/subscriptions","organizations_url":"https://api.github.com/users/skyzh/orgs","repos_url":"https://api.github.com/users/skyzh/repos","events_url":"https://api.github.com/users/skyzh/events{/privacy}","received_events_url":"https://api.github.com/users/skyzh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-08-07T18:53:56Z","updated_at":"2023-08-10T16:29:15Z","closed_at":"2023-08-10T16:29:15Z","author_association":"MEMBER","active_lock_reason":null,"body":"https://github.com/prisma/prisma-engines/pull/4110#discussion_r1286079637\r\n\r\nas pointed out in an external review of using the library, it seems to be a little bit confusing to use `true` and `false` for `NeonQueryFunction`. Not sure if it is possible to do something like:\r\n\r\n```\r\nsql: NeonQueryFunction<ArrayMode, FullResultMode>\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/40/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/40/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/39","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/39/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/39/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/39/events","html_url":"https://github.com/neondatabase/serverless/pull/39","id":1824883706,"node_id":"PR_kwDOIQekeM5WkrN1","number":39,"title":"POC: Sequential transaction suport","user":{"login":"nicksrandall","id":1800460,"node_id":"MDQ6VXNlcjE4MDA0NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1800460?v=4","gravatar_id":"","url":"https://api.github.com/users/nicksrandall","html_url":"https://github.com/nicksrandall","followers_url":"https://api.github.com/users/nicksrandall/followers","following_url":"https://api.github.com/users/nicksrandall/following{/other_user}","gists_url":"https://api.github.com/users/nicksrandall/gists{/gist_id}","starred_url":"https://api.github.com/users/nicksrandall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicksrandall/subscriptions","organizations_url":"https://api.github.com/users/nicksrandall/orgs","repos_url":"https://api.github.com/users/nicksrandall/repos","events_url":"https://api.github.com/users/nicksrandall/events{/privacy}","received_events_url":"https://api.github.com/users/nicksrandall/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-07-27T17:46:10Z","updated_at":"2023-08-11T09:58:44Z","closed_at":"2023-08-11T09:58:44Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/39","html_url":"https://github.com/neondatabase/serverless/pull/39","diff_url":"https://github.com/neondatabase/serverless/pull/39.diff","patch_url":"https://github.com/neondatabase/serverless/pull/39.patch","merged_at":"2023-08-11T09:58:44Z"},"body":"Taking inspiration from prisma, here is a proposed transaction API.\r\n\r\n```js\r\nconst sql = neon(...);\r\nconst results = await sql.transaction([\r\n  sql`SELECT ${1}::int AS int`,\r\n  sql`SELECT ${\"hello\"} AS str`\r\n], /* options */);\r\n```\r\n\r\nThe cool thing about this is that it is a non-breaking change because the sql function works as it always did. \r\n\r\nThis also paves the way for interactive transactions in the future:\r\n\r\n```js\r\nconst sql = neon(...);\r\nawait sql.transaction(async (trx) => {\r\n  await trx`SELECT ${1}::int AS int`,\r\n  await trx`SELECT ${\"hello\"} AS str`\r\n}, /* options */);\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/39/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/39/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/38","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/38/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/38/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/38/events","html_url":"https://github.com/neondatabase/serverless/pull/38","id":1820912720,"node_id":"PR_kwDOIQekeM5WXT4j","number":38,"title":"add batch query interface","user":{"login":"skyzh","id":4198311,"node_id":"MDQ6VXNlcjQxOTgzMTE=","avatar_url":"https://avatars.githubusercontent.com/u/4198311?v=4","gravatar_id":"","url":"https://api.github.com/users/skyzh","html_url":"https://github.com/skyzh","followers_url":"https://api.github.com/users/skyzh/followers","following_url":"https://api.github.com/users/skyzh/following{/other_user}","gists_url":"https://api.github.com/users/skyzh/gists{/gist_id}","starred_url":"https://api.github.com/users/skyzh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skyzh/subscriptions","organizations_url":"https://api.github.com/users/skyzh/orgs","repos_url":"https://api.github.com/users/skyzh/repos","events_url":"https://api.github.com/users/skyzh/events{/privacy}","received_events_url":"https://api.github.com/users/skyzh/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-07-25T18:31:03Z","updated_at":"2023-08-11T14:02:03Z","closed_at":"2023-08-11T14:02:03Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/38","html_url":"https://github.com/neondatabase/serverless/pull/38","diff_url":"https://github.com/neondatabase/serverless/pull/38.diff","patch_url":"https://github.com/neondatabase/serverless/pull/38.patch","merged_at":null},"body":"This is a very early draft of non-interactive txn batch query interface and might need some refactor before merging.\r\n\r\nhttps://github.com/neondatabase/neon/issues/4703\r\n\r\nTL;DR, we added a new interface:\r\n\r\n```typescript\r\n  const { txn, stmt, sql } = neon(env.NEON_DB_URL);\r\n  await txn([\r\n    stmt`SELECT ${1}::int AS int`,\r\n    stmt`SELECT ${\"hello\"} AS str`\r\n  ], /* ...options */)\r\n```\r\n\r\nmeanwhile, we are also compatible with the original way of handling a query:\r\n\r\n```typescript\r\n  const sql = neon(env.NEON_DB_URL);\r\n  await sql(`SELECT ${1}::int AS int`)\r\n```\r\n\r\nseveral challenges of the current architecture:\r\n\r\n* we don't have proper type definition for most of the HTTP query interface, and therefore we are using `any` a lot.\r\n* there does not seem to be a test framework or something like that where I can write an integration test? and therefore I just prepended my test cases to the latency benchmark.\r\n* will update README and docs after PR reviews as I feel we might need to discuss what would be the best way to expose this interface.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/38/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/38/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/37","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/37/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/37/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/37/events","html_url":"https://github.com/neondatabase/serverless/pull/37","id":1816279651,"node_id":"PR_kwDOIQekeM5WH5ck","number":37,"title":"Re-export escaping utils.","user":{"login":"nicksrandall","id":1800460,"node_id":"MDQ6VXNlcjE4MDA0NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1800460?v=4","gravatar_id":"","url":"https://api.github.com/users/nicksrandall","html_url":"https://github.com/nicksrandall","followers_url":"https://api.github.com/users/nicksrandall/followers","following_url":"https://api.github.com/users/nicksrandall/following{/other_user}","gists_url":"https://api.github.com/users/nicksrandall/gists{/gist_id}","starred_url":"https://api.github.com/users/nicksrandall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicksrandall/subscriptions","organizations_url":"https://api.github.com/users/nicksrandall/orgs","repos_url":"https://api.github.com/users/nicksrandall/repos","events_url":"https://api.github.com/users/nicksrandall/events{/privacy}","received_events_url":"https://api.github.com/users/nicksrandall/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-07-21T19:16:19Z","updated_at":"2023-07-23T16:12:55Z","closed_at":"2023-07-23T16:12:55Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/37","html_url":"https://github.com/neondatabase/serverless/pull/37","diff_url":"https://github.com/neondatabase/serverless/pull/37.diff","patch_url":"https://github.com/neondatabase/serverless/pull/37.patch","merged_at":null},"body":"See: https://node-postgres.com/apis/utilities","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/37/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/37/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/36","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/36/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/36/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/36/events","html_url":"https://github.com/neondatabase/serverless/issues/36","id":1810847108,"node_id":"I_kwDOIQekeM5r71WE","number":36,"title":"Suggestion: wake() function","user":{"login":"skybrian","id":129084,"node_id":"MDQ6VXNlcjEyOTA4NA==","avatar_url":"https://avatars.githubusercontent.com/u/129084?v=4","gravatar_id":"","url":"https://api.github.com/users/skybrian","html_url":"https://github.com/skybrian","followers_url":"https://api.github.com/users/skybrian/followers","following_url":"https://api.github.com/users/skybrian/following{/other_user}","gists_url":"https://api.github.com/users/skybrian/gists{/gist_id}","starred_url":"https://api.github.com/users/skybrian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skybrian/subscriptions","organizations_url":"https://api.github.com/users/skybrian/orgs","repos_url":"https://api.github.com/users/skybrian/repos","events_url":"https://api.github.com/users/skybrian/events{/privacy}","received_events_url":"https://api.github.com/users/skybrian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-07-18T23:09:34Z","updated_at":"2023-08-10T16:30:18Z","closed_at":"2023-08-10T16:30:18Z","author_association":"NONE","active_lock_reason":null,"body":"One way to wake a Neon database is with a dummy SQL statement like \"select 1\". However, this doesn't return until the database has started up, which may be a few seconds. A program can run it asynchronously and do other tasks, but there isn't any feedback about whether it successfully woke up the database, or how much longer it will take, until it finishes.\r\n\r\nTherefore, it would nice for if the driver had a wake() function that sent a special API request to Neon that triggers database startup and returns immediately, without waiting until the database has started. If the call succeeds, the postcondition should be that either the database is ready, or it will be ready soon.\r\n\r\nThis would be useful even without any return value because you get immediate feedback about whether you've successfully connected to Neon. If wake() succeeds then it rules out network connectivity problems; in this way it's sort of like a ping.\r\n\r\nBut the return value could also include the database status, indicating whether the database is ready now. If it's still starting up, an estimate of how much time it will take to boot would be useful for setting the refresh interval on a \"Loading...\" screen. A program could also poll using wake() to get progress until the database becomes ready.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/36/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/36/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/35","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/35/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/35/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/35/events","html_url":"https://github.com/neondatabase/serverless/issues/35","id":1810313233,"node_id":"I_kwDOIQekeM5r5zAR","number":35,"title":"httpQuery is broken in cloudflare workers. ","user":{"login":"nicksrandall","id":1800460,"node_id":"MDQ6VXNlcjE4MDA0NjA=","avatar_url":"https://avatars.githubusercontent.com/u/1800460?v=4","gravatar_id":"","url":"https://api.github.com/users/nicksrandall","html_url":"https://github.com/nicksrandall","followers_url":"https://api.github.com/users/nicksrandall/followers","following_url":"https://api.github.com/users/nicksrandall/following{/other_user}","gists_url":"https://api.github.com/users/nicksrandall/gists{/gist_id}","starred_url":"https://api.github.com/users/nicksrandall/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nicksrandall/subscriptions","organizations_url":"https://api.github.com/users/nicksrandall/orgs","repos_url":"https://api.github.com/users/nicksrandall/repos","events_url":"https://api.github.com/users/nicksrandall/events{/privacy}","received_events_url":"https://api.github.com/users/nicksrandall/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-07-18T16:43:30Z","updated_at":"2023-07-19T11:45:48Z","closed_at":"2023-07-19T11:45:47Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"httpQuery does not work in Cloudflare worker because they do not support the `cache` parameter in fetch. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/35/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/35/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/34","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/34/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/34/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/34/events","html_url":"https://github.com/neondatabase/serverless/issues/34","id":1805622229,"node_id":"I_kwDOIQekeM5rn5vV","number":34,"title":"Override fetch function for SQL-over-HTTP","user":{"login":"TimoWilhelm","id":22396907,"node_id":"MDQ6VXNlcjIyMzk2OTA3","avatar_url":"https://avatars.githubusercontent.com/u/22396907?v=4","gravatar_id":"","url":"https://api.github.com/users/TimoWilhelm","html_url":"https://github.com/TimoWilhelm","followers_url":"https://api.github.com/users/TimoWilhelm/followers","following_url":"https://api.github.com/users/TimoWilhelm/following{/other_user}","gists_url":"https://api.github.com/users/TimoWilhelm/gists{/gist_id}","starred_url":"https://api.github.com/users/TimoWilhelm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/TimoWilhelm/subscriptions","organizations_url":"https://api.github.com/users/TimoWilhelm/orgs","repos_url":"https://api.github.com/users/TimoWilhelm/repos","events_url":"https://api.github.com/users/TimoWilhelm/events{/privacy}","received_events_url":"https://api.github.com/users/TimoWilhelm/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-07-14T21:45:04Z","updated_at":"2023-07-17T11:39:36Z","closed_at":"2023-07-17T11:38:12Z","author_association":"NONE","active_lock_reason":null,"body":"Currently the only way to modify the `fetch` behavior is through the `fetchOptions` param.\r\n\r\nIt might also make sense to allow overriding of the `fetch` function itself. Some SSR frameworks provide alternative fetch functions with additional features or better performance and it could make it easier to extend the fetch behaviour (for example using [fetch-retry](https://www.npmjs.com/package/fetch-retry)).\r\n\r\nAnyway, the new new SQL-over-HTTP driver looks really promising!","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/34/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/34/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/33","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/33/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/33/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/33/events","html_url":"https://github.com/neondatabase/serverless/issues/33","id":1802635888,"node_id":"I_kwDOIQekeM5rcgpw","number":33,"title":"Any way to connect from localhost?","user":{"login":"cosbgn","id":17546283,"node_id":"MDQ6VXNlcjE3NTQ2Mjgz","avatar_url":"https://avatars.githubusercontent.com/u/17546283?v=4","gravatar_id":"","url":"https://api.github.com/users/cosbgn","html_url":"https://github.com/cosbgn","followers_url":"https://api.github.com/users/cosbgn/followers","following_url":"https://api.github.com/users/cosbgn/following{/other_user}","gists_url":"https://api.github.com/users/cosbgn/gists{/gist_id}","starred_url":"https://api.github.com/users/cosbgn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cosbgn/subscriptions","organizations_url":"https://api.github.com/users/cosbgn/orgs","repos_url":"https://api.github.com/users/cosbgn/repos","events_url":"https://api.github.com/users/cosbgn/events{/privacy}","received_events_url":"https://api.github.com/users/cosbgn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-07-13T09:42:35Z","updated_at":"2023-09-07T15:14:00Z","closed_at":"2023-07-21T14:02:08Z","author_association":"NONE","active_lock_reason":null,"body":"I would like to use an offline local instance of postgress while developing on my computer, I'm trying something like this:\r\n\r\n```\r\nimport { neon, neonConfig } from '@neondatabase/serverless'\r\nimport { drizzle } from 'drizzle-orm/neon-http'\r\n import schema from \"../database/schema.js\"\r\nneonConfig.fetchConnectionCache = true\r\nlet cached_db = null\r\n\r\nconst useDb = () => {\r\n\tif (!cached_db){\r\n                const uri = process.dev ? 'postgresql://localhost:5432/dbname' : process.env.NEON_URI\r\n\t\tconst client = neon(uri)\r\n\t\tcached_db = drizzle(client, {schema})\r\n\t}\r\n\treturn cached_db\r\n}\r\n\r\nexport const db = useDb()\r\n```\r\nBut I keep getting an error that my uri is wrong","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/33/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/33/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/32","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/32/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/32/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/32/events","html_url":"https://github.com/neondatabase/serverless/pull/32","id":1799725567,"node_id":"PR_kwDOIQekeM5VPoth","number":32,"title":"Bump semver from 5.7.1 to 5.7.2","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","site_admin":false},"labels":[{"id":5724899355,"node_id":"LA_kwDOIQekeM8AAAABVTsIGw","url":"https://api.github.com/repos/neondatabase/serverless/labels/dependencies","name":"dependencies","color":"0366d6","default":false,"description":"Pull requests that update a dependency file"}],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":0,"created_at":"2023-07-11T20:44:20Z","updated_at":"2023-07-11T20:51:47Z","closed_at":"2023-07-11T20:51:39Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/32","html_url":"https://github.com/neondatabase/serverless/pull/32","diff_url":"https://github.com/neondatabase/serverless/pull/32.diff","patch_url":"https://github.com/neondatabase/serverless/pull/32.patch","merged_at":"2023-07-11T20:51:38Z"},"body":"Bumps [semver](https://github.com/npm/node-semver) from 5.7.1 to 5.7.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/npm/node-semver/releases\">semver's releases</a>.</em></p>\n<blockquote>\n<h2>v5.7.2</h2>\n<h2><a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">5.7.2</a> (2023-07-10)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> <a href=\"https://redirect.github.com/npm/node-semver/pull/585\">#585</a> better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>) (<a href=\"https://github.com/joaomoreno\"><code>@​joaomoreno</code></a>, <a href=\"https://github.com/lukekarrys\"><code>@​lukekarrys</code></a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/npm/node-semver/blob/v5.7.2/CHANGELOG.md\">semver's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">5.7.2</a> (2023-07-10)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> <a href=\"https://redirect.github.com/npm/node-semver/pull/585\">#585</a> better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>) (<a href=\"https://github.com/joaomoreno\"><code>@​joaomoreno</code></a>, <a href=\"https://github.com/lukekarrys\"><code>@​lukekarrys</code></a>)</li>\n</ul>\n<h2>5.7</h2>\n<ul>\n<li>Add <code>minVersion</code> method</li>\n</ul>\n<h2>5.6</h2>\n<ul>\n<li>Move boolean <code>loose</code> param to an options object, with\nbackwards-compatibility protection.</li>\n<li>Add ability to opt out of special prerelease version handling with\nthe <code>includePrerelease</code> option flag.</li>\n</ul>\n<h2>5.5</h2>\n<ul>\n<li>Add version coercion capabilities</li>\n</ul>\n<h2>5.4</h2>\n<ul>\n<li>Add intersection checking</li>\n</ul>\n<h2>5.3</h2>\n<ul>\n<li>Add <code>minSatisfying</code> method</li>\n</ul>\n<h2>5.2</h2>\n<ul>\n<li>Add <code>prerelease(v)</code> that returns prerelease components</li>\n</ul>\n<h2>5.1</h2>\n<ul>\n<li>Add Backus-Naur for ranges</li>\n<li>Remove excessively cute inspection methods</li>\n</ul>\n<h2>5.0</h2>\n<ul>\n<li>Remove AMD/Browserified build artifacts</li>\n<li>Fix ltr and gtr when using the <code>*</code> range</li>\n<li>Fix for range <code>*</code> with a prerelease identifier</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/f8cc313550691a50d9662d8c94f0c033717efd7d\"><code>f8cc313</code></a> chore: release 5.7.2</li>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> fix: better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>)</li>\n<li><a href=\"https://github.com/npm/node-semver/commit/deb5ad51bf58868fa243c1683775305fe9e0e365\"><code>deb5ad5</code></a> chore: <code>@​npmcli/template-oss</code><a href=\"https://github.com/4\"><code>@​4</code></a>.16.0</li>\n<li>See full diff in <a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~lukekarrys\">lukekarrys</a>, a new releaser for semver since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=semver&package-manager=npm_and_yarn&previous-version=5.7.1&new-version=5.7.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/neondatabase/serverless/network/alerts).\n\n</details>","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/32/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/32/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/31","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/31/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/31/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/31/events","html_url":"https://github.com/neondatabase/serverless/issues/31","id":1797963978,"node_id":"I_kwDOIQekeM5rKsDK","number":31,"title":"Feature request: Support transactions using HTTP via batched queries","user":{"login":"pilcrowOnPaper","id":80624252,"node_id":"MDQ6VXNlcjgwNjI0MjUy","avatar_url":"https://avatars.githubusercontent.com/u/80624252?v=4","gravatar_id":"","url":"https://api.github.com/users/pilcrowOnPaper","html_url":"https://github.com/pilcrowOnPaper","followers_url":"https://api.github.com/users/pilcrowOnPaper/followers","following_url":"https://api.github.com/users/pilcrowOnPaper/following{/other_user}","gists_url":"https://api.github.com/users/pilcrowOnPaper/gists{/gist_id}","starred_url":"https://api.github.com/users/pilcrowOnPaper/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pilcrowOnPaper/subscriptions","organizations_url":"https://api.github.com/users/pilcrowOnPaper/orgs","repos_url":"https://api.github.com/users/pilcrowOnPaper/repos","events_url":"https://api.github.com/users/pilcrowOnPaper/events{/privacy}","received_events_url":"https://api.github.com/users/pilcrowOnPaper/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-07-11T02:36:50Z","updated_at":"2024-03-25T14:38:26Z","closed_at":"2023-07-12T12:22:45Z","author_association":"NONE","active_lock_reason":null,"body":"I'm not sure if feature requests should be made here, or if this repo even accepts feature requests. Let me know if I need to move this discussion somewhere else.\r\n\r\nMost serverless drivers unfortunately do not support transactions, including Neon's. To my knowledge, there are 2 exceptions:\r\n\r\n1. Planetscale serverless db: Full transaction support\r\n2. Cloudflare D1: Partial transaction support via batched queries\r\n\r\nWhile I understand Planetscale's approach brings complexity and (likely) performance implications, I'm interested if Cloudlfare's approach is possible in Neon. In Cloudflare D1, you can declare multiple query statements at once which will then be execute in sequence as a transaction once it reaches their servers.\r\n\r\n```ts\r\nawait db.batch([\r\n    db.prepare(\"UPDATE users SET name = ?1 WHERE id = ?2\").bind( \"John\", 17 ),\r\n    db.prepare(\"UPDATE users SET age = ?1 WHERE id = ?2\").bind( 35, 19 ),\r\n]);\r\n```\r\n\r\nSince this approach just makes a single HTTP request, it provides most of the benefits of using transactions without any downsides of it.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/31/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/31/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/30","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/30/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/30/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/30/events","html_url":"https://github.com/neondatabase/serverless/issues/30","id":1796639989,"node_id":"I_kwDOIQekeM5rFoz1","number":30,"title":"Timeout instead of error if the user did not configure the database URL","user":{"login":"kelvich","id":284219,"node_id":"MDQ6VXNlcjI4NDIxOQ==","avatar_url":"https://avatars.githubusercontent.com/u/284219?v=4","gravatar_id":"","url":"https://api.github.com/users/kelvich","html_url":"https://github.com/kelvich","followers_url":"https://api.github.com/users/kelvich/followers","following_url":"https://api.github.com/users/kelvich/following{/other_user}","gists_url":"https://api.github.com/users/kelvich/gists{/gist_id}","starred_url":"https://api.github.com/users/kelvich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kelvich/subscriptions","organizations_url":"https://api.github.com/users/kelvich/orgs","repos_url":"https://api.github.com/users/kelvich/repos","events_url":"https://api.github.com/users/kelvich/events{/privacy}","received_events_url":"https://api.github.com/users/kelvich/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2023-07-10T12:08:00Z","updated_at":"2023-07-14T13:54:40Z","closed_at":"2023-07-14T10:27:33Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"@skyzh's report:\r\n\r\n\r\nThe serverless driver will timeout instead of reporting any error if the user did not configure the database URL. It seems that the driver will try connecting to localhost:5432 if the database URL is not configured, and it will timeout. This looks like the default behavior for pg library but I don’t think it makes sense if people are using the serverless driver as they are always connecting to an external provider? I feel it would be better to give a warning / throw an error in the serverless driver in case that the database endpoint is not configured?\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/30/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/30/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/29","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/29/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/29/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/29/events","html_url":"https://github.com/neondatabase/serverless/issues/29","id":1795826748,"node_id":"I_kwDOIQekeM5rCiQ8","number":29,"title":"Add a way to abort a hung connection when using experimental neon() API","user":{"login":"skybrian","id":129084,"node_id":"MDQ6VXNlcjEyOTA4NA==","avatar_url":"https://avatars.githubusercontent.com/u/129084?v=4","gravatar_id":"","url":"https://api.github.com/users/skybrian","html_url":"https://github.com/skybrian","followers_url":"https://api.github.com/users/skybrian/followers","following_url":"https://api.github.com/users/skybrian/following{/other_user}","gists_url":"https://api.github.com/users/skybrian/gists{/gist_id}","starred_url":"https://api.github.com/users/skybrian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skybrian/subscriptions","organizations_url":"https://api.github.com/users/skybrian/orgs","repos_url":"https://api.github.com/users/skybrian/repos","events_url":"https://api.github.com/users/skybrian/events{/privacy}","received_events_url":"https://api.github.com/users/skybrian/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-07-10T02:53:27Z","updated_at":"2023-08-11T18:27:51Z","closed_at":"2023-08-11T18:27:51Z","author_association":"NONE","active_lock_reason":null,"body":"Sometimes the fetch() API used by the experimental neon() API just hangs. It would be nice to have a way to get it to abort.\r\n\r\nFor the fetch() API, an [AbortController](https://developer.mozilla.org/en-US/docs/Web/API/AbortController) can be used to create an AbortSignal that's passed to fetch(). This would require a new option to the neon() function or the query object it creates to thread through the AbortSignal.\r\n\r\n## Steps to reproduce\r\n\r\nHanging is not easily reproducible I'm afraid.\r\n\r\nSee below for the code I'm running; it's pretty basic. I'm passing in a direct connection URL. Normally it works, but when I'm unlucky, it hangs. This started happening when my database server was shut down, and it didn't seem to be starting on its own. I used the Neon console run a query and start the server, but it made no difference.\r\n\r\n## Expected result\r\n\r\nIt seems like it should either time out or start working eventually.\r\n\r\n## Actual result\r\n\r\nHangs indefinitely. I had to kill the process and re-run it to see it work again.\r\n\r\n## Environment\r\n\r\nHere's my code.\r\n\r\n```\r\nimport { config } from 'dotenv';\r\nimport { neon } from '@neondatabase/serverless';\r\n\r\nconfig();\r\n\r\nconst query = (() => {\r\n    const url = process.env.DATABASE_URL;\r\n    if (url == null) throw \"need to set DATABASE_URL environment variable\";\r\n    return neon(url);\r\n  })();\r\n\r\nconsole.log(await query(\"select id, symbol, count from counters order by id\"));\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/29/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/29/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/28","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/28/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/28/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/28/events","html_url":"https://github.com/neondatabase/serverless/issues/28","id":1774807387,"node_id":"I_kwDOIQekeM5pyWlb","number":28,"title":"Error: bind message supplies 1 parameters, but prepared statement \"\" requires 0","user":{"login":"mattiaz9","id":9766700,"node_id":"MDQ6VXNlcjk3NjY3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/9766700?v=4","gravatar_id":"","url":"https://api.github.com/users/mattiaz9","html_url":"https://github.com/mattiaz9","followers_url":"https://api.github.com/users/mattiaz9/followers","following_url":"https://api.github.com/users/mattiaz9/following{/other_user}","gists_url":"https://api.github.com/users/mattiaz9/gists{/gist_id}","starred_url":"https://api.github.com/users/mattiaz9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattiaz9/subscriptions","organizations_url":"https://api.github.com/users/mattiaz9/orgs","repos_url":"https://api.github.com/users/mattiaz9/repos","events_url":"https://api.github.com/users/mattiaz9/events{/privacy}","received_events_url":"https://api.github.com/users/mattiaz9/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2023-06-26T13:39:16Z","updated_at":"2023-06-29T06:18:28Z","closed_at":"2023-06-29T06:18:28Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\nAdding one or more parameters to the query cause the error: `NeonDbError: db error: ERROR: bind message supplies 1 parameters, but prepared statement \"\" requires 0` when `neonConfig.poolQueryViaFetch = true`\r\n```ts\r\nneonConfig.poolQueryViaFetch = true\r\nconst pool = new Pool({ connectionString: env.DATABASE_URL })\r\n\r\nconst result = await pool.query(`SELECT * FROM \"Client\" WHERE id = '$1'`, [\r\n  \"xxxxxxxxxxxx\",\r\n])\r\n```\r\n\r\n## Expected result\r\nThe same response as if the parameter were set inline like: `const result = await pool.query('SELECT * FROM \"Client\" WHERE id = \"xxxxxxxxxxxxx\"')`\r\n\r\n## Actual result\r\nThrows an error\r\n\r\n## Environment\r\nmacOS Ventura 13.4.6\r\nnode 18.6\r\nnextjs: 13.4.8-canary.2\r\n@neondatabase/serverless: 0.4.22\r\n\r\n## Logs, links\r\n- Caused by:\r\n    ERROR: bind message supplies 1 parameters, but prepared statement \"\" requires 0\r\n    at eval (webpack-internal:///(sc_server)/./node_modules/@neondatabase/serverless/index.js:5886:67)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {\r\n  code: '08P01'\r\n}\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/28/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/28/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/27","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/27/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/27/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/27/events","html_url":"https://github.com/neondatabase/serverless/issues/27","id":1773262793,"node_id":"I_kwDOIQekeM5psdfJ","number":27,"title":"Error: The server does not support SSL connections","user":{"login":"mattiaz9","id":9766700,"node_id":"MDQ6VXNlcjk3NjY3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/9766700?v=4","gravatar_id":"","url":"https://api.github.com/users/mattiaz9","html_url":"https://github.com/mattiaz9","followers_url":"https://api.github.com/users/mattiaz9/followers","following_url":"https://api.github.com/users/mattiaz9/following{/other_user}","gists_url":"https://api.github.com/users/mattiaz9/gists{/gist_id}","starred_url":"https://api.github.com/users/mattiaz9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattiaz9/subscriptions","organizations_url":"https://api.github.com/users/mattiaz9/orgs","repos_url":"https://api.github.com/users/mattiaz9/repos","events_url":"https://api.github.com/users/mattiaz9/events{/privacy}","received_events_url":"https://api.github.com/users/mattiaz9/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":5,"created_at":"2023-06-25T12:50:49Z","updated_at":"2023-06-25T14:23:01Z","closed_at":"2023-06-25T14:23:00Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\nThis is an example route using next.js\r\n```ts\r\nimport { Pool } from \"@neondatabase/serverless\"\r\nimport { sql } from \"drizzle-orm\"\r\nimport { drizzle } from \"drizzle-orm/neon-serverless\"\r\n\r\nimport { env } from \"@/env.mjs\"\r\n\r\nexport const runtime = \"edge\" // \"nodejs\"\r\n\r\nexport async function GET() {\r\n  const db = drizzle(new Pool({ connectionString: env.DATABASE_URL }))\r\n  const result = await db.execute(sql`SELECT now()`)\r\n  return new Response(JSON.stringify(result))\r\n}\r\n```\r\n\r\n## Expected result\r\nThe executed query result\r\n\r\n## Actual result\r\n`Error: The server does not support SSL connections`\r\n\r\n## Environment\r\nmacOS Ventura 13.4\r\nedge runtime / nodejs 18.6\r\nnext.js 13.4.7\r\n\r\n## Logs, links\r\nSSL is enabled for both Postgres (e.g. ?sslmode=require in the connection string) and the WebSocket tunnel (useSecureWebSocket = true). Double encryption will increase latency and CPU usage. It may be appropriate to disable SSL on the Postgres connection.\r\n- error node_modules/@neondatabase/serverless/index.js (43:20615) @ G.eval\r\n- error The server does not support SSL connections\r\n\r\n## Other\r\nI tried disabling SSL:\r\n```ts\r\n...\r\nneonConfig.useSecureWebSocket = false\r\nconst db = drizzle(new Pool({ connectionString: env.DATABASE_URL, ssl: false }))\r\n...\r\n```\r\nbut now **the request to neon db is stuck endlessly**.\r\n\r\nI also tried not to use drizzle, like in this example: https://neon.tech/docs/serverless/serverless-driver#neon-serverless-driver-with-vercel-edge-functions\r\nbut the result is the same. \r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/27/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/27/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/26","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/26/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/26/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/26/events","html_url":"https://github.com/neondatabase/serverless/issues/26","id":1755821675,"node_id":"I_kwDOIQekeM5op7Zr","number":26,"title":"using the serverless/websocket driver fails locally?","user":{"login":"Ncage1974","id":1213549,"node_id":"MDQ6VXNlcjEyMTM1NDk=","avatar_url":"https://avatars.githubusercontent.com/u/1213549?v=4","gravatar_id":"","url":"https://api.github.com/users/Ncage1974","html_url":"https://github.com/Ncage1974","followers_url":"https://api.github.com/users/Ncage1974/followers","following_url":"https://api.github.com/users/Ncage1974/following{/other_user}","gists_url":"https://api.github.com/users/Ncage1974/gists{/gist_id}","starred_url":"https://api.github.com/users/Ncage1974/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ncage1974/subscriptions","organizations_url":"https://api.github.com/users/Ncage1974/orgs","repos_url":"https://api.github.com/users/Ncage1974/repos","events_url":"https://api.github.com/users/Ncage1974/events{/privacy}","received_events_url":"https://api.github.com/users/Ncage1974/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-06-14T00:11:27Z","updated_at":"2023-06-20T20:00:44Z","closed_at":"2023-06-20T20:00:44Z","author_association":"NONE","active_lock_reason":null,"body":"I am thinking on eventually deploying my project to cloudflare workers so i'm trying to use the serverless drivers locally but when I try to connect this is the error i'm getting:\r\n\r\n```\r\n[nuxt] [request error] [unhandled] [500] All attempts to open a WebSocket to connect to the database failed. Please refer to https://github.com/neondatabase/serverless#run-on-node                                                                                                                                                                                                      3:37:57 PM\r\n  at ws (./node_modules/.pnpm/@neondatabase+serverless@0.4.14/node_modules/@neondatabase/serverless/index.js:43:2927)  \r\n  at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n```\r\nI was assuming i would want to use the `pooling` connection string but i tried to see if using the `direct` connection string would make any difference and it doesn't. \r\n\r\nI'm hoping i don't have to use different methods to connect went I deploy vs when i develop locally? As you can see in the error message i'm using Nuxt. There server is called `Nitro` which is pretty much just a node server. I looked at the link in the error message and the only suggestion was to kind of ditch websockets & use tcp\\ip but like i said i prefer not to do that because i want development to be exactly the same as when its deployed in production. I'm using drizzle orm to connect & used exactly the same that is on their site:\r\n```\r\n      console.log(\"hi\");\r\n      const config = useRuntimeConfig();\r\n      const pool = new Pool({ connectionString: config.databaseUrl });\r\n      const db = drizzle(pool);\r\n      const result = await db.select().from(myTable);\r\n      await pool.end();\r\n      return 1;\r\n```\r\n`line 5` is where its failing when it tries to do the `select` statement. Any help would be appreciated.\r\n\r\nthanks....\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/26/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/26/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/25","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/25/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/25/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/25/events","html_url":"https://github.com/neondatabase/serverless/issues/25","id":1746527758,"node_id":"I_kwDOIQekeM5oGeYO","number":25,"title":"fix `package.json` exports field","user":{"login":"alexanderniebuhr","id":45965090,"node_id":"MDQ6VXNlcjQ1OTY1MDkw","avatar_url":"https://avatars.githubusercontent.com/u/45965090?v=4","gravatar_id":"","url":"https://api.github.com/users/alexanderniebuhr","html_url":"https://github.com/alexanderniebuhr","followers_url":"https://api.github.com/users/alexanderniebuhr/followers","following_url":"https://api.github.com/users/alexanderniebuhr/following{/other_user}","gists_url":"https://api.github.com/users/alexanderniebuhr/gists{/gist_id}","starred_url":"https://api.github.com/users/alexanderniebuhr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexanderniebuhr/subscriptions","organizations_url":"https://api.github.com/users/alexanderniebuhr/orgs","repos_url":"https://api.github.com/users/alexanderniebuhr/repos","events_url":"https://api.github.com/users/alexanderniebuhr/events{/privacy}","received_events_url":"https://api.github.com/users/alexanderniebuhr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-06-07T19:21:09Z","updated_at":"2023-06-09T18:53:20Z","closed_at":"2023-06-09T10:46:57Z","author_association":"NONE","active_lock_reason":null,"body":"can you make sure the top-level `types` field, does als get added to the `exports` field, like so once published to npm?\r\n\r\n```diff\r\ndiff --git a/package.json b/package.json\r\nindex 4dd03e2c75620af7c15e464fb5ff5385ea314f25..9761af21f3aa240966b56c42a8d86a3902ef0e8c 100644\r\n--- a/package.json\r\n+++ b/package.json\r\n@@ -4,6 +4,7 @@\r\n   \"author\": \"Neon\",\r\n   \"description\": \"node-postgres via WebSockets from neon.tech\",\r\n   \"exports\": {\r\n+    \"types\": \"./index.d.ts\",\r\n     \"require\": \"./index.js\",\r\n     \"import\": \"./index.mjs\"\r\n   },\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/25/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/25/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/24","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/24/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/24/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/24/events","html_url":"https://github.com/neondatabase/serverless/issues/24","id":1740503244,"node_id":"I_kwDOIQekeM5nvfjM","number":24,"title":">0.4.4 breaks exports.","user":{"login":"alexanderniebuhr","id":45965090,"node_id":"MDQ6VXNlcjQ1OTY1MDkw","avatar_url":"https://avatars.githubusercontent.com/u/45965090?v=4","gravatar_id":"","url":"https://api.github.com/users/alexanderniebuhr","html_url":"https://github.com/alexanderniebuhr","followers_url":"https://api.github.com/users/alexanderniebuhr/followers","following_url":"https://api.github.com/users/alexanderniebuhr/following{/other_user}","gists_url":"https://api.github.com/users/alexanderniebuhr/gists{/gist_id}","starred_url":"https://api.github.com/users/alexanderniebuhr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexanderniebuhr/subscriptions","organizations_url":"https://api.github.com/users/alexanderniebuhr/orgs","repos_url":"https://api.github.com/users/alexanderniebuhr/repos","events_url":"https://api.github.com/users/alexanderniebuhr/events{/privacy}","received_events_url":"https://api.github.com/users/alexanderniebuhr/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-06-04T17:44:58Z","updated_at":"2023-06-09T15:24:45Z","closed_at":"2023-06-09T15:24:44Z","author_association":"NONE","active_lock_reason":null,"body":"All versions above 0.4.3 do not work. Only 0.4.3 works.\r\n\r\n## Expected result\r\n\r\nUsable Pool & Client exports\r\n\r\n## Actual result\r\n\r\n```\r\nPool is not a constructor\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/24/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/24/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/23","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/23/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/23/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/23/events","html_url":"https://github.com/neondatabase/serverless/pull/23","id":1738784923,"node_id":"PR_kwDOIQekeM5SCLuL","number":23,"title":"fix: emit errors that happen before open event","user":{"login":"f0ssel","id":19379394,"node_id":"MDQ6VXNlcjE5Mzc5Mzk0","avatar_url":"https://avatars.githubusercontent.com/u/19379394?v=4","gravatar_id":"","url":"https://api.github.com/users/f0ssel","html_url":"https://github.com/f0ssel","followers_url":"https://api.github.com/users/f0ssel/followers","following_url":"https://api.github.com/users/f0ssel/following{/other_user}","gists_url":"https://api.github.com/users/f0ssel/gists{/gist_id}","starred_url":"https://api.github.com/users/f0ssel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/f0ssel/subscriptions","organizations_url":"https://api.github.com/users/f0ssel/orgs","repos_url":"https://api.github.com/users/f0ssel/repos","events_url":"https://api.github.com/users/f0ssel/events{/privacy}","received_events_url":"https://api.github.com/users/f0ssel/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-06-02T20:25:27Z","updated_at":"2023-06-30T13:46:32Z","closed_at":"2023-06-09T23:34:57Z","author_association":"NONE","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/23","html_url":"https://github.com/neondatabase/serverless/pull/23","diff_url":"https://github.com/neondatabase/serverless/pull/23.diff","patch_url":"https://github.com/neondatabase/serverless/pull/23.patch","merged_at":null},"body":"While using this library I noticed that network connection errors are currently not emitted or throw on `new Client(addr)`. An example of this is a 500 http status code from the server. After some digging I realized that is because WebSocket connection errors that are emitted before the open are not surfaced to the serverless client. \r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/23/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/23/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/22","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/22/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/22/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/22/events","html_url":"https://github.com/neondatabase/serverless/issues/22","id":1733285919,"node_id":"I_kwDOIQekeM5nT9gf","number":22,"title":"[Question] Question about serverless driver over HTTP","user":{"login":"shiyuhang0","id":52435083,"node_id":"MDQ6VXNlcjUyNDM1MDgz","avatar_url":"https://avatars.githubusercontent.com/u/52435083?v=4","gravatar_id":"","url":"https://api.github.com/users/shiyuhang0","html_url":"https://github.com/shiyuhang0","followers_url":"https://api.github.com/users/shiyuhang0/followers","following_url":"https://api.github.com/users/shiyuhang0/following{/other_user}","gists_url":"https://api.github.com/users/shiyuhang0/gists{/gist_id}","starred_url":"https://api.github.com/users/shiyuhang0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shiyuhang0/subscriptions","organizations_url":"https://api.github.com/users/shiyuhang0/orgs","repos_url":"https://api.github.com/users/shiyuhang0/repos","events_url":"https://api.github.com/users/shiyuhang0/events{/privacy}","received_events_url":"https://api.github.com/users/shiyuhang0/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-05-31T02:29:57Z","updated_at":"2023-06-08T05:05:37Z","closed_at":"2023-06-08T05:05:37Z","author_association":"NONE","active_lock_reason":null,"body":"Now, neon provides serverless driver over Websocket in this repo.\r\nRecently, I noticed that Neon may release http-based driver in this blog https://neon.tech/blog/postgres-ai-playground\r\n\r\nMy question is, why a  HTTP-based driver is needed for neon?","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/22/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/22/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/21","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/21/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/21/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/21/events","html_url":"https://github.com/neondatabase/serverless/issues/21","id":1731794200,"node_id":"I_kwDOIQekeM5nORUY","number":21,"title":"[Question] question about performance?","user":{"login":"shiyuhang0","id":52435083,"node_id":"MDQ6VXNlcjUyNDM1MDgz","avatar_url":"https://avatars.githubusercontent.com/u/52435083?v=4","gravatar_id":"","url":"https://api.github.com/users/shiyuhang0","html_url":"https://github.com/shiyuhang0","followers_url":"https://api.github.com/users/shiyuhang0/followers","following_url":"https://api.github.com/users/shiyuhang0/following{/other_user}","gists_url":"https://api.github.com/users/shiyuhang0/gists{/gist_id}","starred_url":"https://api.github.com/users/shiyuhang0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shiyuhang0/subscriptions","organizations_url":"https://api.github.com/users/shiyuhang0/orgs","repos_url":"https://api.github.com/users/shiyuhang0/repos","events_url":"https://api.github.com/users/shiyuhang0/events{/privacy}","received_events_url":"https://api.github.com/users/shiyuhang0/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-05-30T08:39:15Z","updated_at":"2023-07-31T04:22:08Z","closed_at":"2023-07-31T04:22:08Z","author_association":"NONE","active_lock_reason":null,"body":"We can connect to Neon with node-pg via TCP or with serverless driver via WebSocket.\r\n\r\nI have seen multiple efforts has been made to improve the performance of serverless driver in this blog https://neon.tech/blog/serverless-driver-for-postgres\r\n\r\nSo, I wonder if there is any performance comparison between node-pg and this serverless driver. thanks!\r\n\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/21/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/21/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/20","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/20/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/20/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/20/events","html_url":"https://github.com/neondatabase/serverless/issues/20","id":1728953131,"node_id":"I_kwDOIQekeM5nDbsr","number":20,"title":"cloudflare:sockets error @ 0.4.8","user":{"login":"mgarf","id":5124393,"node_id":"MDQ6VXNlcjUxMjQzOTM=","avatar_url":"https://avatars.githubusercontent.com/u/5124393?v=4","gravatar_id":"","url":"https://api.github.com/users/mgarf","html_url":"https://github.com/mgarf","followers_url":"https://api.github.com/users/mgarf/followers","following_url":"https://api.github.com/users/mgarf/following{/other_user}","gists_url":"https://api.github.com/users/mgarf/gists{/gist_id}","starred_url":"https://api.github.com/users/mgarf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mgarf/subscriptions","organizations_url":"https://api.github.com/users/mgarf/orgs","repos_url":"https://api.github.com/users/mgarf/repos","events_url":"https://api.github.com/users/mgarf/events{/privacy}","received_events_url":"https://api.github.com/users/mgarf/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-05-27T21:27:09Z","updated_at":"2023-06-09T11:15:52Z","closed_at":"2023-06-09T11:15:52Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\nSetup Next.JS with serverless package and Drizzle ORM\r\n\r\n## Expected result\r\nNo Error on `npm run dev`\r\n\r\n## Actual result\r\n```\r\ncloudflare:sockets\r\nModule build failed: UnhandledSchemeError: Reading from \"cloudflare:sockets\" is not handled by plugins (Unhandled scheme).\r\nWebpack supports \"data:\" and \"file:\" URIs by default.\r\nYou may need an additional plugin to handle \"cloudflare:\" URIs.\r\n```\r\n\r\n## Environment\r\n\r\n\r\n## Logs, links\r\n- \r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/20/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/20/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/19","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/19/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/19/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/19/events","html_url":"https://github.com/neondatabase/serverless/issues/19","id":1727604914,"node_id":"I_kwDOIQekeM5m-Siy","number":19,"title":"0.4.5 Error - Cannot read properties of undefined (reading 'subtle')","user":{"login":"v-moravec","id":61109712,"node_id":"MDQ6VXNlcjYxMTA5NzEy","avatar_url":"https://avatars.githubusercontent.com/u/61109712?v=4","gravatar_id":"","url":"https://api.github.com/users/v-moravec","html_url":"https://github.com/v-moravec","followers_url":"https://api.github.com/users/v-moravec/followers","following_url":"https://api.github.com/users/v-moravec/following{/other_user}","gists_url":"https://api.github.com/users/v-moravec/gists{/gist_id}","starred_url":"https://api.github.com/users/v-moravec/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/v-moravec/subscriptions","organizations_url":"https://api.github.com/users/v-moravec/orgs","repos_url":"https://api.github.com/users/v-moravec/repos","events_url":"https://api.github.com/users/v-moravec/events{/privacy}","received_events_url":"https://api.github.com/users/v-moravec/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":7,"created_at":"2023-05-26T13:12:32Z","updated_at":"2023-06-09T15:20:13Z","closed_at":"2023-06-09T15:20:13Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\nnpx nuxi init \\<project-name\\>\r\nyarn add drizzle-orm @neondatabase/serverless\r\nyarn add -D drizzle-kit\r\n\r\ndb.ts\r\n\r\n```\r\nimport {neonConfig, Pool} from '@neondatabase/serverless';\r\nimport {drizzle, NeonDatabase} from 'drizzle-orm/neon-serverless';\r\nimport * as schema from '~/server/drizzle/schema';\r\n\r\n// if we're running locally\r\nif (!process.env.VERCEL_ENV) {\r\n  // Set the WebSocket proxy to work with the local instance\r\n  neonConfig.wsProxy = (host) => `${host}:5433/v1`\r\n  // Disable all authentication and encryption\r\n  neonConfig.useSecureWebSocket = false\r\n  neonConfig.pipelineTLS = false\r\n  neonConfig.pipelineConnect = false\r\n}\r\n\r\nconst config = useRuntimeConfig()\r\n\r\nif (!config.dbUrl) {\r\n  throw new Error('POSTGRES_URL is not set')\r\n}\r\n\r\n\r\nlet db: NeonDatabase<typeof schema> | undefined = undefined\r\n\r\nexport const useDB = () => {\r\n  if (db) {\r\n    return db\r\n  }\r\n  const pool = new Pool({ connectionString: config.dbUrl })\r\n  db = drizzle(pool, { schema })\r\n  return db\r\n}\r\n\r\ndb = useDB()\r\n\r\n```\r\n## Expected result\r\nShould work\r\n\r\n## Actual result\r\nInstead throws error\r\n\r\n## Environment\r\nNuxt 3.5\r\n@neondatabase/serverless 0.4.5\r\nNode v18.12.0\r\n\r\n## Logs, links\r\nERROR  [worker reload] [worker init] Cannot read properties of undefined (reading 'subtle')                                                                             3:07:35 PM\r\n\r\n  at node_modules/@neondatabase/serverless/index.js:1:59242\r\n  at node_modules/@neondatabase/serverless/index.js:1:347\r\n  at node_modules/@neondatabase/serverless/index.js:1:60107\r\n  at node_modules/@neondatabase/serverless/index.js:1:347\r\n  at node_modules/@neondatabase/serverless/index.js:46:2299\r\n  at node_modules/@neondatabase/serverless/index.js:1:347\r\n  at node_modules/@neondatabase/serverless/index.js:46:25042\r\n  at node_modules/@neondatabase/serverless/index.js:1:347\r\n  at Object.<anonymous> (node_modules/@neondatabase/serverless/index.js:46:25975)\r\n  at Module._compile (node:internal/modules/cjs/loader:1159:14)\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/19/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/19/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/18","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/18/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/18/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/18/events","html_url":"https://github.com/neondatabase/serverless/issues/18","id":1727102324,"node_id":"I_kwDOIQekeM5m8X10","number":18,"title":"Support local postgres, consider `pg-cloudflare`?","user":{"login":"ben-xD","id":24711048,"node_id":"MDQ6VXNlcjI0NzExMDQ4","avatar_url":"https://avatars.githubusercontent.com/u/24711048?v=4","gravatar_id":"","url":"https://api.github.com/users/ben-xD","html_url":"https://github.com/ben-xD","followers_url":"https://api.github.com/users/ben-xD/followers","following_url":"https://api.github.com/users/ben-xD/following{/other_user}","gists_url":"https://api.github.com/users/ben-xD/gists{/gist_id}","starred_url":"https://api.github.com/users/ben-xD/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ben-xD/subscriptions","organizations_url":"https://api.github.com/users/ben-xD/orgs","repos_url":"https://api.github.com/users/ben-xD/repos","events_url":"https://api.github.com/users/ben-xD/events{/privacy}","received_events_url":"https://api.github.com/users/ben-xD/received_events","type":"User","site_admin":false},"labels":[{"id":4692001063,"node_id":"LA_kwDOIQekeM8AAAABF6pBJw","url":"https://api.github.com/repos/neondatabase/serverless/labels/enhancement","name":"enhancement","color":"a2eeef","default":true,"description":"New feature or request"}],"state":"open","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":8,"created_at":"2023-05-26T07:54:03Z","updated_at":"2024-05-01T12:23:27Z","closed_at":null,"author_association":"NONE","active_lock_reason":null,"body":"https://www.npmjs.com/package/pg-cloudflare was released 11 days ago. It uses native TCP connections on Cloudflare Workers, since Cloudflare has recently added that capability. https://www.npmjs.com/package/pg\r\n\r\nHowever, this package uses `pg`, which doesn't take advantage of this.\r\n\r\nAdding support for this will mean I can develop offline (in trains, flights) and improves the testability (e.g. just spin a postgres up to run certain tests).","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/18/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/18/timeline","performed_via_github_app":null,"state_reason":"reopened"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/17","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/17/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/17/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/17/events","html_url":"https://github.com/neondatabase/serverless/issues/17","id":1692434014,"node_id":"I_kwDOIQekeM5k4H5e","number":17,"title":"Websocket connection  failed","user":{"login":"IshanKBG","id":71317082,"node_id":"MDQ6VXNlcjcxMzE3MDgy","avatar_url":"https://avatars.githubusercontent.com/u/71317082?v=4","gravatar_id":"","url":"https://api.github.com/users/IshanKBG","html_url":"https://github.com/IshanKBG","followers_url":"https://api.github.com/users/IshanKBG/followers","following_url":"https://api.github.com/users/IshanKBG/following{/other_user}","gists_url":"https://api.github.com/users/IshanKBG/gists{/gist_id}","starred_url":"https://api.github.com/users/IshanKBG/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/IshanKBG/subscriptions","organizations_url":"https://api.github.com/users/IshanKBG/orgs","repos_url":"https://api.github.com/users/IshanKBG/repos","events_url":"https://api.github.com/users/IshanKBG/events{/privacy}","received_events_url":"https://api.github.com/users/IshanKBG/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-05-02T13:31:45Z","updated_at":"2023-06-09T11:18:58Z","closed_at":"2023-06-09T11:18:58Z","author_association":"NONE","active_lock_reason":null,"body":"Hey guys,\r\nIt looks I am unable to connect to neondb locally.\r\nIt shows a stacktrace error which says \" All attempts to open a WebSocket to connect to the database failed.\"\r\nI am not sure what;s causing this error as i followed very step on the neon docs.\r\n![Screenshot_2023-05-02_18-51-53](https://user-images.githubusercontent.com/71317082/235681072-c2e0e192-0dcd-416f-bb89-08ef9d3e805f.png)\r\n\r\nHere is the code\r\n```ts\r\n import type { DB } from \"kysely-codegen\"\r\nimport { Pool } from \"@neondatabase/serverless\"\r\nimport { PostgresDialect, Kysely } from \"kysely\"\r\nexport const pool = new Pool({\r\n  connectionString: \"<string>\"\r\n})\r\n\r\nexport const db = new Kysely<DB>({\r\n  dialect: new PostgresDialect({ pool })\r\n})\r\n```\r\nI am using kysely and astro for my project\r\nThis error is happening locally\r\nThe deployment target is cloudflare","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/17/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/17/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/16","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/16/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/16/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/16/events","html_url":"https://github.com/neondatabase/serverless/pull/16","id":1667679999,"node_id":"PR_kwDOIQekeM5OTCqr","number":16,"title":"Add LICENSE","user":{"login":"m-abdelwahab","id":27310414,"node_id":"MDQ6VXNlcjI3MzEwNDE0","avatar_url":"https://avatars.githubusercontent.com/u/27310414?v=4","gravatar_id":"","url":"https://api.github.com/users/m-abdelwahab","html_url":"https://github.com/m-abdelwahab","followers_url":"https://api.github.com/users/m-abdelwahab/followers","following_url":"https://api.github.com/users/m-abdelwahab/following{/other_user}","gists_url":"https://api.github.com/users/m-abdelwahab/gists{/gist_id}","starred_url":"https://api.github.com/users/m-abdelwahab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/m-abdelwahab/subscriptions","organizations_url":"https://api.github.com/users/m-abdelwahab/orgs","repos_url":"https://api.github.com/users/m-abdelwahab/repos","events_url":"https://api.github.com/users/m-abdelwahab/events{/privacy}","received_events_url":"https://api.github.com/users/m-abdelwahab/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-04-14T07:25:27Z","updated_at":"2023-04-14T10:22:45Z","closed_at":"2023-04-14T10:22:45Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/16","html_url":"https://github.com/neondatabase/serverless/pull/16","diff_url":"https://github.com/neondatabase/serverless/pull/16.diff","patch_url":"https://github.com/neondatabase/serverless/pull/16.patch","merged_at":"2023-04-14T10:22:45Z"},"body":"Adds MIT LICENSE to the project","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/16/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/16/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/15","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/15/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/15/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/15/events","html_url":"https://github.com/neondatabase/serverless/issues/15","id":1663699078,"node_id":"I_kwDOIQekeM5jKgiG","number":15,"title":"Websocket error on Vercel Serverless Function","user":{"login":"domluna","id":1907223,"node_id":"MDQ6VXNlcjE5MDcyMjM=","avatar_url":"https://avatars.githubusercontent.com/u/1907223?v=4","gravatar_id":"","url":"https://api.github.com/users/domluna","html_url":"https://github.com/domluna","followers_url":"https://api.github.com/users/domluna/followers","following_url":"https://api.github.com/users/domluna/following{/other_user}","gists_url":"https://api.github.com/users/domluna/gists{/gist_id}","starred_url":"https://api.github.com/users/domluna/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/domluna/subscriptions","organizations_url":"https://api.github.com/users/domluna/orgs","repos_url":"https://api.github.com/users/domluna/repos","events_url":"https://api.github.com/users/domluna/events{/privacy}","received_events_url":"https://api.github.com/users/domluna/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2023-04-12T04:02:41Z","updated_at":"2023-06-20T08:06:04Z","closed_at":"2023-06-20T08:06:04Z","author_association":"NONE","active_lock_reason":null,"body":"\r\n\r\nI'm getting the following error when using this on vercel\r\n\r\n```\r\nUnhandled Promise Rejection \t{\"errorType\":\"Runtime.UnhandledPromiseRejection\",\"errorMessage\":\"Error: All attempts to open a WebSocket to connect to the database failed. If using Node, please install the `ws` package (or simply use the `pg` package instead).\",\"reason\":{\"errorType\":\"Error\",\"errorMessage\":\"All attempts to open a WebSocket to connect to the database failed. If using Node, please install the `ws` package (or simply use the `pg` package instead).\",\"stack\":[\"Error: All attempts to open a WebSocket to connect to the database failed. If using Node, please install the `ws` package (or simply use the `pg` package instead).\",\"    at ws (/var/task/node_modules/@neondatabase/serverless/index.js:43:3301)\",\"    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\"]},\"promise\":{},\"stack\":[\"Runtime.UnhandledPromiseRejection: Error: All attempts to open a WebSocket to connect to the database failed. If using Node, please install the `ws` package (or simply use the `pg` package instead).\",\"    at process.<anonymous> (file:///var/runtime/index.mjs:1188:17)\",\"    at process.emit (node:events:525:35)\",\"    at emit (node:internal/process/promises:149:20)\",\"    at processPromiseRejections (node:internal/process/promises:283:27)\",\"    at process.processTicksAndRejections (node:internal/process/task_queues:96:32)\"]}\r\nUnknown application error occurred\r\nRuntime.Unknown\r\n```\r\n\r\nI also got this locally and then install ws and then it went away. `ws`should be available on Vercel so I'm not sure what the issue this. This is my package.json\r\n\r\n```\r\n  \"devDependencies\": {\r\n    \"@sveltejs/adapter-auto\": \"^2.0.0\",\r\n    \"@sveltejs/kit\": \"^1.11.0\",\r\n    \"autoprefixer\": \"^10.4.13\",\r\n    \"dotenv-cli\": \"^7.2.1\",\r\n    \"esbuild\": \"^0.17.16\",\r\n    \"flowbite-svelte\": \"^0.29.12\",\r\n    \"postcss\": \"^8.4.21\",\r\n    \"prettier\": \"^2.8.3\",\r\n    \"prettier-plugin-svelte\": \"^2.9.0\",\r\n    \"svelte\": \"^3.57.0\",\r\n    \"svelte-check\": \"^3.0.1\",\r\n    \"tailwindcss\": \"^3.2.4\",\r\n    \"tslib\": \"^2.4.1\",\r\n    \"typescript\": \"^4.9.3\",\r\n    \"vite\": \"^4.0.0\",\r\n    \"vite-plugin-top-level-await\": \"^1.3.0\",\r\n    \"vite-plugin-wasm\": \"^3.2.2\"\r\n  },\r\n  \"type\": \"module\",\r\n  \"dependencies\": {\r\n    \"@auth/core\": \"^0.5.1\",\r\n    \"@auth/sveltekit\": \"^0.3.0\",\r\n    \"@neondatabase/serverless\": \"^0.2.9\",\r\n    \"@sveltejs/adapter-vercel\": \"^2.4.1\",\r\n    \"ag-grid-community\": \"^29.2.0\",\r\n    \"ag-grid-react\": \"^29.2.0\",\r\n    \"apache-arrow\": \"^11.0.0\",\r\n    \"install\": \"^0.13.0\",\r\n    \"lucide-svelte\": \"^0.130.1\",\r\n    \"marked\": \"^4.3.0\",\r\n    \"parquet-wasm\": \"^0.4.0-beta.5\",\r\n    \"ws\": \"^8.13.0\"\r\n  }\r\n```\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/15/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/15/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/14","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/14/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/14/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/14/events","html_url":"https://github.com/neondatabase/serverless/issues/14","id":1658130181,"node_id":"I_kwDOIQekeM5i1Q8F","number":14,"title":"Huge stacktrace","user":{"login":"retrohacker","id":1081565,"node_id":"MDQ6VXNlcjEwODE1NjU=","avatar_url":"https://avatars.githubusercontent.com/u/1081565?v=4","gravatar_id":"","url":"https://api.github.com/users/retrohacker","html_url":"https://github.com/retrohacker","followers_url":"https://api.github.com/users/retrohacker/followers","following_url":"https://api.github.com/users/retrohacker/following{/other_user}","gists_url":"https://api.github.com/users/retrohacker/gists{/gist_id}","starred_url":"https://api.github.com/users/retrohacker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/retrohacker/subscriptions","organizations_url":"https://api.github.com/users/retrohacker/orgs","repos_url":"https://api.github.com/users/retrohacker/repos","events_url":"https://api.github.com/users/retrohacker/events{/privacy}","received_events_url":"https://api.github.com/users/retrohacker/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-04-06T22:36:03Z","updated_at":"2023-06-25T20:49:10Z","closed_at":"2023-06-25T14:32:49Z","author_association":"NONE","active_lock_reason":null,"body":"When an exception is thrown from down inside the library in a cloudflare worker, the resulting stacktrace in the logs is massive. Not sure if there is a way to clean this up, but it's a real bummer because it pushes your console.log statements way up in the terminal. Here is some example output:\r\n\r\n```\r\n[api] [0] ✘ [ERROR] Uncaught (in promise) error: relation \"users\" does not exist\r\n[api] [0] \r\n[api] [0]   `});var As={};le(As,{Socket:()=>J,isIP:()=>pc});function pc(r){return 0}var bs,G,J,Mt=te(()=>{\"use strict\";d();bs=lt(be(),1);vs();Es();G=class extends bs.EventEmitter{constructor(){super(...arguments);g(this,\"defaultsKey\",\"other\");g(this,\"_webSocketConstructor\");g(this,\"_wsProxy\");g(this,\"_coalesceWrites\");g(this,\"_useSecureWebSocket\");g(this,\"_disableSNI\");g(this,\"_pipelineConnect\");g(this,\"_pipelineTLS\");g(this,\"_rootCerts\");g(this,\"connecting\",!1);g(this,\"pending\",!0);g(this,\"writable\",!0);g(this,\"encrypted\",!1);g(this,\"authorized\",!1);g(this,\"destroyed\",!1);g(this,\"ws\",null);g(this,\"writeBuffer\");g(this,\"tlsState\",0);g(this,\"tlsRead\");g(this,\"tlsWrite\")}get webSocketConstructor(){return this._webSocketConstructor??G.webSocketConstructor??G.defaults[this.defaultsKey].webSocketConstructor}set webSocketConstructor(t){this._webSocketConstructor=t}get wsProxy(){return this._wsProxy??G.wsProxy??G.defaults[this.defaultsKey].wsProxy}set wsProxy(t){this._wsProxy=t}get coalesceWrites(){return this._coalesceWrites??G.coalesceWrites??G.defaults[this.defaultsKey].coalesceWrites}set coalesceWrites(t){this._coalesceWrites=t}get useSecureWebSocket(){return this._useSecureWebSocket??G.useSecureWebSocket??G.defaults[this.defaultsKey].useSecureWebSocket}set useSecureWebSocket(t){this._useSecureWebSocket=t}get disableSNI(){return this._disableSNI??G.disableSNI??G.defaults[this.defaultsKey].disableSNI}set disableSNI(t){this._disableSNI=t}get pipelineConnect(){return this._pipelineConnect??G.pipelineConnect??G.defaults[this.defaultsKey].pipelineConnect}set pipelineConnect(t){this._pipelineConnect=t}get pipelineTLS(){return this._pipelineTLS??G.pipelineTLS??G.defaults[this.defaultsKey].pipelineTLS}set pipelineTLS(t){this._pipelineTLS=t}get rootCerts(){return this._rootCerts??G.rootCerts??G.defaults[this.defaultsKey].rootCerts}set rootCerts(t){this._rootCerts=t}wsProxyAddrForHost(t,n){let i=this.wsProxy;if(i===void 0){let s=`No WebSocket proxy is configured on the Neon serverless driver for database host \"${t}\". `,o=\"That's the fallback host when none is specified, so perhaps an environment variable (such as DATABASE_URL) is missing? \",a=`If \"${t}\" is the host you expected, then you'll need to set the 'wsProxy' option on the driver (see: https://github.com/neondatabase/serverless#run-your-own-websocket-proxy).`,u=s+(t===\"localhost\"?o:\"\")+a;throw new Error(u)}return typeof i==\"function\"?i(t,n):`${i}?address=${t}:${n}`}setNoDelay(){return this}setKeepAlive(){return this}ref(){return this}unref(){return this}async connect(t,n,i){/[.]neon[.](tech|build)(:|$)/.test(n)&&(this.defaultsKey=\"neon\"),this.connecting=!0,i&&this.once(\"connect\",i);let s=this.wsProxyAddrForHost(n,typeof t==\"string\"?parseInt(t,10):t);return this.ws=await new Promise(async o=>{try{let u=(this.useSecureWebSocket?\"wss:\":\"ws:\")+\"//\"+s,c;if(this.webSocketConstructor!==void 0)c=new this.webSocketConstructor(u);else try{c=new WebSocket(u)}catch{try{c=new __unstable_WebSocket(u)}catch{let{default:w}=await import(String.fromCharCode(119)+String.fromCharCode(115));c=new w(u)}}c.addEventListener(\"open\",()=>{o(c)})}catch(a){try{let c=(this.useSecureWebSocket?\"https:\":\"http:\")+\"//\"+s;await fetch(c,{headers:{Upgrade:\"websocket\"}}).then(h=>{let f=h.webSocket;if(f==null)throw a;f.accept(),o(f)})}catch{throw new Error(\"All attempts to open a WebSocket to connect to the database failed. If using Node, please install the `ws` package (or simply use the `pg` package instead).\")}}}),this.ws.binaryType=\"arraybuffer\",this.ws.addEventListener(\"error\",o=>{this.emit(\"error\",o)}),this.ws.addEventListener(\"close\",()=>{this.emit(\"close\")}),this.ws.addEventListener(\"message\",o=>{if(this.tlsState===0){let a=p.from(o.data);this.emit(\"data\",a)}}),this.connecting=!1,this.pending=!1,this.emit(\"connect\"),this.emit(\"ready\"),this}async startTls(t){this.tlsState=1;let n=qr.fromPEM(Rt),i=new xs(this.ws),s=i.read.bind(i),o=this.rawWrite.bind(this),[a,u]=await Ss(t,n,s,o,!this.disableSNI,void 0,this.pipelineTLS?new Uint8Array([83]):void 0);this.tlsRead=a,this.tlsWrite=u,this.tlsState=2,this.encrypted=!0,this.authorized=!0,this.emit(\"secureConnection\",this),this.tlsReadLoop()}async tlsReadLoop(){for(;;){let t=await this.tlsRead();if(t===void 0)break;{let n=p.from(t);this.emit(\"data\",n)}}}rawWrite(t){if(!this.coalesceWrites){this.ws.send(t);return}if(this.writeBuffer===void 0)this.writeBuffer=t,setTimeout(()=>{this.ws.send(this.writeBuffer),this.writeBuffer=void 0},0);else{let n=new Uint8Array(this.writeBuffer.length+t.length);n.set(this.writeBuffer),n.set(t,this.writeBuffer.length),this.writeBuffer=n}}write(t,n=\"utf8\",i=s=>{}){return t.length===0?i():(typeof t==\"string\"&&(t=p.from(t,n)),this.tlsState===0?this.rawWrite(t):this.tlsState===1?this.once(\"secureConnection\",()=>this.write(t,n,i)):this.tlsWrite(t),!0)}end(t=p.alloc(0),n=\"utf8\",i){return this.write(t,n,()=>{this.ws.close(),i&&i()}),this}destroy(){return this.destroyed=!0,this.end()}},J=G;g(J,\"addNeonProjectToPassword\",!1),g(J,\"defaults\",{neon:{webSocketConstructor:void 0,wsProxy:t=>t+\"/v2\",useSecureWebSocket:!0,coalesceWrites:!0,disableSNI:!1,pipelineConnect:\"password\",pipelineTLS:!0,rootCerts:Rt},other:{webSocketConstructor:void 0,wsProxy:void 0,useSecureWebSocket:!0,coalesceWrites:!0,disableSNI:!1,pipelineConnect:!1,pipelineTLS:!1,rootCerts:Rt}}),g(J,\"webSocketConstructor\"),g(J,\"wsProxy\"),g(J,\"coalesceWrites\"),g(J,\"useSecureWebSocket\"),g(J,\"disableSNI\"),g(J,\"pipelineConnect\"),g(J,\"pipelineTLS\"),g(J,\"rootCerts\")});var tn=C(A=>{\"use strict\";d();Object.defineProperty(A,\"__esModule\",{value:!0});A.NoticeMessage=A.DataRowMessage=A.CommandCompleteMessage=A.ReadyForQueryMessage=A.NotificationResponseMessage=A.BackendKeyDataMessage=A.AuthenticationMD5Password=A.ParameterStatusMessage=A.ParameterDescriptionMessage=A.RowDescriptionMessage=A.Field=A.CopyResponse=A.CopyDataMessage=A.DatabaseError=A.copyDone=A.emptyQuery=A.replicationStart=A.portalSuspended=A.noData=A.closeComplete=A.bindComplete=A.parseComplete=void 0;A.parseComplete={name:\"parseComplete\",length:5};A.bindComplete={name:\"bindComplete\",length:5};A.closeComplete={name:\"closeComplete\",length:5};A.noData={name:\"noData\",length:5};A.portalSuspended={name:\"portalSuspended\",length:5};A.replicationStart={name:\"replicationStart\",length:4};A.emptyQuery={name:\"emptyQuery\",length:4};A.copyDone={name:\"copyDone\",length:4};var Qr=class extends Error{constructor(e,t,n){super(e),this.length=t,this.name=n}};A.DatabaseError=Qr;var Hr=class{constructor(e,t){this.length=e,this.chunk=t,this.name=\"copyData\"}};A.CopyDataMessage=Hr;var jr=class{constructor(e,t,n,i){this.length=e,this.name=t,this.binary=n,this.columnTypes=new Array(i)}};A.CopyResponse=jr;var Kr=class{constructor(e,t,n,i,s,o,a){this.name=e,this.tableID=t,this.columnID=n,this.dataTypeID=i,this.dataTypeSize=s,this.dataTypeModifier=o,this.format=a}};A.Field=Kr;var $r=class{constructor(e,t){this.length=e,this.fieldCount=t,this.name=\"rowDescription\",this.fields=new Array(this.fieldCount)}};A.RowDescriptionMessage=$r;var Wr=class{constructor(e,t){this.length=e,this.parameterCount=t,this.name=\"parameterDescription\",this.dataTypeIDs=new Array(this.parameterCount)}};A.ParameterDescriptionMessage=Wr;var Gr=class{constructor(e,t,n){this.length=e,this.parameterName=t,this.parameterValue=n,this.name=\"parameterStatus\"}};A.ParameterStatusMessage=Gr;var Vr=class{constructor(e,t){this.length=e,this.salt=t,this.name=\"authenticationMD5Password\"}};A.AuthenticationMD5Password=Vr;var zr=class{constructor(e,t,n){this.length=e,this.processID=t,this.secretKey=n,this.name=\"backendKeyData\"}};A.BackendKeyDataMessage=zr;var Yr=class{constructor(e,t,n,i){this.length=e,this.processId=t,this.channel=n,this.payload=i,this.name=\"notification\"}};A.NotificationResponseMessage=Yr;var Jr=class{constructor(e,t){this.length=e,this.status=t,this.name=\"readyForQuery\"}};A.ReadyForQueryMessage=Jr;var Zr=class{constructor(e,t){this.length=e,this.text=t,this.name=\"commandComplete\"}};A.CommandCompleteMessage=Zr;var Xr=class{constructor(e,t){this.length=e,this.fields=t,this.name=\"dataRow\",this.fieldCount=t.length}};A.DataRowMessage=Xr;var en=class{constructor(e,t){this.length=e,this.message=t,this.name=\"notice\"}};A.NoticeMessage=en});var _s=C(kt=>{\"use strict\";d();Object.defineProperty(kt,\"__esModule\",{value:!0});kt.Writer=void 0;var rn=class{constructor(e=256){this.size=e,this.offset=5,this.headerPosition=0,this.buffer=p.allocUnsafe(e)}ensure(e){var t=this.buffer.length-this.offset;if(t<e){var n=this.buffer,i=n.length+(n.length>>1)+e;this.buffer=p.allocUnsafe(i),n.copy(this.buffer)}}addInt32(e){return this.ensure(4),this.buffer[this.offset++]=e>>>24&255,this.buffer[this.offset++]=e>>>16&255,this.buffer[this.offset++]=e>>>8&255,this.buffer[this.offset++]=e>>>0&255,this}addInt16(e){return this.ensure(2),this.buffer[this.offset++]=e>>>8&255,this.buffer[this.offset++]=e>>>0&255,this}addCString(e){if(!e)this.ensure(1);else{var t=p.byteLength(e);this.ensure(t+1),this.buffer.write(e,this.offset,\"utf-8\"),this.offset+=t}return this.buffer[this.offset++]=0,this}addString(e=\"\"){var t=p.byteLength(e);return this.ensure(t),this.buffer.write(e,this.offset),this.offset+=t,this}add(e){return this.ensure(e.length),e.copy(this.buffer,this.offset),this.offset+=e.length,this}join(e){if(e){this.buffer[this.headerPosition]=e;let t=this.offset-(this.headerPosition+1);this.buffer.writeInt32BE(t,this.headerPosition+1)}return this.buffer.slice(e?0:5,this.offset)}flush(e){var t=this.join(e);return this.offset=5,this.headerPosition=0,this.buffer=p.allocUnsafe(this.size),t}};kt.Writer=rn});var Us=C(Nt=>{\"use strict\";d();Object.defineProperty(Nt,\"__esModule\",{value:!0});Nt.serialize=void 0;var nn=_s(),O=new nn.Writer,yc=r=>{O.addInt16(3).addInt16(0);for(let n of Object.keys(r))O.addCString(n).addCString(r[n]);O.addCString(\"client_encoding\").addCString(\"UTF8\");var e=O.addCString(\"\").flush(),t=e.length+4;return new nn.Writer().addInt32(t).add(e).flush()},wc=()=>{let r=p.allocUnsafe(8);return r.writeInt32BE(8,0),r.writeInt32BE(80877103,4),r},mc=r=>O.addCString(r).flush(112),gc=function(r,e){return O.addCString(r).addInt32(p.byteLength(e)).addString(e),O.flush(112)},Sc=function(r){return O.addString(r).flush(112)},xc=r=>O.addCString(r).flush(81),Cs=[],vc=r=>{let e=r.name||\"\";e.length>63&&(console.error(\"Warning! Postgres only supports 63 characters for query names.\"),console.error(\"You supplied %s (%s)\",e,e.length),console.error(\"This can cause conflicts and silent errors executing queries\"));let t=r.types||Cs;for(var n=t.length,i=O.addCString(e).addCString(r.text).addInt16(n),s=0;s<n;s++)i.addInt32(t[s]);return O.flush(80)},He=new nn.Writer,Ec=function(r,e){for(let t=0;t<r.length;t++){let n=e?e(r[t],t):r[t];n==null?(O.addInt16(0),He.addInt32(-1)):n instanceof p?(O.addInt16(1),He.addInt32(n.length),He.add(n)):(O.addInt16(0),He.addInt32(p.byteLength(n)),He.addString(n))}},bc=(r={})=>{let e=r.portal||\"\",t=r.statement||\"\",n=r.binary||!1,i=r.values||Cs,s=i.length;return O.addCString(e).addCString(t),O.addInt16(s),Ec(i,r.valueMapper),O.addInt16(s),O.add(He.flush()),O.addInt16(n?1:0),O.flush(66)},Ac=p.from([69,0,0,0,9,0,0,0,0,0]),_c=r=>{if(!r||!r.portal&&!r.rows)return Ac;let e=r.portal||\"\",t=r.rows||0,n=p.byteLength(e),i=4+n+1+4,s=p.allocUnsafe(1+i);return s[0]=69,s.writeInt32BE(i,1),s.write(e,5,\"utf-8\"),s[n+5]=0,s.writeUInt32BE(t,s.length-4),s},Cc=(r,e)=>{let t=p.allocUnsafe(16);return t.writeInt32BE(16,0),t.writeInt16BE(1234,4),t.writeInt16BE(5678,6),t.writeInt32BE(r,8),t.writeInt32BE(e,12),t},sn=(r,e)=>{let n=4+p.byteLength(e)+1,i=p.allocUnsafe(1+n);return i[0]=r,i.writeInt32BE(n,1),i.write(e,5,\"utf-8\"),i[n]=0,i},Uc=O.addCString(\"P\").flush(68),Ic=O.addCString(\"S\").flush(68),Lc=r=>r.name?sn(68,`${r.type}${r.name||\"\"}`):r.type===\"P\"?Uc:Ic,Tc=r=>{let e=`${r.type}${r.name||\"\"}`;return sn(67,e)},Bc=r=>O.add(r).flush(100),Pc=r=>sn(102,r),Ft=r=>p.from([r,0,0,0,4]),Rc=Ft(72),Mc=Ft(83),kc=Ft(88),Fc=Ft(99),Nc={startup:yc,password:mc,requestSsl:wc,sendSASLInitialResponseMessage:gc,sendSCRAMClientFinalMessage:Sc,query:xc,parse:vc,bind:bc,execute:_c,describe:Lc,close:Tc,flush:()=>Rc,sync:()=>Mc,end:()=>kc,copyData:Bc,copyDone:()=>Fc,copyFail:Pc,cancel:Cc};Nt.serialize=Nc});var Is=C(Dt=>{\"use strict\";d();Object.defineProperty(Dt,\"__esModule\",{value:!0});Dt.BufferReader=void 0;var Dc=p.allocUnsafe(0),on=class{constructor(e=0){this.offset=e,this.buffer=Dc,this.encoding=\"utf-8\"}setBuffer(e,t){this.offset=e,this.buffer=t}int16(){let e=this.buffer.readInt16BE(this.offset);return this.offset+=2,e}byte(){let e=this.buffer[this.offset];return this.offset++,e}int32(){let e=this.buffer.readInt32BE(this.offset);return this.offset+=4,e}string(e){let t=this.buffer.toString(this.encoding,this.offset,this.offset+e);return this.offset+=e,t}cstring(){let e=this.offset,t=e;for(;this.buffer[t++]!==0;);return this.offset=t,this.buffer.toString(this.encoding,e,t-1)}bytes(e){let t=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}};Dt.BufferReader=on});var Ls={};le(Ls,{default:()=>Oc});var Oc,Ts=te(()=>{d();Oc={}});var Rs=C(je=>{\"use strict\";d();var qc=je&&je.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(je,\"__esModule\",{value:!0});je.Parser=void 0;var H=tn(),Qc=Is(),Hc=qc((Ts(),j(Ls))),an=1,jc=4,Bs=an+jc,Ps=p.allocUnsafe(0),un=class{constructor(e){if(this.buffer=Ps,this.bufferLength=0,this.bufferOffset=0,this.reader=new Qc.BufferReader,e?.mode===\"binary\")throw new Error(\"Binary mode not supported yet\");this.mode=e?.mode||\"text\"}parse(e,t){this.mergeBuffer(e);let n=this.bufferOffset+this.bufferLength,i=this.bufferOffset;for(;i+Bs<=n;){let s=this.buffer[i],o=this.buffer.readUInt32BE(i+an),a=an+o;if(a+i<=n){let u=this.handlePacket(i+Bs,s,o,this.buffer);t(u),i+=a}else break}i===n?(this.buffer=Ps,this.bufferLength=0,this.bufferOffset=0):(this.bufferLength=n-i,this.bufferOffset=i)}mergeBuffer(e){if(this.bufferLength>0){let t=this.bufferLength+e.byteLength;if(t+this.bufferOffset>this.buffer.byteLength){let i;if(t<=this.buffer.byteLength&&this.bufferOffset>=this.bufferLength)i=this.buffer;else{let s=this.buffer.byteLength*2;for(;t>=s;)s*=2;i=p.allocUnsafe(s)}this.buffer.copy(i,0,this.bufferOffset,this.bufferOffset+this.bufferLength),this.buffer=i,this.bufferOffset=0}e.copy(this.buffer,this.bufferOffset+this.bufferLength),this.bufferLength=t}else this.buffer=e,this.bufferOffset=0,this.bufferLength=e.byteLength}handlePacket(e,t,n,i){switch(t){case 50:return H.bindComplete;case 49:return H.parseComplete;case 51:return H.closeComplete;case 110:return H.noData;case 115:return H.portalSuspended;case 99:return H.copyDone;case 87:return H.replicationStart;case 73:return H.emptyQuery;case 68:return this.parseDataRowMessage(e,n,i);case 67:return this.parseCommandCompleteMessage(e,n,i);case 90:return this.parseReadyForQueryMessage(e,n,i);case 65:return this.parseNotificationMessage(e,n,i);case 82:return this.parseAuthenticationResponse(e,n,i);case 83:return this.parseParameterStatusMessage(e,n,i);case 75:return this.parseBackendKeyData(e,n,i);case 69:return this.parseErrorMessage(e,n,i,\"error\");case 78:return this.parseErrorMessage(e,n,i,\"notice\");case 84:return this.parseRowDescriptionMessage(e,n,i);case 116:return this.parseParameterDescriptionMessage(e,n,i);case 71:return this.parseCopyInMessage(e,n,i);case 72:return this.parseCopyOutMessage(e,n,i);case 100:return this.parseCopyData(e,n,i);default:Hc.default.fail(`unknown message code: ${t.toString(16)}`)}}parseReadyForQueryMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.string(1);return new H.ReadyForQueryMessage(t,i)}parseCommandCompleteMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.cstring();return new H.CommandCompleteMessage(t,i)}parseCopyData(e,t,n){let i=n.slice(e,e+(t-4));return new H.CopyDataMessage(t,i)}parseCopyInMessage(e,t,n){return this.parseCopyMessage(e,t,n,\"copyInResponse\")}parseCopyOutMessage(e,t,n){return this.parseCopyMessage(e,t,n,\"copyOutResponse\")}parseCopyMessage(e,t,n,i){this.reader.setBuffer(e,n);let s=this.reader.byte()!==0,o=this.reader.int16(),a=new H.CopyResponse(t,i,s,o);for(let u=0;u<o;u++)a.columnTypes[u]=this.reader.int16();return a}parseNotificationMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.int32(),s=this.reader.cstring(),o=this.reader.cstring();return new H.NotificationResponseMessage(t,i,s,o)}parseRowDescriptionMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.int16(),s=new H.RowDescriptionMessage(t,i);for(let o=0;o<i;o++)s.fields[o]=this.parseField();return s}parseField(){let e=this.reader.cstring(),t=this.reader.int32(),n=this.reader.int16(),i=this.reader.int32(),s=this.reader.int16(),o=this.reader.int32(),a=this.reader.int16()===0?\"text\":\"binary\";return new H.Field(e,t,n,i,s,o,a)}parseParameterDescriptionMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.int16(),s=new H.ParameterDescriptionMessage(t,i);for(let o=0;o<i;o++)s.dataTypeIDs[o]=this.reader.int32();return s}parseDataRowMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.int16(),s=new Array(i);for(let o=0;o<i;o++){let a=this.reader.int32();s[o]=a===-1?null:this.reader.string(a)}return new H.DataRowMessage(t,s)}parseParameterStatusMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.cstring(),s=this.reader.cstring();return new H.ParameterStatusMessage(t,i,s)}parseBackendKeyData(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.int32(),s=this.reader.int32();return new H.BackendKeyDataMessage(t,i,s)}parseAuthenticationResponse(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.int32(),s={name:\"authenticationOk\",length:t};switch(i){case 0:break;case 3:s.length===8&&(s.name=\"authenticationCleartextPassword\");break;case 5:if(s.length===12){s.name=\"authenticationMD5Password\";let a=this.reader.bytes(4);return new H.AuthenticationMD5Password(t,a)}break;case 10:s.name=\"authenticationSASL\",s.mechanisms=[];let o;do o=this.reader.cstring(),o&&s.mechanisms.push(o);while(o);break;case 11:s.name=\"authenticationSASLContinue\",s.data=this.reader.string(t-8);break;case 12:s.name=\"authenticationSASLFinal\",s.data=this.reader.string(t-8);break;default:throw new Error(\"Unknown authenticationOk message type \"+i)}return s}parseErrorMessage(e,t,n,i){this.reader.setBuffer(e,n);let s={},o=this.reader.string(1);for(;o!==\"\\0\";)s[o]=this.reader.cstring(),o=this.reader.string(1);let a=s.M,u=i===\"notice\"?new H.NoticeMessage(t,a):new H.DatabaseError(a,t,i);return u.severity=s.S,u.code=s.C,u.detail=s.D,u.hint=s.H,u.position=s.P,u.internalPosition=s.p,u.internalQuery=s.q,u.where=s.W,u.schema=s.s,u.table=s.t,u.column=s.c,u.dataType=s.d,u.constraint=s.n,u.file=s.F,u.line=s.L,u.routine=s.R,u}};je.Parser=un});var cn=C(Ce=>{\"use strict\";d();Object.defineProperty(Ce,\"__esModule\",{value:!0});Ce.DatabaseError=Ce.serialize=Ce.parse=void 0;var Kc=tn();Object.defineProperty(Ce,\"DatabaseError\",{enumerable:!0,get:function(){return Kc.DatabaseError}});var $c=Us();Object.defineProperty(Ce,\"serialize\",{enumerable:!0,get:function(){return $c.serialize}});var Wc=Rs();function Gc(r,e){let t=new Wc.Parser;return r.on(\"data\",n=>t.parse(n,e)),new Promise(n=>r.on(\"end\",()=>n()))}Ce.parse=Gc});var Ms={};le(Ms,{connect:()=>Vc});function Vc(r){let{socket:e,servername:t}=r;return e.startTls(t),e}var ks=te(()=>{d()});var ln=C((df,Ns)=>{\"use strict\";d();var Fs=(Mt(),j(As)),zc=be().EventEmitter,{parse:Yc,serialize:V}=cn(),Jc=V.flush(),Zc=V.sync(),Xc=V.end(),hn=class extends zc{constructor(e){super(),e=e||{},this.stream=e.stream||new Fs.Socket,typeof this.stream==\"function\"&&(this.stream=this.stream(e)),this._keepAlive=e.keepAlive,this._keepAliveInitialDelayMillis=e.keepAliveInitialDelayMillis,this.lastBuffer=!1,this.parsedStatements={},this.ssl=e.ssl||!1,this._ending=!1,this._emitMessage=!1;var t=this;this.on(\"newListener\",function(n){n===\"message\"&&(t._emitMessage=!0)})}connect(e,t){var n=this;this._connecting=!0,this.stream.setNoDelay(!0),this.stream.connect(e,t),this.stream.once(\"connect\",function(){n._keepAlive&&n.stream.setKeepAlive(!0,n._keepAliveInitialDelayMillis),n.emit(\"connect\")});let i=function(s){n._ending&&(s.code===\"ECONNRESET\"||s.code===\"EPIPE\")||n.emit(\"error\",s)};if(this.stream.on(\"error\",i),this.stream.on(\"close\",function(){n.emit(\"end\")}),!this.ssl)return this.attachListeners(this.stream);this.stream.once(\"data\",function(s){var o=s.toString(\"utf8\");switch(o){case\"S\":break;case\"N\":return n.stream.end(),n.emit(\"error\",new Error(\"The server does not support SSL connections\"));default:return n.stream.end(),n.emit(\"error\",new Error(\"There was an error establishing an SSL connection\"))}var a=(ks(),j(Ms));let u={socket:n.stream};n.ssl!==!0&&(Object.assign(u,n.ssl),\"key\"in n.ssl&&(u.key=n.ssl.key)),Fs.isIP(t)===0&&(u.servername=t);try{n.stream=a.connect(u)}catch(c){return n.emit(\"error\",c)}n.attachListeners(n.stream),n.stream.on(\"error\",i),n.emit(\"sslconnect\")})}attachListeners(e){e.on(\"end\",()=>{this.emit(\"end\")}),Yc(e,t=>{var n=t.name===\"error\"?\"errorMessage\":t.name;this._emitMessage&&this.emit(\"message\",t),this.emit(n,t)})}requestSsl(){this.stream.write(V.requestSsl())}startup(e){this.stream.write(V.startup(e))}cancel(e,t){this._send(V.cancel(e,t))}password(e){this._send(V.password(e))}sendSASLInitialResponseMessage(e,t){this._send(V.sendSASLInitialResponseMessage(e,t))}sendSCRAMClientFinalMessage(e){this._send(V.sendSCRAMClientFinalMessage(e))}_send(e){return this.stream.writable?this.stream.write(e):!1}query(e){this._send(V.query(e))}parse(e){this._send(V.parse(e))}bind(e){this._send(V.bind(e))}execute(e){this._send(V.execute(e))}flush(){this.stream.writable&&this.stream.write(Jc)}sync(){this._ending=!0,this._send(Zc)}ref(){this.stream.ref()}unref(){this.stream.unref()}end(){if(this._ending=!0,!this._connecting||!this.stream.writable){this.stream.end();return}return this.stream.write(Xc,()=>{this.stream.end()})}close(e){this._send(V.close(e))}describe(e){this._send(V.describe(e))}sendCopyFromChunk(e){this._send(V.copyData(e))}endCopyFrom(){this._send(V.copyDone())}sendCopyFail(e){this._send(V.copyFail(e))}};Ns.exports=hn});var qs=C((yf,Os)=>{\"use strict\";d();var eh=be().EventEmitter,th=xt(),fn=Fi(),rh=Gi(),nh=_r(),ih=Tr(),Ds=cs(),sh=rt(),oh=ln(),Ot=class extends eh{constructor(e){super(),this.connectionParameters=new ih(e),this.user=this.connectionParameters.user,this.database=this.connectionParameters.database,this.port=this.connectionParameters.port,this.host=this.connectionParameters.host,Object.defineProperty(this,\"password\",{configurable:!0,enumerable:!1,writable:!0,value:this.connectionParameters.password}),this.replication=this.connectionParameters.replication;var t=e||{};this._Promise=t.Promise||v.Promise,this._types=new nh(t.types),this._ending=!1,this._connecting=!1,this._connected=!1,this._connectionError=!1,this._queryable=!0,this.connection=t.connection||new oh({stream:t.stream,ssl:this.connectionParameters.ssl,keepAlive:t.keepAlive||!1,keepAliveInitialDelayMillis:t.keepAliveInitialDelayMillis||0,encoding:this.connectionParameters.client_encoding||\"utf8\"}),this.queryQueue=[],this.binary=t.binary||sh.binary,this.processID=null,this.secretKey=null,this.ssl=this.connectionParameters.ssl||!1,this.ssl&&this.ssl.key&&Object.defineProperty(this.ssl,\"key\",{enumerable:!1}),this._connectionTimeoutMillis=t.connectionTimeoutMillis||0}_errorAllQueries(e){let t=n=>{y.nextTick(()=>{n.handleError(e,this.connection)})};this.activeQuery&&(t(this.activeQuery),this.activeQuery=null),this.queryQueue.forEach(t),this.queryQueue.length=0}_connect(e){var t=this,n=this.connection;if(this._connectionCallback=e,this._connecting||this._connected){let i=new Error(\"Client has already been connected. You cannot reuse a client.\");y.nextTick(()=>{e(i)});return}this._connecting=!0,this.connectionTimeoutHandle,this._connectionTimeoutMillis>0&&(this.connectionTimeoutHandle=setTimeout(()=>{n._ending=!0,n.stream.destroy(new Error(\"timeout expired\"))},this._connectionTimeoutMillis)),this.host&&this.host.indexOf(\"/\")===0?n.connect(this.host+\"/.s.PGSQL.\"+this.port):n.connect(this.port,this.host),n.on(\"connect\",function(){t.ssl?n.requestSsl():n.startup(t.getStartupConf())}),n.on(\"sslconnect\",function(){n.startup(t.getStartupConf())}),this._attachListeners(n),n.once(\"end\",()=>{let i=this._ending?new Error(\"Connection terminated\"):new Error(\"Connection terminated unexpectedly\");clearTimeout(this.connectionTimeoutHandle),this._errorAllQueries(i),this._ending||(this._connecting&&!this._connectionError?this._connectionCallback?this._connectionCallback(i):this._handleErrorEvent(i):this._connectionError||this._handleErrorEvent(i)),y.nextTick(()=>{this.emit(\"end\")})})}connect(e){if(e){this._connect(e);return}return new this._Promise((t,n)=>{this._connect(i=>{i?n(i):t()})})}_attachListeners(e){e.on(\"authenticationCleartextPassword\",this._handleAuthCleartextPassword.bind(this)),e.on(\"authenticationMD5Password\",this._handleAuthMD5Password.bind(this)),e.on(\"authenticationSASL\",this._handleAuthSASL.bind(this)),e.on(\"authenticationSASLContinue\",this._handleAuthSASLContinue.bind(this)),e.on(\"authenticationSASLFinal\",this._handleAuthSASLFinal.bind(this)),e.on(\"backendKeyData\",this._handleBackendKeyData.bind(this)),e.on(\"error\",this._handleErrorEvent.bind(this)),e.on(\"errorMessage\",this._handleErrorMessage.bind(this)),e.on(\"readyForQuery\",this._handleReadyForQuery.bind(this)),e.on(\"notice\",this._handleNotice.bind(this)),e.on(\"rowDescription\",this._handleRowDescription.bind(this)),e.on(\"dataRow\",this._handleDataRow.bind(this)),e.on(\"portalSuspended\",this._handlePortalSuspended.bind(this)),e.on(\"emptyQuery\",this._handleEmptyQuery.bind(this)),e.on(\"commandComplete\",this._handleCommandComplete.bind(this)),e.on(\"parseComplete\",this._handleParseComplete.bind(this)),e.on(\"copyInResponse\",this._handleCopyInResponse.bind(this)),e.on(\"copyData\",this._handleCopyData.bind(this)),e.on(\"notification\",this._handleNotification.bind(this))}_checkPgPass(e){let t=this.connection;typeof this.password==\"function\"?this._Promise.resolve().then(()=>this.password()).then(n=>{if(n!==void 0){if(typeof n!=\"string\"){t.emit(\"error\",new TypeError(\"Password must be a string\"));return}this.connectionParameters.password=this.password=n}else this.connectionParameters.password=this.password=null;e()}).catch(n=>{t.emit(\"error\",n)}):this.password!==null?e():rh(this.connectionParameters,n=>{n!==void 0&&(this.connectionParameters.password=this.password=n),e()})}_handleAuthCleartextPassword(e){this._checkPgPass(()=>{this.connection.password(this.password)})}_handleAuthMD5Password(e){this._checkPgPass(()=>{let t=th.postgresMd5PasswordHash(this.user,this.password,e.salt);this.connection.password(t)})}_handleAuthSASL(e){this._checkPgPass(()=>{try{this.saslSession=fn.startSession(e.mechanisms),this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism,this.saslSession.response)}catch(t){this.connection.emit(\"error\",t)}})}_handleAuthSASLContinue(e){try{fn.continueSession(this.saslSession,this.password,e.data),this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)}catch(t){this.connection.emit(\"error\",t)}}_handleAuthSASLFinal(e){try{fn.finalizeSession(this.saslSession,e.data),this.saslSession=null}catch(t){this.connection.emit(\"error\",t)}}_handleBackendKeyData(e){this.processID=e.processID,this.secretKey=e.secretKey}_handleReadyForQuery(e){this._connecting&&(this._connecting=!1,this._connected=!0,clearTimeout(this.connectionTimeoutHandle),this._connectionCallback&&(this._connectionCallback(null,this),this._connectionCallback=null),this.emit(\"connect\"));let{activeQuery:t}=this;this.activeQuery=null,this.readyForQuery=!0,t&&t.handleReadyForQuery(this.connection),this._pulseQueryQueue()}_handleErrorWhileConnecting(e){if(!this._connectionError){if(this._connectionError=!0,clearTimeout(this.connectionTimeoutHandle),this._connectionCallback)return this._connectionCallback(e);this.emit(\"error\",e)}}_handleErrorEvent(e){if(this._connecting)return this._handleErrorWhileConnecting(e);this._queryable=!1,this._errorAllQueries(e),this.emit(\"error\",e)}_handleErrorMessage(e){if(this._connecting)return this._handleErrorWhileConnecting(e);let t=this.activeQuery;if(!t){this._handleErrorEvent(e);return}this.activeQuery=null,t.handleError(e,this.connection)}_handleRowDescription(e){this.activeQuery.handleRowDescription(e)}_handleDataRow(e){this.activeQuery.handleDataRow(e)}_handlePortalSuspended(e){this.activeQuery.handlePortalSuspended(this.connection)}_handleEmptyQuery(e){this.activeQuery.handleEmptyQuery(this.connection)}_handleCommandComplete(e){this.activeQuery.handleCommandComplete(e,this.connection)}_handleParseComplete(e){this.activeQuery.name&&(this.connection.parsedStatements[this.activeQuery.name]=this.activeQuery.text)}_handleCopyInResponse(e){this.activeQuery.handleCopyInResponse(this.connection)}_handleCopyData(e){this.activeQuery.handleCopyData(e,this.connection)}_handleNotification(e){this.emit(\"notification\",e)}_handleNotice(e){this.emit(\"notice\",e)}getStartupConf(){var e=this.connectionParameters,t={user:e.user,database:e.database},n=e.application_name||e.fallback_application_name;return n&&(t.application_name=n),e.replication&&(t.replication=\"\"+e.replication),e.statement_timeout&&(t.statement_timeout=String(parseInt(e.statement_timeout,10))),e.lock_timeout&&(t.lock_timeout=String(parseInt(e.lock_timeout,10))),e.idle_in_transaction_session_timeout&&(t.idle_in_transaction_session_timeout=String(parseInt(e.idle_in_transaction_session_timeout,10))),e.options&&(t.options=e.options),t}cancel(e,t){if(e.activeQuery===t){var n=this.connection;this.host&&this.host.indexOf(\"/\")===0?n.connect(this.host+\"/.s.PGSQL.\"+this.port):n.connect(this.port,this.host),n.on(\"connect\",function(){n.cancel(e.processID,e.secretKey)})}else e.queryQueue.indexOf(t)!==-1&&e.queryQueue.splice(e.queryQueue.indexOf(t),1)}setTypeParser(e,t,n){return this._types.setTypeParser(e,t,n)}getTypeParser(e,t){return this._types.getTypeParser(e,t)}escapeIdentifier(e){return'\"'+e.replace(/\"/g,'\"\"')+'\"'}escapeLiteral(e){for(var t=!1,n=\"'\",i=0;i<e.length;i++){var s=e[i];s===\"'\"?n+=s+s:s===\"\\\\\"?(n+=s+s,t=!0):n+=s}return n+=\"'\",t===!0&&(n=\" E\"+n),n}_pulseQueryQueue(){if(this.readyForQuery===!0)if(this.activeQuery=this.queryQueue.shift(),this.activeQuery){this.readyForQuery=!1,this.hasExecuted=!0;let e=this.activeQuery.submit(this.connection);e&&y.nextTick(()=>{this.activeQuery.handleError(e,this.connection),this.readyForQuery=!0,this._pulseQueryQueue()})}else this.hasExecuted&&(this.activeQuery=null,this.emit(\"drain\"))}query(e,t,n){var i,s,o,a,u;if(e==null)throw new TypeError(\"Client was passed a null or undefined query\");return typeof e.submit==\"function\"?(o=e.query_timeout||this.connectionParameters.query_timeout,s=i=e,typeof t==\"function\"&&(i.callback=i.callback||t)):(o=this.connectionParameters.query_timeout,i=new Ds(e,t,n),i.callback||(s=new this._Promise((c,h)=>{i.callback=(f,w)=>f?h(f):c(w)}))),o&&(u=i.callback,a=setTimeout(()=>{var c=new Error(\"Query read timeout\");y.nextTick(()=>{i.handleError(c,this.connection)}),u(c),i.callback=()=>{};var h=this.queryQueue.indexOf(i);h>-1&&this.queryQueue.splice(h,1),this._pulseQueryQueue()},o),i.callback=(c,h)=>{clearTimeout(a),u(c,h)}),this.binary&&!i.binary&&(i.binary=!0),i._result&&!i._result._types&&(i._result._types=this._types),this._queryable?this._ending?(y.nextTick(()=>{i.handleError(new Error(\"Client was closed and is not queryable\"),this.connection)}),s):(this.queryQueue.push(i),this._pulseQueryQueue(),s):(y.nextTick(()=>{i.handleError(new Error(\"Client has encountered a connection error and is not queryable\"),this.connection)}),s)}ref(){this.connection.ref()}unref(){this.connection.unref()}end(e){if(this._ending=!0,!this.connection._connecting)if(e)e();else return this._Promise.resolve();if(this.activeQuery||!this._queryable?this.connection.stream.destroy():this.connection.end(),e)this.connection.once(\"end\",e);else return new this._Promise(t=>{this.connection.once(\"end\",t)})}};Ot.Query=Ds;Os.exports=Ot});var Ks=C((mf,js)=>{\"use strict\";d();var ah=be().EventEmitter,Qs=function(){},Hs=(r,e)=>{let t=r.findIndex(e);return t===-1?void 0:r.splice(t,1)[0]},dn=class{constructor(e,t,n){this.client=e,this.idleListener=t,this.timeoutId=n}},Ke=class{constructor(e){this.callback=e}};function uh(){throw new Error(\"Release called on client which has already been released to the pool.\")}function qt(r,e){if(e)return{callback:e,result:void 0};let t,n,i=function(o,a){o?t(o):n(a)},s=new r(function(o,a){n=o,t=a});return{callback:i,result:s}}function ch(r,e){return function t(n){n.client=e,e.removeListener(\"error\",t),e.on(\"error\",()=>{r.log(\"additional client error after disconnection due to error\",n)}),r._remove(e),r.emit(\"error\",n,e)}}var pn=class extends ah{constructor(e,t){super(),this.options=Object.assign({},e),e!=null&&\"password\"in e&&Object.defineProperty(this.options,\"password\",{configurable:!0,enumerable:!1,writable:!0,value:e.password}),e!=null&&e.ssl&&e.ssl.key&&Object.defineProperty(this.options.ssl,\"key\",{enumerable:!1}),this.options.max=this.options.max||this.options.poolSize||10,this.options.maxUses=this.options.maxUses||1/0,this.options.allowExitOnIdle=this.options.allowExitOnIdle||!1,this.options.maxLifetimeSeconds=this.options.maxLifetimeSeconds||0,this.log=this.options.log||function(){},this.Client=this.options.Client||t||Qt().Client,this.Promise=this.options.Promise||v.Promise,typeof this.options.idleTimeoutMillis>\"u\"&&(this.options.idleTimeoutMillis=1e4),this._clients=[],this._idle=[],this._expired=new WeakSet,this._pendingQueue=[],this._endCallback=void 0,this.ending=!1,this.ended=!1}_isFull(){return this._clients.length>=this.options.max}_pulseQueue(){if(this.log(\"pulse queue\"),this.ended){this.log(\"pulse queue ended\");return}if(this.ending){this.log(\"pulse queue on ending\"),this._idle.length&&this._idle.slice().map(t=>{this._remove(t.client)}),this._clients.length||(this.ended=!0,this._endCallback());return}if(!this._pendingQueue.length){this.log(\"no queued requests\");return}if(!this._idle.length&&this._isFull())return;let e=this._pendingQueue.shift();if(this._idle.length){let t=this._idle.pop();clearTimeout(t.timeoutId);let n=t.client;n.ref&&n.ref();let i=t.idleListener;return this._acquireClient(n,e,i,!1)}if(!this._isFull())return this.newClient(e);throw new Error(\"unexpected condition\")}_remove(e){let t=Hs(this._idle,n=>n.client===e);t!==void 0&&clearTimeout(t.timeoutId),this._clients=this._clients.filter(n=>n!==e),e.end(),this.emit(\"remove\",e)}connect(e){if(this.ending){let i=new Error(\"Cannot use a pool after calling end on the pool\");return e?e(i):this.Promise.reject(i)}let t=qt(this.Promise,e),n=t.result;if(this._isFull()||this._idle.length){if(this._idle.length&&y.nextTick(()=>this._pulseQueue()),!this.options.connectionTimeoutMillis)return this._pendingQueue.push(new Ke(t.callback)),n;let i=(a,u,c)=>{clearTimeout(o),t.callback(a,u,c)},s=new Ke(i),o=setTimeout(()=>{Hs(this._pendingQueue,a=>a.callback===i),s.timedOut=!0,t.callback(new Error(\"timeout exceeded when trying to connect\"))},this.options.connectionTimeoutMillis);return this._pendingQueue.push(s),n}return this.newClient(new Ke(t.callback)),n}newClient(e){let t=new this.Client(this.options);this._clients.push(t);let n=ch(this,t);this.log(\"checking client timeout\");let i,s=!1;this.options.connectionTimeoutMillis&&(i=setTimeout(()=>{this.log(\"ending client due to timeout\"),s=!0,t.connection?t.connection.stream.destroy():t.end()},this.options.connectionTimeoutMillis)),this.log(\"connecting new client\"),t.connect(o=>{if(i&&clearTimeout(i),t.on(\"error\",n),o)this.log(\"client failed to connect\",o),this._clients=this._clients.filter(a=>a!==t),s&&(o.message=\"Connection terminated due to connection timeout\"),this._pulseQueue(),e.timedOut||e.callback(o,void 0,Qs);else{if(this.log(\"new client connected\"),this.options.maxLifetimeSeconds!==0){let a=setTimeout(()=>{this.log(\"ending client due to expired lifetime\"),this._expired.add(t),this._idle.findIndex(c=>c.client===t)!==-1&&this._acquireClient(t,new Ke((c,h,f)=>f()),n,!1)},this.options.maxLifetimeSeconds*1e3);a.unref(),t.once(\"end\",()=>clearTimeout(a))}return this._acquireClient(t,e,n,!0)}})}_acquireClient(e,t,n,i){i&&this.emit(\"connect\",e),this.emit(\"acquire\",e),e.release=this._releaseOnce(e,n),e.removeListener(\"error\",n),t.timedOut?i&&this.options.verify?this.options.verify(e,e.release):e.release():i&&this.options.verify?this.options.verify(e,s=>{if(s)return e.release(s),t.callback(s,void 0,Qs);t.callback(void 0,e,e.release)}):t.callback(void 0,e,e.release)}_releaseOnce(e,t){let n=!1;return i=>{n&&uh(),n=!0,this._release(e,t,i)}}_release(e,t,n){if(e.on(\"error\",t),e._poolUseCount=(e._poolUseCount||0)+1,n||this.ending||!e._queryable||e._ending||e._poolUseCount>=this.options.maxUses){e._poolUseCount>=this.options.maxUses&&this.log(\"remove expended client\"),this._remove(e),this._pulseQueue();return}if(this._expired.has(e)){this.log(\"remove expired client\"),this._expired.delete(e),this._remove(e),this._pulseQueue();return}let s;this.options.idleTimeoutMillis&&(s=setTimeout(()=>{this.log(\"remove idle client\"),this._remove(e)},this.options.idleTimeoutMillis),this.options.allowExitOnIdle&&s.unref()),this.options.allowExitOnIdle&&e.unref(),this._idle.push(new dn(e,t,s)),this._pulseQueue()}query(e,t,n){if(typeof e==\"function\"){let s=qt(this.Promise,e);return E(function(){return s.callback(new Error(\"Passing a function as the first parameter to pool.query is not supported\"))}),s.result}typeof t==\"function\"&&(n=t,t=void 0);let i=qt(this.Promise,n);return n=i.callback,this.connect((s,o)=>{if(s)return n(s);let a=!1,u=c=>{a||(a=!0,o.release(c),n(c))};o.once(\"error\",u),this.log(\"dispatching query\");try{o.query(e,t,(c,h)=>{if(this.log(\"query dispatched\"),o.removeListener(\"error\",u),!a)return a=!0,o.release(c),c?n(c):n(void 0,h)})}catch(c){return o.release(c),n(c)}}),i.result}end(e){if(this.log(\"ending\"),this.ending){let n=new Error(\"Called end on pool more than once\");return e?e(n):this.Promise.reject(n)}this.ending=!0;let t=qt(this.Promise,e);return this._endCallback=t.callback,this._pulseQueue(),t.result}get waitingCount(){return this._pendingQueue.length}get idleCount(){return this._idle.length}get expiredCount(){return this._clients.reduce((e,t)=>e+(this._expired.has(t)?1:0),0)}get totalCount(){return this._clients.length}};js.exports=pn});var $s={};le($s,{default:()=>hh});var hh,Ws=te(()=>{d();hh={}});var zs=C((xf,Vs)=>{\"use strict\";d();var Gs=be().EventEmitter,lh=(_t(),j(At)),yn=xt(),$e=Vs.exports=function(r,e,t){Gs.call(this),r=yn.normalizeQueryConfig(r,e,t),this.text=r.text,this.values=r.values,this.name=r.name,this.callback=r.callback,this.state=\"new\",this._arrayMode=r.rowMode===\"array\",this._emitRowEvents=!1,this.on(\"newListener\",function(n){n===\"row\"&&(this._emitRowEvents=!0)}.bind(this))};lh.inherits($e,Gs);var fh={sqlState:\"code\",statementPosition:\"position\",messagePrimary:\"message\",context:\"where\",schemaName:\"schema\",tableName:\"table\",columnName:\"column\",dataTypeName:\"dataType\",constraintName:\"constraint\",sourceFile:\"file\",sourceLine:\"line\",sourceFunction:\"routine\"};$e.prototype.handleError=function(r){var e=this.native.pq.resultErrorFields();if(e)for(var t in e){var n=fh[t]||t;r[n]=e[t]}this.callback?this.callback(r):this.emit(\"error\",r),this.state=\"error\"};$e.prototype.then=function(r,e){return this._getPromise().then(r,e)};$e.prototype.catch=function(r){return this._getPromise().catch(r)};$e.prototype._getPromise=function(){return this._promise?this._promise:(this._promise=new Promise(function(r,e){this._once(\"end\",r),this._once(\"error\",e)}.bind(this)),this._promise)};$e.prototype.submit=function(r){this.state=\"running\";var e=this;this.native=r.native,r.native.arrayMode=this._arrayMode;var t=function(s,o,a){if(r.native.arrayMode=!1,E(function(){e.emit(\"_done\")}),s)return e.handleError(s);e._emitRowEvents&&(a.length>1?o.forEach((u,c)=>{u.forEach(h=>{e.emit(\"row\",h,a[c])})}):o.forEach(function(u){e.emit(\"row\",u,a)})),e.state=\"end\",e.emit(\"end\",a),e.callback&&e.callback(null,a)};if(y.domain&&(t=y.domain.bind(t)),this.name){this.name.length>63&&(console.error(\"Warning! Postgres only supports 63 characters for query names.\"),console.error(\"You supplied %s (%s)\",this.name,this.name.length),console.error(\"This can cause conflicts and silent errors executing queries\"));var n=(this.values||[]).map(yn.prepareValue);if(r.namedQueries[this.name]){if(this.text&&r.namedQueries[this.name]!==this.text){let s=new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`);return t(s)}return r.native.execute(this.name,n,t)}return r.native.prepare(this.name,this.text,n.length,function(s){return s?t(s):(r.namedQueries[e.name]=e.text,e.native.execute(e.name,n,t))})}else if(this.values){if(!Array.isArray(this.values)){let s=new Error(\"Query values must be an array\");return t(s)}var i=this.values.map(yn.prepareValue);r.native.query(this.text,i,t)}else r.native.query(this.text,t)}});var Xs=C((Ef,Zs)=>{\"use strict\";d();var dh=(Ws(),j($s)),ph=_r(),Ys=be().EventEmitter,yh=(_t(),j(At)),wh=Tr(),Js=zs(),ce=Zs.exports=function(r){Ys.call(this),r=r||{},this._Promise=r.Promise||v.Promise,this._types=new ph(r.types),this.native=new dh({types:this._types}),this._queryQueue=[],this._ending=!1,this._connecting=!1,this._connected=!1,this._queryable=!0;var e=this.connectionParameters=new wh(r);this.user=e.user,Object.defineProperty(this,\"password\",{configurable:!0,enumerable:!1,writable:!0,value:e.password}),this.database=e.database,this.host=e.host,this.port=e.port,this.namedQueries={}};ce.Query=Js;yh.inherits(ce,Ys);ce.prototype._errorAllQueries=function(r){let e=t=>{y.nextTick(()=>{t.native=this.native,t.handleError(r)})};this._hasActiveQuery()&&(e(this._activeQuery),this._activeQuery=null),this._queryQueue.forEach(e),this._queryQueue.length=0};ce.prototype._connect=function(r){var e=this;if(this._connecting){y.nextTick(()=>r(new Error(\"Client has already been connected. You cannot reuse a client.\")));return}this._connecting=!0,this.connectionParameters.getLibpqConnectionString(function(t,n){if(t)return r(t);e.native.connect(n,function(i){if(i)return e.native.end(),r(i);e._connected=!0,e.native.on(\"error\",function(s){e._queryable=!1,e._errorAllQueries(s),e.emit(\"error\",s)}),e.native.on(\"notification\",function(s){e.emit(\"notification\",{channel:s.relname,payload:s.extra})}),e.emit(\"connect\"),e._pulseQueryQueue(!0),r()})})};ce.prototype.connect=function(r){if(r){this._connect(r);return}return new this._Promise((e,t)=>{this._connect(n=>{n?t(n):e()})})};ce.prototype.query=function(r,e,t){var n,i,s,o,a;if(r==null)throw new TypeError(\"Client was passed a null or undefined query\");if(typeof r.submit==\"function\")s=r.query_timeout||this.connectionParameters.query_timeout,i=n=r,typeof e==\"function\"&&(r.callback=e);else if(s=this.connectionParameters.query_timeout,n=new Js(r,e,t),!n.callback){let u,c;i=new this._Promise((h,f)=>{u=h,c=f}),n.callback=(h,f)=>h?c(h):u(f)}return s&&(a=n.callback,o=setTimeout(()=>{var u=new Error(\"Query read timeout\");y.nextTick(()=>{n.handleError(u,this.connection)}),a(u),n.callback=()=>{};var c=this._queryQueue.indexOf(n);c>-1&&this._queryQueue.splice(c,1),this._pulseQueryQueue()},s),n.callback=(u,c)=>{clearTimeout(o),a(u,c)}),this._queryable?this._ending?(n.native=this.native,y.nextTick(()=>{n.handleError(new Error(\"Client was closed and is not queryable\"))}),i):(this._queryQueue.push(n),this._pulseQueryQueue(),i):(n.native=this.native,y.nextTick(()=>{n.handleError(new Error(\"Client has encountered a connection error and is not queryable\"))}),i)};ce.prototype.end=function(r){var e=this;this._ending=!0,this._connected||this.once(\"connect\",this.end.bind(this,r));var t;return r||(t=new this._Promise(function(n,i){r=s=>s?i(s):n()})),this.native.end(function(){e._errorAllQueries(new Error(\"Connection terminated\")),y.nextTick(()=>{e.emit(\"end\"),r&&r()})}),t};ce.prototype._hasActiveQuery=function(){return this._activeQuery&&this._activeQuery.state!==\"error\"&&this._activeQuery.state!==\"end\"};ce.prototype._pulseQueryQueue=function(r){if(!!this._connected&&!this._hasActiveQuery()){var e=this._queryQueue.shift();if(!e){r||this.emit(\"drain\");return}this._activeQuery=e,e.submit(this);var t=this;e.once(\"_done\",function(){t._pulseQueryQueue()})}};ce.prototype.cancel=function(r){this._activeQuery===r?this.native.cancel(function(){}):this._queryQueue.indexOf(r)!==-1&&this._queryQueue.splice(this._queryQueue.indexOf(r),1)};ce.prototype.ref=function(){};ce.prototype.unref=function(){};ce.prototype.setTypeParser=function(r,e,t){return this._types.setTypeParser(r,e,t)};ce.prototype.getTypeParser=function(r,e){return this._types.getTypeParser(r,e)}});var wn=C((Af,eo)=>{\"use strict\";d();eo.exports=Xs()});var Qt=C((Uf,at)=>{\"use strict\";d();var mh=qs(),gh=rt(),Sh=ln(),xh=Ks(),{DatabaseError:vh}=cn(),Eh=r=>class extends xh{constructor(t){super(t,r)}},mn=function(r){this.defaults=gh,this.Client=r,this.Query=this.Client.Query,this.Pool=Eh(this.Client),this._pools=[],this.Connection=Sh,this.types=tt(),this.DatabaseError=vh};typeof y.env.NODE_PG_FORCE_NATIVE<\"u\"?at.exports=new mn(wn()):(at.exports=new mn(mh),Object.defineProperty(at.exports,\"native\",{configurable:!0,enumerable:!1,get(){var r=null;try{r=new mn(wn())}catch(e){if(e.code!==\"MODULE_NOT_FOUND\")throw e}return Object.defineProperty(at.exports,\"native\",{value:r}),r}}))});var bh={};le(bh,{Client:()=>jt,ClientBase:()=>ye.ClientBase,Connection:()=>ye.Connection,DatabaseError:()=>ye.DatabaseError,Pool:()=>Sn,Query:()=>ye.Query,defaults:()=>ye.defaults,neonConfig:()=>J,types:()=>ye.types});module.exports=j(bh);d();var Kt=lt(Qt());Mt();d();Mt();var gn=lt(Ir());function Ht(r){let e=r??{};typeof e==\"string\"&&(e=(0,gn.parse)(e)),e.connectionString&&(e=Object.assign({},e,(0,gn.parse)(e.connectionString))),delete e.connectionString;let t=e.host??y.env.PGHOST??y.env.host;if(typeof t!=\"string\"||!/[.]neon[.](tech|build)(:|$)/.test(t))return r;e.ssl=!1;let n=e.password??y.env.PGPASSWORD??y.env.password;if(typeof n!=\"string\"||n===\"\")return console.warn(`No password was provided for Neon database host \"${t}\".`),e;if(!J.addNeonProjectToPassword)return e;let i=t.match(/^([^.]+)[.]/);if(i===null)return e;let s=i[1];return e.password=`project=${s};${n}`,e}var ye=lt(Qt());var jt=class extends Kt.Client{constructor(e){super(Ht(e))}get neonConfig(){return this.connection.stream}connect(e){let t=super.connect(e),n=this.neonConfig.pipelineTLS&&this.ssl,i=this.neonConfig.pipelineConnect===\"password\";if(!n&&!this.neonConfig.pipelineConnect)return t;let s=this.connection;if(n&&s.on(\"connect\",()=>s.stream.emit(\"data\",\"S\")),i){s.removeAllListeners(\"authenticationCleartextPassword\"),s.removeAllListeners(\"readyForQuery\"),s.once(\"readyForQuery\",()=>s.on(\"readyForQuery\",this._handleReadyForQuery.bind(this)));let o=this.ssl?\"sslconnect\":\"connect\";s.on(o,()=>{this._handleAuthCleartextPassword(),this._handleReadyForQuery()})}return t}async _handleAuthSASLContinue(e){let t=this.saslSession,n=this.password,i=e.data;if(t.message!==\"SASLInitialResponse\"||typeof n!=\"string\"||typeof i!=\"string\")throw new Error(\"SASL: protocol error\");let s=Object.fromEntries(i.split(\",\").map(B=>{if(!/^.=/.test(B))throw new Error(\"SASL: Invalid attribute pair entry\");let N=B[0],we=B.substring(2);return[N,we]})),o=s.r,a=s.s,u=s.i;if(!o||!/^[!-+--~]+$/.test(o))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing/unprintable\");if(!a||!/^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(a))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing/not base64\");if(!u||!/^[1-9][0-9]*$/.test(u))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: missing/invalid iteration count\");if(!o.startsWith(t.clientNonce))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce\");if(o.length===t.clientNonce.length)throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short\");let c=parseInt(u,10),h=p.from(a,\"base64\"),f=new TextEncoder,w=f.encode(n),S=await m.subtle.importKey(\"raw\",w,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),b=new Uint8Array(await m.subtle.sign(\"HMAC\",S,p.concat([h,p.from([0,0,0,1])]))),I=b;for(var T=0;T<c-1;T++)b=new Uint8Array(await m.subtle.sign(\"HMAC\",S,b)),I=p.from(I.map((B,N)=>I[N]^b[N]));let k=I,_=await m.subtle.importKey(\"raw\",k,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),x=new Uint8Array(await m.subtle.sign(\"HMAC\",_,f.encode(\"Client Key\"))),K=await m.subtle.digest(\"SHA-256\",x),z=\"n=*,r=\"+t.clientNonce,P=\"r=\"+o+\",s=\"+a+\",i=\"+c,Z=\"c=biws,r=\"+o,$=z+\",\"+P+\",\"+Z,he=await m.subtle.importKey(\"raw\",K,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]);var U=new Uint8Array(await m.subtle.sign(\"HMAC\",he,f.encode($))),R=p.from(x.map((B,N)=>x[N]^U[N])),F=R.toString(\"base64\");let q=await m.subtle.importKey(\"raw\",k,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),Q=await m.subtle.sign(\"HMAC\",q,f.encode(\"Server Key\")),X=await m.subtle.importKey(\"raw\",Q,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]);var ee=p.from(await m.subtle.sign(\"HMAC\",X,f.encode($)));t.message=\"SASLResponse\",t.serverSignature=ee.toString(\"base64\"),t.response=Z+\",p=\"+F,this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)}},Sn=class extends Kt.Pool{constructor(t){super(Ht(t));g(this,\"Client\",jt)}};\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/14/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/14/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/13","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/13/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/13/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/13/events","html_url":"https://github.com/neondatabase/serverless/issues/13","id":1650891779,"node_id":"I_kwDOIQekeM5iZpwD","number":13,"title":"Critical dependency: the request of a dependency is an expression","user":{"login":"lawrencecchen","id":54008264,"node_id":"MDQ6VXNlcjU0MDA4MjY0","avatar_url":"https://avatars.githubusercontent.com/u/54008264?v=4","gravatar_id":"","url":"https://api.github.com/users/lawrencecchen","html_url":"https://github.com/lawrencecchen","followers_url":"https://api.github.com/users/lawrencecchen/followers","following_url":"https://api.github.com/users/lawrencecchen/following{/other_user}","gists_url":"https://api.github.com/users/lawrencecchen/gists{/gist_id}","starred_url":"https://api.github.com/users/lawrencecchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lawrencecchen/subscriptions","organizations_url":"https://api.github.com/users/lawrencecchen/orgs","repos_url":"https://api.github.com/users/lawrencecchen/repos","events_url":"https://api.github.com/users/lawrencecchen/events{/privacy}","received_events_url":"https://api.github.com/users/lawrencecchen/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2023-04-02T10:23:28Z","updated_at":"2023-06-26T14:07:47Z","closed_at":"2023-06-26T14:07:47Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\nUsing Next.js app directory\r\n\r\n\"next\": \"^13.2.4\",\r\n\"@neondatabase/serverless\": \"^0.2.9\",\r\n\r\n`pnpm dev`\r\n\r\n## Environment\r\n\r\nMacOS\r\nNode v19.4.0\r\n\r\n## Logs, links\r\n```\r\nImport trace for requested module:\r\n../../node_modules/@neondatabase/serverless/index.js\r\n../../node_modules/@neondatabase/serverless/index.mjs\r\n./src/app/app/page.tsx\r\nwarn  - ../../node_modules/@neondatabase/serverless/index.js\r\nCritical dependency: the request of a dependency is an expression\r\n\r\nImport trace for requested module:\r\n../../node_modules/@neondatabase/serverless/index.js\r\n../../node_modules/@neondatabase/serverless/index.mjs\r\n./src/app/app/page.tsx\r\n\r\n../../node_modules/@neondatabase/serverless/index.js\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/13/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/13/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/12","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/12/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/12/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/12/events","html_url":"https://github.com/neondatabase/serverless/issues/12","id":1640740204,"node_id":"I_kwDOIQekeM5hy7Vs","number":12,"title":"Error in next@13.2.0 - p.allocUnsafe is not a function","user":{"login":"joshma","id":64739,"node_id":"MDQ6VXNlcjY0NzM5","avatar_url":"https://avatars.githubusercontent.com/u/64739?v=4","gravatar_id":"","url":"https://api.github.com/users/joshma","html_url":"https://github.com/joshma","followers_url":"https://api.github.com/users/joshma/followers","following_url":"https://api.github.com/users/joshma/following{/other_user}","gists_url":"https://api.github.com/users/joshma/gists{/gist_id}","starred_url":"https://api.github.com/users/joshma/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshma/subscriptions","organizations_url":"https://api.github.com/users/joshma/orgs","repos_url":"https://api.github.com/users/joshma/repos","events_url":"https://api.github.com/users/joshma/events{/privacy}","received_events_url":"https://api.github.com/users/joshma/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":9,"created_at":"2023-03-26T02:53:29Z","updated_at":"2023-06-26T14:07:08Z","closed_at":"2023-06-26T14:07:08Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\n```\r\nimport { Pool } from \"@neondatabase/serverless\";\r\n\r\nexport default async function handler() {\r\n  console.log(Object.keys(Pool));\r\n  return new Response(\"hello\");\r\n}\r\n\r\nexport const config = {\r\n  runtime: \"edge\",\r\n};\r\n```\r\n\r\nErrors on GET with:\r\n```\r\nwait  - compiling...\r\nwarn  - ./node_modules/@neondatabase/serverless/index.js\r\nCritical dependency: the request of a dependency is an expression\r\n\r\nImport trace for requested module:\r\n./node_modules/@neondatabase/serverless/index.js\r\n./node_modules/@neondatabase/serverless/index.mjs\r\nerror - node_modules/@neondatabase/serverless/index.js (43:0) @ <unknown>\r\nerror - p.allocUnsafe is not a function\r\nnull\r\n```\r\n\r\n## Expected result\r\n\r\nAny import seems to break\r\n\r\n## Actual result\r\n\r\nImports don't break\r\n\r\n## Environment\r\n`next@13.2.0`, `node@16.14.2`, `@neondatabase/serverless@0.2.8`\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/12/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/12/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/11","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/11/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/11/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/11/events","html_url":"https://github.com/neondatabase/serverless/issues/11","id":1630599846,"node_id":"I_kwDOIQekeM5hMPqm","number":11,"title":" Error in cloudflare workers : Uncaught (in response) Error: The script will never generate a response","user":{"login":"mrcndn","id":35892962,"node_id":"MDQ6VXNlcjM1ODkyOTYy","avatar_url":"https://avatars.githubusercontent.com/u/35892962?v=4","gravatar_id":"","url":"https://api.github.com/users/mrcndn","html_url":"https://github.com/mrcndn","followers_url":"https://api.github.com/users/mrcndn/followers","following_url":"https://api.github.com/users/mrcndn/following{/other_user}","gists_url":"https://api.github.com/users/mrcndn/gists{/gist_id}","starred_url":"https://api.github.com/users/mrcndn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mrcndn/subscriptions","organizations_url":"https://api.github.com/users/mrcndn/orgs","repos_url":"https://api.github.com/users/mrcndn/repos","events_url":"https://api.github.com/users/mrcndn/events{/privacy}","received_events_url":"https://api.github.com/users/mrcndn/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":17,"created_at":"2023-03-18T21:02:18Z","updated_at":"2023-06-20T08:11:48Z","closed_at":"2023-06-20T08:11:48Z","author_association":"NONE","active_lock_reason":null,"body":"Hi I’m getting the following error in Cloudflare workers\r\n\r\n```\r\nA hanging Promise was canceled. This happens when the worker runtime is waiting for a Promise from JavaScript to resolve, but has detected that the Promise cannot possibly ever resolve because all code and events related to the Promise's I/O context have already finished. ✘ [ERROR] Uncaught (in response) Error: The script will never generate a response.\r\n```\r\n\r\nMy code is simple\r\n\r\n```\r\nimport { Client } from '@neondatabase/serverless'\r\nimport { Env } from './models'\r\n\r\nexport default {\r\n    async fetch(request: Request, env: Env, ctx: ExecutionContext) {\r\n        const client = new Client({/*details*/})\r\n        await client.connect()\r\n        const {\r\n            rows: [{ now }]\r\n        } = await client.query('select now();')\r\n        ctx.waitUntil(client.end())\r\n        return new Response(now)\r\n    }\r\n}\r\n```\r\n\r\nI have found the following page but it does not mention any solution [\"The script will never generate a response” on CloudFlare Workers | Zuplo Docs](https://zuplo.com/blog/the-script-will-never-generate-a-response-on-cloudflare-workers/)\r\n\r\nFollowing code still getting the error.\r\n```\t\r\nawait client.connect()\r\n/*\r\n\r\nconst {\r\n\trows: [{ now }]\r\n} = await client.query('select now();')\r\nctx.waitUntil(client.end())\r\n*/\r\n\r\nreturn new Response('eeee')\r\n```\r\n\r\nAfter comment out \r\n`await client.connect()`\r\nthe code starting to run\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/11/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/11/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/10","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/10/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/10/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/10/events","html_url":"https://github.com/neondatabase/serverless/issues/10","id":1628355658,"node_id":"I_kwDOIQekeM5hDrxK","number":10,"title":"Can't call WebSocket send() after close().","user":{"login":"jeremyjacob","id":44799944,"node_id":"MDQ6VXNlcjQ0Nzk5OTQ0","avatar_url":"https://avatars.githubusercontent.com/u/44799944?v=4","gravatar_id":"","url":"https://api.github.com/users/jeremyjacob","html_url":"https://github.com/jeremyjacob","followers_url":"https://api.github.com/users/jeremyjacob/followers","following_url":"https://api.github.com/users/jeremyjacob/following{/other_user}","gists_url":"https://api.github.com/users/jeremyjacob/gists{/gist_id}","starred_url":"https://api.github.com/users/jeremyjacob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeremyjacob/subscriptions","organizations_url":"https://api.github.com/users/jeremyjacob/orgs","repos_url":"https://api.github.com/users/jeremyjacob/repos","events_url":"https://api.github.com/users/jeremyjacob/events{/privacy}","received_events_url":"https://api.github.com/users/jeremyjacob/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2023-03-16T21:59:08Z","updated_at":"2023-03-20T01:50:37Z","closed_at":"2023-03-17T19:50:33Z","author_association":"NONE","active_lock_reason":null,"body":"Thank you to the NeonDB team for this library. After facing issues with Kysely and PlanetScale we took a look at migrating to Zapatos with NeonDB. Currently we are just testing the integration but are considering a full migration if everything goes smoothly.\r\n\r\n## Steps to reproduce\r\n\r\nUnknown as the issue has appeared in a large-ish codebase after a migration to @neondatabase/serverless\r\n\r\n## Expected result\r\n\r\nQuery result is returned\r\n\r\n## Actual result\r\n\r\n```\r\nPOST /api/v1/internal.authentication.begin 500 Internal Server Error (279.52ms, waitUntil: 279.54ms)\r\n[mf:err] Unhandled Promise Rejection: TypeError: Can't call WebSocket send() after close().\r\n    at _WebSocket.[kSend] (/Users/jeremyjacob/Documents/GitHub/Project/node_modules/.pnpm/@miniflare+web-sockets@2.12.1/node_modules/@miniflare/web-sockets/src/websocket.ts:262:13)\r\n    at _WebSocket.send (/Users/jeremyjacob/Documents/GitHub/Project/node_modules/.pnpm/@miniflare+web-sockets@2.12.1/node_modules/@miniflare/web-sockets/src/websocket.ts:254:10)\r\n    at /Users/jeremyjacob/Documents/GitHub/Project/node_modules/.pnpm/@neondatabase+serverless@0.2.8/node_modules/@neondatabase/serverless/index.js:43:4406\r\n    at Timeout._onTimeout (/Users/jeremyjacob/Documents/GitHub/Project/node_modules/.pnpm/@miniflare+core@2.12.1/node_modules/@miniflare/core/src/standards/timers.ts:20:13)\r\n```\r\n\r\n## Environment\r\n\r\n`@neondatabase/serverless` v0.2.8 with `pg` shim for Zapatos. Using Cloudflare workers. Error appears when running locally, although I have not tried deploying this code. \r\nMy main request handler looks like this:\r\n```ts\r\napp.all(\"/api/v1/*\", async (c) => {\r\n\tconst pool = new Pool({ connectionString: c.env.DATABASE_URL });\r\n\tconst res = await fetchRequestHandler({\r\n\t\tendpoint: \"/api/v1\",\r\n\t\treq: c.req as unknown as Request,\r\n\t\trouter: appRouter,\r\n\t\tcreateContext: createCreateContext({ c, pool }),\r\n\t});\r\n\r\n\tc.executionCtx.waitUntil(pool.end());\r\n\treturn res;\r\n});\r\n```","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/10/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/10/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/9","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/9/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/9/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/9/events","html_url":"https://github.com/neondatabase/serverless/issues/9","id":1619230776,"node_id":"I_kwDOIQekeM5gg4A4","number":9,"title":"Cloudflare Worker Transaction Support","user":{"login":"cayter","id":242017,"node_id":"MDQ6VXNlcjI0MjAxNw==","avatar_url":"https://avatars.githubusercontent.com/u/242017?v=4","gravatar_id":"","url":"https://api.github.com/users/cayter","html_url":"https://github.com/cayter","followers_url":"https://api.github.com/users/cayter/followers","following_url":"https://api.github.com/users/cayter/following{/other_user}","gists_url":"https://api.github.com/users/cayter/gists{/gist_id}","starred_url":"https://api.github.com/users/cayter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cayter/subscriptions","organizations_url":"https://api.github.com/users/cayter/orgs","repos_url":"https://api.github.com/users/cayter/repos","events_url":"https://api.github.com/users/cayter/events{/privacy}","received_events_url":"https://api.github.com/users/cayter/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":2,"created_at":"2023-03-10T16:16:26Z","updated_at":"2023-03-23T13:46:06Z","closed_at":"2023-03-23T10:00:58Z","author_association":"NONE","active_lock_reason":null,"body":"Is there any documentation around how transaction support looks like with this library or it'd just work as documented in node-postgres [documentation](https://node-postgres.com/features/transactions)? Thanks.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/9/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/9/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/8","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/8/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/8/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/8/events","html_url":"https://github.com/neondatabase/serverless/issues/8","id":1594005109,"node_id":"I_kwDOIQekeM5fApZ1","number":8,"title":"Cloudflare support: ws requires \"crypto\"","user":{"login":"bbigras","id":24027,"node_id":"MDQ6VXNlcjI0MDI3","avatar_url":"https://avatars.githubusercontent.com/u/24027?v=4","gravatar_id":"","url":"https://api.github.com/users/bbigras","html_url":"https://github.com/bbigras","followers_url":"https://api.github.com/users/bbigras/followers","following_url":"https://api.github.com/users/bbigras/following{/other_user}","gists_url":"https://api.github.com/users/bbigras/gists{/gist_id}","starred_url":"https://api.github.com/users/bbigras/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbigras/subscriptions","organizations_url":"https://api.github.com/users/bbigras/orgs","repos_url":"https://api.github.com/users/bbigras/repos","events_url":"https://api.github.com/users/bbigras/events{/privacy}","received_events_url":"https://api.github.com/users/bbigras/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2023-02-21T19:40:12Z","updated_at":"2023-06-09T11:20:25Z","closed_at":"2023-06-09T11:20:25Z","author_association":"NONE","active_lock_reason":null,"body":"Correct me if I'm wrong, but [ws](https://github.com/websockets/ws) requires crypto, which doesn't work with Cloudflare, right?\r\n\r\n> Note: This module does not work in the browser. The client in the docs is a reference to a back end with the role of a client in the [WebSocket](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket) communication. Browser clients must use the native WebSocket object. To make the same code work seamlessly on Node.js and the browser, you can use one of the many wrappers available on npm, like [isomorphic-ws](https://github.com/heineiuo/isomorphic-ws).","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/8/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/8/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/7","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/7/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/7/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/7/events","html_url":"https://github.com/neondatabase/serverless/issues/7","id":1583402560,"node_id":"I_kwDOIQekeM5eYM5A","number":7,"title":"InvalidArgumentError: invalid upgrade header","user":{"login":"bbigras","id":24027,"node_id":"MDQ6VXNlcjI0MDI3","avatar_url":"https://avatars.githubusercontent.com/u/24027?v=4","gravatar_id":"","url":"https://api.github.com/users/bbigras","html_url":"https://github.com/bbigras","followers_url":"https://api.github.com/users/bbigras/followers","following_url":"https://api.github.com/users/bbigras/following{/other_user}","gists_url":"https://api.github.com/users/bbigras/gists{/gist_id}","starred_url":"https://api.github.com/users/bbigras/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbigras/subscriptions","organizations_url":"https://api.github.com/users/bbigras/orgs","repos_url":"https://api.github.com/users/bbigras/repos","events_url":"https://api.github.com/users/bbigras/events{/privacy}","received_events_url":"https://api.github.com/users/bbigras/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":6,"created_at":"2023-02-14T02:58:05Z","updated_at":"2023-03-07T18:05:21Z","closed_at":"2023-03-07T18:05:20Z","author_association":"NONE","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\n- clone https://github.com/bbigras/test-qwik-neon\r\n- npm install\r\n- replace \"fake url\" in `src/routes/index.tsx` by the **connection string** from neon.tech (ex: `postgres://bbigras@SOMETHING.us-east-2.aws.neon.tech/neondb`)\r\n- npm run dev\r\n- access http://localhost:5173/\r\n\r\nIs the connection string the right URL? `invalid upgrade header` sounds like a websocket error, so I'm wondering if I was supposed to use the connection string or maybe a URL for the proxy.\r\n\r\n## Expected result\r\n\r\n## Actual result\r\n\r\n```\r\nnode:internal/deps/undici/undici:14152\r\n    Error.captureStackTrace(err, this);\r\n          ^\r\n\r\nTypeError: fetch failed\r\n    at Object.fetch (node:internal/deps/undici/undici:14152:11) {\r\n  cause: InvalidArgumentError: invalid upgrade header\r\n      at processHeader (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/core/request.js:352:11)\r\n      at new Request (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/core/request.js:162:9)\r\n      at [dispatch] (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/client.js:280:21)\r\n      at Intercept (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/interceptor/redirectInterceptor.js:11:16)\r\n      at [Intercepted Dispatch] (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/dispatcher-base.js:157:12)\r\n      at Client.dispatch (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/dispatcher-base.js:178:40)\r\n      at [dispatch] (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/pool-base.js:143:28)\r\n      at [Intercepted Dispatch] (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/dispatcher-base.js:149:29)\r\n      at Pool.dispatch (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/dispatcher-base.js:178:40)\r\n      at [dispatch] (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/agent.js:118:23)\r\n      at Intercept (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/interceptor/redirectInterceptor.js:11:16)\r\n      at [Intercepted Dispatch] (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/dispatcher-base.js:157:12)\r\n      at Agent.dispatch (/home/bbigras/dev/test-qwik-neon/node_modules/undici/lib/dispatcher-base.js:178:40)\r\n      at node:internal/deps/undici/undici:14046:83\r\n      at new Promise (<anonymous>)\r\n      at dispatch (node:internal/deps/undici/undici:14046:16)\r\n      at httpNetworkFetch (node:internal/deps/undici/undici:13954:65)\r\n      at httpNetworkOrCacheFetch (node:internal/deps/undici/undici:13856:39)\r\n      at httpFetch (node:internal/deps/undici/undici:13705:43)\r\n      at schemeFetch (node:internal/deps/undici/undici:13633:24)\r\n      at node:internal/deps/undici/undici:13509:26\r\n      at mainFetch (node:internal/deps/undici/undici:13526:11)\r\n      at fetching (node:internal/deps/undici/undici:13483:7)\r\n      at fetch2 (node:internal/deps/undici/undici:13361:20)\r\n      at Object.fetch (node:internal/deps/undici/undici:14150:18)\r\n      at fetch (node:internal/process/pre_execution:237:25)\r\n      at ws (/home/bbigras/dev/test-qwik-neon/node_modules/@neondatabase/serverless/index.js:43:2810)\r\n      at new Promise (<anonymous>)\r\n      at G.connect (/home/bbigras/dev/test-qwik-neon/node_modules/@neondatabase/serverless/index.js:43:2505)\r\n      at hn.connect (/home/bbigras/dev/test-qwik-neon/node_modules/@neondatabase/serverless/index.js:43:19336)\r\n      at jt._connect (/home/bbigras/dev/test-qwik-neon/node_modules/@neondatabase/serverless/index.js:43:23419)\r\n      at /home/bbigras/dev/test-qwik-neon/node_modules/@neondatabase/serverless/index.js:43:24102\r\n      at new Promise (<anonymous>)\r\n      at jt.connect (/home/bbigras/dev/test-qwik-neon/node_modules/@neondatabase/serverless/index.js:43:24071)\r\n      at jt.connect (/home/bbigras/dev/test-qwik-neon/node_modules/@neondatabase/serverless/index.js:43:45697)\r\n      at routes_component_xYL1qOwPyDI (/src/routes_component_xyl1qowpydi.js:9:18)\r\n      at invoke (file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/core.mjs:707:26)\r\n      at file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/core.mjs:6618:28\r\n      at async Promise.all (index 0)\r\n      at async Promise.all (index 0)\r\n      at async renderRoot (file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/core.mjs:7902:5)\r\n      at async _renderSSR (file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/core.mjs:7898:5)\r\n      at async Proxy.renderToStream (file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/server.mjs:642:3)\r\n      at async /home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/optimizer.cjs:1767:28 {\r\n    code: 'UND_ERR_INVALID_ARG'\r\n  }\r\n}\r\n\r\nNode.js v18.14.0\r\n```\r\n\r\n## Environment\r\n  npm: '9.3.1',\r\n  node: '18.14.0'\r\n\r\n## Logs, links\r\n- \r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/7/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/7/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/6","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/6/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/6/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/6/events","html_url":"https://github.com/neondatabase/serverless/issues/6","id":1552043573,"node_id":"I_kwDOIQekeM5cgk41","number":6,"title":"Any ORM or Query builder example?","user":{"login":"shinebayar-g","id":3091558,"node_id":"MDQ6VXNlcjMwOTE1NTg=","avatar_url":"https://avatars.githubusercontent.com/u/3091558?v=4","gravatar_id":"","url":"https://api.github.com/users/shinebayar-g","html_url":"https://github.com/shinebayar-g","followers_url":"https://api.github.com/users/shinebayar-g/followers","following_url":"https://api.github.com/users/shinebayar-g/following{/other_user}","gists_url":"https://api.github.com/users/shinebayar-g/gists{/gist_id}","starred_url":"https://api.github.com/users/shinebayar-g/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shinebayar-g/subscriptions","organizations_url":"https://api.github.com/users/shinebayar-g/orgs","repos_url":"https://api.github.com/users/shinebayar-g/repos","events_url":"https://api.github.com/users/shinebayar-g/events{/privacy}","received_events_url":"https://api.github.com/users/shinebayar-g/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":12,"created_at":"2023-01-22T08:36:33Z","updated_at":"2023-06-20T22:22:04Z","closed_at":"2023-06-20T08:12:39Z","author_association":"NONE","active_lock_reason":null,"body":"Hi, thanks for the great package. It really solves the issue with Cloudflare workers. Is there any compatible ORM or Query builder type of library that works with neon serverless? Just tried Prisma looks like it doesn't work.","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/6/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/6/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/5","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/5/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/5/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/5/events","html_url":"https://github.com/neondatabase/serverless/issues/5","id":1550946992,"node_id":"I_kwDOIQekeM5ccZKw","number":5,"title":"[vite] Internal server error: Cannot read properties of undefined (reading 'Client')","user":{"login":"bbigras","id":24027,"node_id":"MDQ6VXNlcjI0MDI3","avatar_url":"https://avatars.githubusercontent.com/u/24027?v=4","gravatar_id":"","url":"https://api.github.com/users/bbigras","html_url":"https://github.com/bbigras","followers_url":"https://api.github.com/users/bbigras/followers","following_url":"https://api.github.com/users/bbigras/following{/other_user}","gists_url":"https://api.github.com/users/bbigras/gists{/gist_id}","starred_url":"https://api.github.com/users/bbigras/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbigras/subscriptions","organizations_url":"https://api.github.com/users/bbigras/orgs","repos_url":"https://api.github.com/users/bbigras/repos","events_url":"https://api.github.com/users/bbigras/events{/privacy}","received_events_url":"https://api.github.com/users/bbigras/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":1,"created_at":"2023-01-20T14:32:43Z","updated_at":"2023-02-14T02:45:55Z","closed_at":"2023-02-14T02:45:55Z","author_association":"NONE","active_lock_reason":null,"body":"# Steps to reproduce\r\n\r\n- clone https://github.com/bbigras/test-qwik-neon\r\n- npm install\r\n- npm run build\r\n\r\n  \r\n```\r\n16 h 14 min 13 s [vite] Internal server error: Cannot read properties of undefined (reading 'Client')\r\n  File: /home/bbigras/dev/test-qwik-neon/src/routes/index.tsx:13:21\r\n  11 |   *  */\r\n  12 |  export default component$(() => {\r\n  13 |    const client = new Client(\"http://127.0.0.1\");\r\n     |                      ^\r\n  14 |    /* console.log(\"client\", client); */\r\n  15 |\r\n      at routes_component_xYL1qOwPyDI (/home/bbigras/dev/test-qwik-neon/src/routes/index.tsx:13:21)\r\n      at invoke (file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/core.mjs:706:26)\r\n      at file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/core.mjs:6348:28\r\n      at async Promise.all (index 0)\r\n      at async Promise.all (index 0)\r\n      at async renderRoot (file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/core.mjs:6840:5)\r\n      at async renderSSR (file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/core.mjs:6836:5)\r\n      at async Proxy.renderToStream (file:///home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/server.mjs:632:3)\r\n      at async /home/bbigras/dev/test-qwik-neon/node_modules/@builder.io/qwik/optimizer.cjs:1763:28\r\n```\r\n\r\n_Originally posted by @bbigras in https://github.com/neondatabase/serverless/issues/1#issuecomment-1397619235_\r\n            ","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/5/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/5/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/4","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/4/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/4/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/4/events","html_url":"https://github.com/neondatabase/serverless/pull/4","id":1516470345,"node_id":"PR_kwDOIQekeM5GfjhB","number":4,"title":"Connect to wss without wsproxy","user":{"login":"petuhovskiy","id":8150127,"node_id":"MDQ6VXNlcjgxNTAxMjc=","avatar_url":"https://avatars.githubusercontent.com/u/8150127?v=4","gravatar_id":"","url":"https://api.github.com/users/petuhovskiy","html_url":"https://github.com/petuhovskiy","followers_url":"https://api.github.com/users/petuhovskiy/followers","following_url":"https://api.github.com/users/petuhovskiy/following{/other_user}","gists_url":"https://api.github.com/users/petuhovskiy/gists{/gist_id}","starred_url":"https://api.github.com/users/petuhovskiy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/petuhovskiy/subscriptions","organizations_url":"https://api.github.com/users/petuhovskiy/orgs","repos_url":"https://api.github.com/users/petuhovskiy/repos","events_url":"https://api.github.com/users/petuhovskiy/events{/privacy}","received_events_url":"https://api.github.com/users/petuhovskiy/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":10,"created_at":"2023-01-02T14:45:56Z","updated_at":"2023-02-09T17:09:20Z","closed_at":"2023-01-19T21:03:18Z","author_association":"MEMBER","active_lock_reason":null,"draft":false,"pull_request":{"url":"https://api.github.com/repos/neondatabase/serverless/pulls/4","html_url":"https://github.com/neondatabase/serverless/pull/4","diff_url":"https://github.com/neondatabase/serverless/pull/4.diff","patch_url":"https://github.com/neondatabase/serverless/pull/4.patch","merged_at":null},"body":"Needed to work on https://github.com/neondatabase/neon/issues/3225","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/4/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/4/timeline","performed_via_github_app":null,"state_reason":null},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/3","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/3/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/3/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/3/events","html_url":"https://github.com/neondatabase/serverless/issues/3","id":1499081751,"node_id":"I_kwDOIQekeM5ZWiwX","number":3,"title":"wsAddr has a hard-coded `/v1`","user":{"login":"greyscaled","id":11184711,"node_id":"MDQ6VXNlcjExMTg0NzEx","avatar_url":"https://avatars.githubusercontent.com/u/11184711?v=4","gravatar_id":"","url":"https://api.github.com/users/greyscaled","html_url":"https://github.com/greyscaled","followers_url":"https://api.github.com/users/greyscaled/followers","following_url":"https://api.github.com/users/greyscaled/following{/other_user}","gists_url":"https://api.github.com/users/greyscaled/gists{/gist_id}","starred_url":"https://api.github.com/users/greyscaled/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greyscaled/subscriptions","organizations_url":"https://api.github.com/users/greyscaled/orgs","repos_url":"https://api.github.com/users/greyscaled/repos","events_url":"https://api.github.com/users/greyscaled/events{/privacy}","received_events_url":"https://api.github.com/users/greyscaled/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":4,"created_at":"2022-12-15T21:02:58Z","updated_at":"2023-01-20T12:54:33Z","closed_at":"2022-12-19T14:16:23Z","author_association":"NONE","active_lock_reason":null,"body":"👋🏻 Hi there, really cool package, I just noticed the below in the code, I'd be happy to help contrib it.\r\n\r\n## Steps to reproduce\r\n\r\nI was trying to run this in a browser with a custom proxy, and for reasons related to #1 , I wasn't fully successful. That said, I am _pretty sure_ this would be the repro:\r\n\r\n```ts\r\nimport { Client, neonConfig } from '@neondatabase/serverless';\r\n\r\nneonConfig.wsProxy = 'my-service/ws/proxy';\r\n\r\nasync function whatsTheTimeMrPostgres() {\r\n  const client = new Client(env.DATABASE_URL);\r\n  await client.connect();\r\n  const { rows: [{ now }] } = await client.query('select now();');\r\n  await client.end();\r\n  return now;\r\n}\r\n```\r\n\r\n## Expected result\r\n\r\nThe ws proxy address that would be called is:\r\n\r\n```\r\nws://my-service/ws/proxy?address=host:port\r\n```\r\n\r\n## Actual result\r\n\r\n```\r\nws://my-service/ws/proxy/v1?address=host:port\r\n```\r\n\r\nI think this is just a matter of a hard-code. I know the `no-webassembly` branch is under heavy dev, so I'm going to permalink from that branch instead of `main`:\r\n\r\nhttps://github.com/neondatabase/serverless/blob/f8ef1f4e48d571d53186e05456892e6cdf532128/shims/net/index.ts#L74\r\n\r\nI don't know if this would break an internal use case for you, but I wonder if it could be as simple as just adding the `/v1` here:\r\n\r\nhttps://github.com/neondatabase/serverless/blob/f8ef1f4e48d571d53186e05456892e6cdf532128/shims/net/index.ts#L48\r\n\r\nLike so:\r\n\r\n```ts\r\nstatic wsProxy: string | ((host: string) => string) = 'ws.manipulexity.com/v1';\r\n```\r\n\r\nOpen to other alternatives or comments, happy to contrib/help against `main` if you'd like 😄.\r\n\r\nThanks!\r\n\r\n## Environment\r\n\r\n- Browser (Chrome)\r\n- Custom WS Proxy\r\n\r\n## Logs, links\r\n- \r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/3/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/3/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/2","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/2/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/2/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/2/events","html_url":"https://github.com/neondatabase/serverless/issues/2","id":1494051956,"node_id":"I_kwDOIQekeM5ZDWx0","number":2,"title":"When no `connect()` is called in `pg-node` driver we are not intercepting connection (looks like it)","user":{"login":"kelvich","id":284219,"node_id":"MDQ6VXNlcjI4NDIxOQ==","avatar_url":"https://avatars.githubusercontent.com/u/284219?v=4","gravatar_id":"","url":"https://api.github.com/users/kelvich","html_url":"https://github.com/kelvich","followers_url":"https://api.github.com/users/kelvich/followers","following_url":"https://api.github.com/users/kelvich/following{/other_user}","gists_url":"https://api.github.com/users/kelvich/gists{/gist_id}","starred_url":"https://api.github.com/users/kelvich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kelvich/subscriptions","organizations_url":"https://api.github.com/users/kelvich/orgs","repos_url":"https://api.github.com/users/kelvich/repos","events_url":"https://api.github.com/users/kelvich/events{/privacy}","received_events_url":"https://api.github.com/users/kelvich/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":3,"created_at":"2022-12-13T11:33:10Z","updated_at":"2022-12-14T12:41:46Z","closed_at":"2022-12-14T12:41:46Z","author_association":"CONTRIBUTOR","active_lock_reason":null,"body":"## Steps to reproduce\r\n\r\nhttps://twitter.com/_alexblokh/status/1602397018445516807\r\n\r\ndidn't try to reproduce myself though","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/2/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/2/timeline","performed_via_github_app":null,"state_reason":"completed"},{"url":"https://api.github.com/repos/neondatabase/serverless/issues/1","repository_url":"https://api.github.com/repos/neondatabase/serverless","labels_url":"https://api.github.com/repos/neondatabase/serverless/issues/1/labels{/name}","comments_url":"https://api.github.com/repos/neondatabase/serverless/issues/1/comments","events_url":"https://api.github.com/repos/neondatabase/serverless/issues/1/events","html_url":"https://github.com/neondatabase/serverless/issues/1","id":1480848745,"node_id":"I_kwDOIQekeM5YQ_Vp","number":1,"title":"[vite:wasm-fallback] Could not load [...] @neondatabase/serverless/tls.wasm [...] \"ESM integration proposal for Wasm\" is not supported currently.","user":{"login":"bbigras","id":24027,"node_id":"MDQ6VXNlcjI0MDI3","avatar_url":"https://avatars.githubusercontent.com/u/24027?v=4","gravatar_id":"","url":"https://api.github.com/users/bbigras","html_url":"https://github.com/bbigras","followers_url":"https://api.github.com/users/bbigras/followers","following_url":"https://api.github.com/users/bbigras/following{/other_user}","gists_url":"https://api.github.com/users/bbigras/gists{/gist_id}","starred_url":"https://api.github.com/users/bbigras/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bbigras/subscriptions","organizations_url":"https://api.github.com/users/bbigras/orgs","repos_url":"https://api.github.com/users/bbigras/repos","events_url":"https://api.github.com/users/bbigras/events{/privacy}","received_events_url":"https://api.github.com/users/bbigras/received_events","type":"User","site_admin":false},"labels":[],"state":"closed","locked":false,"assignee":null,"assignees":[],"milestone":null,"comments":11,"created_at":"2022-12-07T03:49:34Z","updated_at":"2023-02-14T02:45:33Z","closed_at":"2023-02-14T02:45:32Z","author_association":"NONE","active_lock_reason":null,"body":"I'm trying to use neon serverless with qwik (which uses vite).\r\n\r\n## Steps to reproduce\r\n\r\n- clone https://github.com/bbigras/test-qwik-neon\r\n- `npm install`\r\n- `npm run build`\r\n\r\n## Expected result\r\n\r\n\r\n## Actual result\r\n\r\n```\r\n[vite:wasm-fallback] Could not load /home/bbigras/dev/test-qwik-cf/node_modules/@neondatabase/serverless/tls.wasm (imported by node_modules/@neondatabase/serverless/tlsImport-C3RRX7ZD.js): \"ESM integration proposal for Wasm\" is not supported currently. Use vite-plugin-wasm or other community plugins to handle this. Alternatively, you can use `.wasm?init` or `.wasm?url`. See https://vitejs.dev/guide/features.html#webassembly for more details.\r\nerror during build:\r\nError: Could not load /home/bbigras/dev/test-qwik-cf/node_modules/@neondatabase/serverless/tls.wasm (imported by node_modules/@neondatabase/serverless/tlsImport-C3RRX7ZD.js): \"ESM integrationproposal for Wasm\" is not supported currently. Use vite-plugin-wasm or other community plugins to handle this. Alternatively, you can use `.wasm?init` or `.wasm?url`. See https://vitejs.dev/guide/features.html#webassembly for more details.\r\n    at Object.load (file:///home/bbigras/dev/test-qwik-cf/node_modules/vite/dist/node/chunks/dep-67e7f8ab.js:37402:19)\r\n    at file:///home/bbigras/dev/test-qwik-cf/node_modules/rollup/dist/es/shared/rollup.js:22748:40\r\n```\r\n\r\nI tried adding `vite-plugin-wasm` in vite.config.ts, but I get the same error.\r\n\r\n## Environment\r\n\r\n\r\n## Logs, links\r\n- https://github.com/bbigras/test-qwik-neon\r\n- https://stackblitz.com/edit/vitejs-vite-hgmlte?file=src/routes/index.tsx\r\n","reactions":{"url":"https://api.github.com/repos/neondatabase/serverless/issues/1/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"timeline_url":"https://api.github.com/repos/neondatabase/serverless/issues/1/timeline","performed_via_github_app":null,"state_reason":"completed"}]